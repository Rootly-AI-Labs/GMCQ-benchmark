{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix infinite scroll not working on profile media tab in web UI\n\nIssue Description:\nAlso refactor `<AccountGallery>`  into TypeScript.\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -9288,6 +9288,7 @@ noscript {\n   border: 1px solid $highlight-text-color;\n   background: rgba($highlight-text-color, 0.15);\n   overflow: hidden;\n+  flex-shrink: 0;\n \n   &__background-image {\n     width: 125%;\n---\n\n\n---\n\nChoice B:\nconfig/initializers/regexp.rb\n@@ -1,4 +1,4 @@\n # frozen_string_literal: true\n \n-# 0.5s is a fairly high timeout, but that should account for slow servers under load\n-Regexp.timeout = 0.5 if Regexp.respond_to?(:timeout=)\n+# 2s is a fairly high default, but that should account for slow servers under load\n+Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n---\nconfig/initializers/regexp.rb\n@@ -1,4 +0,0 @@\n-# frozen_string_literal: true\n-\n-# 2s is a fairly high default, but that should account for slow servers under load\n-Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n---\nconfig/initializers/regexp.rb\n@@ -1,4 +1,3 @@\n # frozen_string_literal: true\n \n-# 2s is a fairly high default, but that should account for slow servers under load\n-Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n+Regexp.timeout = ENV['REGEXP_TIMEOUT'].to_f if Regexp.respond_to?(:timeout=) && ENV['REGEXP_TIMEOUT']\n---\nGemfile\n@@ -53,7 +53,7 @@ gem 'hiredis', '~> 0.6'\n gem 'htmlentities', '~> 4.3'\n gem 'http', '~> 5.2.0'\n gem 'http_accept_language', '~> 2.1'\n-gem 'httplog', '~> 1.7.0'\n+gem 'httplog', '~> 1.7.0', require: false\n gem 'i18n'\n gem 'idn-ruby', require: 'idn'\n gem 'inline_svg'\n---\nconfig/initializers/httplog.rb\n@@ -1,7 +1,12 @@\n # frozen_string_literal: true\n \n-HttpLog.configure do |config|\n-  config.logger = Rails.logger\n-  config.color = { color: :yellow }\n-  config.compact_log = true\n+# Disable httplog in production unless log_level is `debug`\n+if !Rails.env.production? || Rails.configuration.log_level == :debug\n+  require 'httplog'\n+\n+  HttpLog.configure do |config|\n+    config.logger = Rails.logger\n+    config.color = { color: :yellow }\n+    config.compact_log = true\n+  end\n end\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -3611,6 +3611,7 @@ $ui-header-logo-wordmark-width: 99px;\n   overflow-y: auto;\n   width: 100%;\n   height: 100%;\n+  z-index: 0;\n }\n \n .drawer__inner__mastodon {\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/components.scss\n@@ -6437,7 +6437,7 @@ a.status-card {\n   }\n \n   .dialog-option .poll__input {\n-    border-color: $inverted-text-color;\n+    border-color: $darker-text-color;\n     color: $ui-secondary-color;\n     display: inline-flex;\n     align-items: center;\n@@ -6451,13 +6451,13 @@ a.status-card {\n     &:active,\n     &:focus,\n     &:hover {\n-      border-color: lighten($inverted-text-color, 15%);\n+      border-color: $valid-value-color;\n       border-width: 4px;\n     }\n \n     &.active {\n-      border-color: $inverted-text-color;\n-      background: $inverted-text-color;\n+      border-color: $valid-value-color;\n+      background: $valid-value-color;\n     }\n   }\n \n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix filtering for lists\n\nIssue Description:\nFix bug introduced in #33839\r\n\r\nThanks @noellabo for spotting this https://github.com/mastodon/mastodon/pull/33839#discussion_r1943082721\n\n---\n\nChoice A:\napp/lib/request.rb\n@@ -81,8 +81,11 @@ def initialize(verb, url, **options)\n         max_hops: 3,\n         on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n       },\n+    }.merge(options).merge(\n       socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n-    }.merge(options)\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n---\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice B:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice C:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/components.scss\n@@ -6437,7 +6437,7 @@ a.status-card {\n   }\n \n   .dialog-option .poll__input {\n-    border-color: $inverted-text-color;\n+    border-color: $darker-text-color;\n     color: $ui-secondary-color;\n     display: inline-flex;\n     align-items: center;\n@@ -6451,13 +6451,13 @@ a.status-card {\n     &:active,\n     &:focus,\n     &:hover {\n-      border-color: lighten($inverted-text-color, 15%);\n+      border-color: $valid-value-color;\n       border-width: 4px;\n     }\n \n     &.active {\n-      border-color: $inverted-text-color;\n-      background: $inverted-text-color;\n+      border-color: $valid-value-color;\n+      background: $valid-value-color;\n     }\n   }\n \n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix missing timeout options in `Request` class\n\nIssue Description:\nFixes #33764\r\n\r\nIn the refactor made in #33757, I failed to carry over the timeout options, causing improper timeout handling.\n\n---\n\nChoice A:\napp/models/trends/statuses.rb\n@@ -106,7 +106,7 @@ def klass\n   private\n \n   def eligible?(status)\n-    status.public_visibility? && status.account.discoverable? && !status.account.silenced? && !status.account.sensitized? && status.spoiler_text.blank? && !status.sensitive? && !status.reply? && valid_locale?(status.language)\n+    status.created_at.past? && status.public_visibility? && status.account.discoverable? && !status.account.silenced? && !status.account.sensitized? && status.spoiler_text.blank? && !status.sensitive? && !status.reply? && valid_locale?(status.language)\n   end\n \n   def calculate_scores(statuses, at_time)\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice C:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice D:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix \u201cx\u201d hotkey not working on boosted filtered posts\n\nIssue Description:\nFixes #33741\n\n---\n\nChoice A:\nCHANGELOG.md\n@@ -2,6 +2,29 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.7] - 2025-04-02\n+\n+### Add\n+\n+- Add delay to profile updates to debounce them (#34137 by @ClearlyClaire)\n+- Add support for paginating partial collections in `SynchronizeFollowersService` (#34272 and #34277 by @ClearlyClaire)\n+\n+### Changed\n+\n+- Change account suspensions to be federated to recently-followed accounts as well (#34294 by @ClearlyClaire)\n+- Change `AccountReachFinder` to consider statuses based on suspension date (#32805 and #34291 by @ClearlyClaire and @mjankowski)\n+- Change user archive signed URL TTL from 10 seconds to 1 hour (#34254 by @ClearlyClaire)\n+\n+### Fixed\n+\n+- Fix static version of animated PNG emojis not being properly extracted (#34337 by @ClearlyClaire)\n+- Fix filters not applying in detailed view, favourites and bookmarks (#34259 and #34260 by @ClearlyClaire)\n+- Fix handling of malformed/unusual HTML (#34201 by @ClearlyClaire)\n+- Fix `CacheBuster` being queued for missing media attachments (#34253 by @ClearlyClaire)\n+- Fix incorrect URL being used when cache busting (#34189 by @ClearlyClaire)\n+- Fix streaming server refusing unix socket path in `DATABASE_URL` (#34091 by @ClearlyClaire)\n+- Fix \u201cx\u201d hotkey not working on boosted filtered posts (#33758 by @ClearlyClaire)\n+\n ## [4.3.6] - 2025-03-13\n \n ### Security\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.6\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -102,7 +102,7 @@ services:\n   sidekiq:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      6\n+      7\n     end\n \n     def default_prerelease\n---\n\n\n---\n\nChoice B:\napp/javascript/styles/mastodon/components.scss\n@@ -1996,6 +1996,7 @@ body > [data-popper-placement] {\n \n         &__handle {\n           user-select: all;\n+          overflow-wrap: anywhere;\n         }\n       }\n \n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/forms.scss\n@@ -19,6 +19,10 @@ code {\n   margin-bottom: 24px;\n }\n \n+form.button_to {\n+  display: inline-block;\n+}\n+\n .fade-out-top {\n   position: relative;\n   overflow: hidden;\n---\napp/views/admin/accounts/_buttons.html.haml\n@@ -4,8 +4,8 @@\n     %p.muted-hint= deletion_request.present? ? t('admin.accounts.remote_suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.remote_suspension_irreversible')\n   - else\n     %p.muted-hint= deletion_request.present? ? t('admin.accounts.suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.suspension_irreversible')\n-  = link_to t('admin.accounts.undo_suspension'), unsuspend_admin_account_path(account.id), method: :post, class: 'button' if can?(:unsuspend, account)\n-  = link_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), method: :post, class: 'button' if can?(:redownload, account) && account.suspension_origin_remote?\n+  = button_to t('admin.accounts.undo_suspension'), unsuspend_admin_account_path(account.id), class: :button if can?(:unsuspend, account)\n+  = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button if can?(:redownload, account) && account.suspension_origin_remote?\n   - if deletion_request.present? && can?(:destroy, account)\n     = link_to t('admin.accounts.delete'), admin_account_path(account.id), method: :delete, class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure') }\n - else\n@@ -14,28 +14,28 @@\n       - if account.local? && account.user_approved?\n         = link_to t('admin.accounts.warn'), new_admin_account_action_path(account.id, type: 'none'), class: 'button' if can?(:warn, account)\n         - if account.user_disabled?\n-          = link_to t('admin.accounts.enable'), enable_admin_account_path(account.id), method: :post, class: 'button' if can?(:enable, account.user)\n+          = button_to t('admin.accounts.enable'), enable_admin_account_path(account.id), class: :button if can?(:enable, account.user)\n         - elsif can?(:disable, account.user)\n           = link_to t('admin.accounts.disable'), new_admin_account_action_path(account.id, type: 'disable'), class: 'button'\n       - if account.sensitized?\n-        = link_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), method: :post, class: 'button' if can?(:unsensitive, account)\n+        = button_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), class: :button if can?(:unsensitive, account)\n       - elsif !account.local? || account.user_approved?\n         = link_to t('admin.accounts.sensitive'), new_admin_account_action_path(account.id, type: 'sensitive'), class: 'button' if can?(:sensitive, account)\n       - if account.silenced?\n-        = link_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), method: :post, class: 'button' if can?(:unsilence, account)\n+        = button_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), class: :button if can?(:unsilence, account)\n       - elsif !account.local? || account.user_approved?\n         = link_to t('admin.accounts.silence'), new_admin_account_action_path(account.id, type: 'silence'), class: 'button' if can?(:silence, account)\n       - if account.local?\n         - if account.user_pending?\n-          = link_to t('admin.accounts.approve'), approve_admin_account_path(account.id), method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button' if can?(:approve, account.user)\n-          = link_to t('admin.accounts.reject'), reject_admin_account_path(account.id), method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive' if can?(:reject, account.user)\n+          = button_to t('admin.accounts.approve'), approve_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: :button if can?(:approve, account.user)\n+          = button_to t('admin.accounts.reject'), reject_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive' if can?(:reject, account.user)\n         - if !account.user_confirmed? && can?(:confirm, account.user)\n-          = link_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), method: :post, class: 'button'\n+          = button_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), class: :button\n       - if (!account.local? || account.user_approved?) && can?(:suspend, account)\n         = link_to t('admin.accounts.perform_full_suspension'), new_admin_account_action_path(account.id, type: 'suspend'), class: 'button'\n     %div\n       - if account.local?\n         - if !account.memorial? && account.user_approved? && can?(:memorialize, account)\n-          = link_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive'\n+          = button_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive'\n       - elsif can?(:redownload, account)\n-        = link_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), method: :post, class: 'button'\n+        = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button\n---\napp/views/admin/accounts/show.html.haml\n@@ -30,7 +30,7 @@\n = render 'admin/accounts/counters', account: @account\n \n - if @account.local? && @account.user.nil?\n-  = link_to t('admin.accounts.unblock_email'), unblock_email_admin_account_path(@account.id), method: :post, class: 'button' if can?(:unblock_email, @account) && CanonicalEmailBlock.exists?(reference_account_id: @account.id)\n+  = button_to t('admin.accounts.unblock_email'), unblock_email_admin_account_path(@account.id), class: :button if can?(:unblock_email, @account) && CanonicalEmailBlock.exists?(reference_account_id: @account.id)\n - else\n   .table-wrapper\n     %table.table.inline-table\n---\napp/views/admin/instances/show.html.haml\n@@ -21,7 +21,7 @@\n   - if @instance.domain_allow\n     = link_to t('admin.domain_allows.undo'), admin_domain_allow_path(@instance.domain_allow), class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }\n   - else\n-    = link_to t('admin.domain_allows.add_new'), admin_domain_allows_path(domain_allow: { domain: @instance.domain }), class: 'button', method: :post\n+    = button_to t('admin.domain_allows.add_new'), admin_domain_allows_path(domain_allow: { domain: @instance.domain }), class: :button\n - else\n   %p= t('admin.instances.content_policies.description_html')\n \n@@ -40,7 +40,7 @@\n             %td= @instance.domain_block.policies.map { |policy| t(policy, scope: 'admin.instances.content_policies.policies') }.join(' \u00b7 ')\n \n     = link_to t('admin.domain_blocks.edit'), edit_admin_domain_block_path(@instance.domain_block), class: 'button'\n-    = link_to t('admin.domain_blocks.undo'), admin_domain_block_path(@instance.domain_block), class: 'button', data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }\n+    = button_to t('admin.domain_blocks.undo'), admin_domain_block_path(@instance.domain_block), class: :button, data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }\n   - else\n     = link_to t('admin.domain_blocks.add_new'), new_admin_domain_block_path(_domain: @instance.domain), class: 'button'\n \n@@ -70,16 +70,16 @@\n       - if @instance.unavailable?\n         %span.negative-hint\n           = t('admin.instances.availability.failure_threshold_reached', date: l(@instance.unavailable_domain.created_at.to_date))\n-          = link_to t('admin.instances.delivery.restart'), restart_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }\n+          = button_to t('admin.instances.delivery.restart'), restart_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') }\n       - elsif @instance.exhausted_deliveries_days.empty?\n         %span.positive-hint\n           = t('admin.instances.availability.no_failures_recorded')\n-          = link_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }\n+          = button_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') }\n       - else\n         %span.negative-hint\n           = t('admin.instances.availability.failures_recorded', count: @instance.delivery_failure_tracker.days)\n-          %span= link_to t('admin.instances.delivery.clear'), clear_delivery_errors_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post } unless @instance.exhausted_deliveries_days.empty?\n-          %span= link_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }\n+          %span= button_to t('admin.instances.delivery.clear'), clear_delivery_errors_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') } unless @instance.exhausted_deliveries_days.empty?\n+          %span= button_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') }\n \n   - if @instance.purgeable?\n     %p= t('admin.instances.purge_description_html')\n---\napp/views/admin/invites/index.html.haml\n@@ -34,4 +34,4 @@\n = paginate @invites\n \n - if policy(:invite).deactivate_all?\n-  = link_to t('admin.invites.deactivate_all'), deactivate_all_admin_invites_path, method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button'\n+  = button_to t('admin.invites.deactivate_all'), deactivate_all_admin_invites_path, data: { confirm: t('admin.accounts.are_you_sure') }, class: :button\n---\napp/views/admin/reports/show.html.haml\n@@ -3,9 +3,9 @@\n \n - content_for :heading_actions do\n   - if @report.unresolved?\n-    = link_to t('admin.reports.mark_as_resolved'), resolve_admin_report_path(@report), method: :post, class: 'button'\n+    = button_to t('admin.reports.mark_as_resolved'), resolve_admin_report_path(@report), class: :button\n   - else\n-    = link_to t('admin.reports.mark_as_unresolved'), reopen_admin_report_path(@report), method: :post, class: 'button'\n+    = button_to t('admin.reports.mark_as_unresolved'), reopen_admin_report_path(@report), class: :button\n \n - unless @report.account.local? || @report.target_account.local?\n   .flash-message= t('admin.reports.forwarded_replies_explanation')\n---\napp/views/disputes/strikes/show.html.haml\n@@ -3,8 +3,8 @@\n \n - content_for :heading_actions do\n   - if @appeal.persisted?\n-    = link_to t('disputes.strikes.approve_appeal'), approve_admin_disputes_appeal_path(@appeal), method: :post, class: 'button' if can?(:approve, @appeal)\n-    = link_to t('disputes.strikes.reject_appeal'), reject_admin_disputes_appeal_path(@appeal), method: :post, class: 'button button--destructive' if can?(:reject, @appeal)\n+    = button_to t('disputes.strikes.approve_appeal'), approve_admin_disputes_appeal_path(@appeal), class: :button if can?(:approve, @appeal)\n+    = button_to t('disputes.strikes.reject_appeal'), reject_admin_disputes_appeal_path(@appeal), class: 'button button--destructive' if can?(:reject, @appeal)\n \n - if @strike.overruled?\n   %p.hint\n---\napp/views/settings/exports/show.html.haml\n@@ -46,7 +46,7 @@\n %p.muted-hint= t('exports.archive_takeout.hint_html')\n \n - if policy(:backup).create?\n-  %p= link_to t('exports.archive_takeout.request'), settings_export_path, class: 'button', method: :post\n+  %p= button_to t('exports.archive_takeout.request'), settings_export_path, class: :button\n \n - unless @backups.empty?\n   %hr.spacer/\n---\napp/views/settings/two_factor_authentication/otp_authentication/show.html.haml\n@@ -6,4 +6,4 @@\n \n   %hr.spacer/\n \n-  = link_to t('otp_authentication.setup'), settings_otp_authentication_path, data: { method: :post }, class: 'block-button'\n+  = button_to t('otp_authentication.setup'), settings_otp_authentication_path, class: 'block-button'\n---\napp/views/settings/two_factor_authentication_methods/index.html.haml\n@@ -2,7 +2,7 @@\n   = t('settings.two_factor_authentication')\n \n - content_for :heading_actions do\n-  = link_to t('two_factor_authentication.disable'), disable_settings_two_factor_authentication_methods_path, class: 'button button--destructive', method: :post\n+  = button_to t('two_factor_authentication.disable'), disable_settings_two_factor_authentication_methods_path, class: 'button button--destructive'\n \n %p.hint\n   %span.positive-hint\n@@ -38,4 +38,4 @@\n %hr.spacer/\n \n .simple_form\n-  = link_to t('two_factor_authentication.generate_recovery_codes'), settings_two_factor_authentication_recovery_codes_path, data: { method: :post }, class: 'block-button'\n+  = button_to t('two_factor_authentication.generate_recovery_codes'), settings_two_factor_authentication_recovery_codes_path, class: 'block-button'\n---\napp/helpers/admin/accounts_helper.rb\n@@ -11,8 +11,28 @@ def admin_accounts_moderation_options\n     ]\n   end\n \n+  def remote_suspension_hint(deletion_request)\n+    if deletion_request.present?\n+      t('admin.accounts.remote_suspension_reversible_hint_html', date: due_date_for_hint(deletion_request))\n+    else\n+      t('admin.accounts.remote_suspension_irreversible')\n+    end\n+  end\n+\n+  def suspension_hint(deletion_request)\n+    if deletion_request.present?\n+      t('admin.accounts.suspension_reversible_hint_html', date: due_date_for_hint(deletion_request))\n+    else\n+      t('admin.accounts.suspension_irreversible')\n+    end\n+  end\n+\n   private\n \n+  def due_date_for_hint(deletion_request)\n+    tag.strong(l(deletion_request.due_at.to_date))\n+  end\n+\n   def pending_user_count_label\n     number_with_delimiter User.pending.count\n   end\n---\napp/views/admin/accounts/_buttons.html.haml\n@@ -1,41 +1,31 @@\n-- if account.suspended?\n-  %hr.spacer/\n-  - if account.suspension_origin_remote?\n-    %p.muted-hint= deletion_request.present? ? t('admin.accounts.remote_suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.remote_suspension_irreversible')\n-  - else\n-    %p.muted-hint= deletion_request.present? ? t('admin.accounts.suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.suspension_irreversible')\n-  = button_to t('admin.accounts.undo_suspension'), unsuspend_admin_account_path(account.id), class: :button if can?(:unsuspend, account)\n-  = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button if can?(:redownload, account) && account.suspension_origin_remote?\n-  - if deletion_request.present? && can?(:destroy, account)\n-    = link_to t('admin.accounts.delete'), admin_account_path(account.id), method: :delete, class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure') }\n-- else\n-  .action-buttons\n-    %div\n-      - if account.local? && account.user_approved?\n-        = link_to t('admin.accounts.warn'), new_admin_account_action_path(account.id, type: 'none'), class: 'button' if can?(:warn, account)\n-        - if account.user_disabled?\n-          = button_to t('admin.accounts.enable'), enable_admin_account_path(account.id), class: :button if can?(:enable, account.user)\n-        - elsif can?(:disable, account.user)\n-          = link_to t('admin.accounts.disable'), new_admin_account_action_path(account.id, type: 'disable'), class: 'button'\n-      - if account.sensitized?\n-        = button_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), class: :button if can?(:unsensitive, account)\n-      - elsif !account.local? || account.user_approved?\n-        = link_to t('admin.accounts.sensitive'), new_admin_account_action_path(account.id, type: 'sensitive'), class: 'button' if can?(:sensitive, account)\n-      - if account.silenced?\n-        = button_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), class: :button if can?(:unsilence, account)\n-      - elsif !account.local? || account.user_approved?\n-        = link_to t('admin.accounts.silence'), new_admin_account_action_path(account.id, type: 'silence'), class: 'button' if can?(:silence, account)\n-      - if account.local?\n-        - if account.user_pending?\n-          = button_to t('admin.accounts.approve'), approve_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: :button if can?(:approve, account.user)\n-          = button_to t('admin.accounts.reject'), reject_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive' if can?(:reject, account.user)\n-        - if !account.user_confirmed? && can?(:confirm, account.user)\n-          = button_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), class: :button\n-      - if (!account.local? || account.user_approved?) && can?(:suspend, account)\n-        = link_to t('admin.accounts.perform_full_suspension'), new_admin_account_action_path(account.id, type: 'suspend'), class: 'button'\n-    %div\n-      - if account.local?\n-        - if !account.memorial? && account.user_approved? && can?(:memorialize, account)\n-          = button_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive'\n-      - elsif can?(:redownload, account)\n-        = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button\n+-# locals: (account:)\n+.action-buttons\n+  %div\n+    - if account.local? && account.user_approved?\n+      = link_to t('admin.accounts.warn'), new_admin_account_action_path(account.id, type: :none), class: :button if can?(:warn, account)\n+      - if account.user_disabled?\n+        = button_to t('admin.accounts.enable'), enable_admin_account_path(account.id), class: :button if can?(:enable, account.user)\n+      - elsif can?(:disable, account.user)\n+        = link_to t('admin.accounts.disable'), new_admin_account_action_path(account.id, type: :disable), class: :button\n+    - if account.sensitized?\n+      = button_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), class: :button if can?(:unsensitive, account)\n+    - elsif !account.local? || account.user_approved?\n+      = link_to t('admin.accounts.sensitive'), new_admin_account_action_path(account.id, type: :sensitive), class: :button if can?(:sensitive, account)\n+    - if account.silenced?\n+      = button_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), class: :button if can?(:unsilence, account)\n+    - elsif !account.local? || account.user_approved?\n+      = link_to t('admin.accounts.silence'), new_admin_account_action_path(account.id, type: :silence), class: :button if can?(:silence, account)\n+    - if account.local?\n+      - if account.user_pending?\n+        = button_to t('admin.accounts.approve'), approve_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: :button if can?(:approve, account.user)\n+        = button_to t('admin.accounts.reject'), reject_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: [:button, 'button--destructive'] if can?(:reject, account.user)\n+      - if !account.user_confirmed? && can?(:confirm, account.user)\n+        = button_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), class: :button\n+    - if (!account.local? || account.user_approved?) && can?(:suspend, account)\n+      = link_to t('admin.accounts.perform_full_suspension'), new_admin_account_action_path(account.id, type: :suspend), class: :button\n+  %div\n+    - if account.local?\n+      - if !account.memorial? && account.user_approved? && can?(:memorialize, account)\n+        = button_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: [:button, 'button--destructive']\n+    - elsif can?(:redownload, account)\n+      = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button\n---\napp/views/admin/accounts/_suspended_buttons.html.haml\n@@ -0,0 +1,25 @@\n+-# locals: (account:, deletion_request:)\n+%hr.spacer/\n+\n+%p.muted-hint\n+  - if account.suspension_origin_remote?\n+    = remote_suspension_hint(deletion_request)\n+  - else\n+    = suspension_hint(deletion_request)\n+\n+- if can?(:unsuspend, account)\n+  = button_to t('admin.accounts.undo_suspension'),\n+              unsuspend_admin_account_path(account.id),\n+              class: :button\n+\n+- if can?(:redownload, account) && account.suspension_origin_remote?\n+  = button_to t('admin.accounts.redownload'),\n+              redownload_admin_account_path(account.id),\n+              class: :button\n+\n+- if deletion_request.present? && can?(:destroy, account)\n+  = link_to t('admin.accounts.delete'),\n+            admin_account_path(account.id),\n+            class: [:button, 'button--destructive'],\n+            data: { confirm: t('admin.accounts.are_you_sure') },\n+            method: :delete\n---\napp/views/admin/accounts/show.html.haml\n@@ -40,7 +40,13 @@\n         - else\n           = render 'admin/accounts/remote_account', account: @account, domain_block: @domain_block\n \n-  = render 'admin/accounts/buttons', account: @account, deletion_request: @deletion_request\n+  - if @account.suspended?\n+    = render 'admin/accounts/suspended_buttons',\n+             account: @account,\n+             deletion_request: @deletion_request\n+  - else\n+    = render 'admin/accounts/buttons',\n+             account: @account\n \n   %hr.spacer/\n \n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/reset.scss\n@@ -56,7 +56,6 @@ table {\n @supports not selector(::-webkit-scrollbar) {\n   html {\n     scrollbar-color: $action-button-color var(--background-border-color);\n-    scrollbar-width: thin;\n   }\n }\n \n---\napp/javascript/styles/mastodon-light/diff.scss\n@@ -524,14 +524,3 @@ a.sparkline {\n     color: $dark-text-color;\n   }\n }\n-\n-@supports not selector(::-webkit-scrollbar) {\n-  html {\n-    scrollbar-color: rgba($action-button-color, 0.25)\n-      var(--background-border-color);\n-  }\n-}\n-\n-::-webkit-scrollbar-thumb {\n-  opacity: 0.25;\n-}\n---\napp/javascript/styles/mastodon/reset.scss\n@@ -52,32 +52,3 @@ table {\n   border-collapse: collapse;\n   border-spacing: 0;\n }\n-\n-@supports not selector(::-webkit-scrollbar) {\n-  html {\n-    scrollbar-color: $action-button-color var(--background-border-color);\n-    scrollbar-width: thin;\n-  }\n-}\n-\n-::-webkit-scrollbar {\n-  width: 8px;\n-  height: 8px;\n-}\n-\n-::-webkit-scrollbar-thumb {\n-  background-color: $action-button-color;\n-  border: 2px var(--background-border-color);\n-  border-radius: 12px;\n-  width: 6px;\n-  box-shadow: inset 0 0 0 2px var(--background-border-color);\n-}\n-\n-::-webkit-scrollbar-track {\n-  background-color: var(--background-border-color);\n-  border-radius: 0px;\n-}\n-\n-::-webkit-scrollbar-corner {\n-  background: transparent;\n-}\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix incorrect signature after HTTP redirect\n\nIssue Description:\nFixes #26529\r\n\r\nCurrently, we are signing HTTP requests ourselves then letting HTTP.rb do its work, including following redirects.\r\nThis means that redirects carry an incorrect signature.\r\n\r\nThis PR changes it to use HTTP.rb's `on_redirect` callback to recompute the signature from the redirected request. In order to do so, it also refactors signing code a bit.\n\n---\n\nChoice A:\napp/lib/request.rb\n@@ -81,8 +81,11 @@ def initialize(verb, url, **options)\n         max_hops: 3,\n         on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n       },\n+    }.merge(options).merge(\n       socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n-    }.merge(options)\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n---\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice B:\npublic/embed.js\n@@ -81,7 +81,7 @@ const allowedPrefixes = (document.currentScript && document.currentScript.tagNam\n       embeds.set(id, iframe);\n \n       iframe.allow = 'fullscreen';\n-      iframe.sandbox = 'allow-scripts allow-same-origin';\n+      iframe.sandbox = 'allow-scripts allow-same-origin allow-popups';\n       iframe.style.border = 0;\n       iframe.style.overflow = 'hidden';\n       iframe.style.display = 'block';\n@@ -112,7 +112,7 @@ const allowedPrefixes = (document.currentScript && document.currentScript.tagNam\n       iframe.width = container.clientWidth;\n       iframe.height = 0;\n       iframe.allow = 'fullscreen';\n-      iframe.sandbox = 'allow-scripts allow-same-origin';\n+      iframe.sandbox = 'allow-scripts allow-same-origin allow-popups';\n       iframe.style.border = 0;\n       iframe.style.overflow = 'hidden';\n       iframe.style.display = 'block';\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/forms.scss\n@@ -19,6 +19,10 @@ code {\n   margin-bottom: 24px;\n }\n \n+form.button_to {\n+  display: inline-block;\n+}\n+\n .fade-out-top {\n   position: relative;\n   overflow: hidden;\n---\napp/views/admin/accounts/_buttons.html.haml\n@@ -4,8 +4,8 @@\n     %p.muted-hint= deletion_request.present? ? t('admin.accounts.remote_suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.remote_suspension_irreversible')\n   - else\n     %p.muted-hint= deletion_request.present? ? t('admin.accounts.suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.suspension_irreversible')\n-  = link_to t('admin.accounts.undo_suspension'), unsuspend_admin_account_path(account.id), method: :post, class: 'button' if can?(:unsuspend, account)\n-  = link_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), method: :post, class: 'button' if can?(:redownload, account) && account.suspension_origin_remote?\n+  = button_to t('admin.accounts.undo_suspension'), unsuspend_admin_account_path(account.id), class: :button if can?(:unsuspend, account)\n+  = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button if can?(:redownload, account) && account.suspension_origin_remote?\n   - if deletion_request.present? && can?(:destroy, account)\n     = link_to t('admin.accounts.delete'), admin_account_path(account.id), method: :delete, class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure') }\n - else\n@@ -14,28 +14,28 @@\n       - if account.local? && account.user_approved?\n         = link_to t('admin.accounts.warn'), new_admin_account_action_path(account.id, type: 'none'), class: 'button' if can?(:warn, account)\n         - if account.user_disabled?\n-          = link_to t('admin.accounts.enable'), enable_admin_account_path(account.id), method: :post, class: 'button' if can?(:enable, account.user)\n+          = button_to t('admin.accounts.enable'), enable_admin_account_path(account.id), class: :button if can?(:enable, account.user)\n         - elsif can?(:disable, account.user)\n           = link_to t('admin.accounts.disable'), new_admin_account_action_path(account.id, type: 'disable'), class: 'button'\n       - if account.sensitized?\n-        = link_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), method: :post, class: 'button' if can?(:unsensitive, account)\n+        = button_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), class: :button if can?(:unsensitive, account)\n       - elsif !account.local? || account.user_approved?\n         = link_to t('admin.accounts.sensitive'), new_admin_account_action_path(account.id, type: 'sensitive'), class: 'button' if can?(:sensitive, account)\n       - if account.silenced?\n-        = link_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), method: :post, class: 'button' if can?(:unsilence, account)\n+        = button_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), class: :button if can?(:unsilence, account)\n       - elsif !account.local? || account.user_approved?\n         = link_to t('admin.accounts.silence'), new_admin_account_action_path(account.id, type: 'silence'), class: 'button' if can?(:silence, account)\n       - if account.local?\n         - if account.user_pending?\n-          = link_to t('admin.accounts.approve'), approve_admin_account_path(account.id), method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button' if can?(:approve, account.user)\n-          = link_to t('admin.accounts.reject'), reject_admin_account_path(account.id), method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive' if can?(:reject, account.user)\n+          = button_to t('admin.accounts.approve'), approve_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: :button if can?(:approve, account.user)\n+          = button_to t('admin.accounts.reject'), reject_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive' if can?(:reject, account.user)\n         - if !account.user_confirmed? && can?(:confirm, account.user)\n-          = link_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), method: :post, class: 'button'\n+          = button_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), class: :button\n       - if (!account.local? || account.user_approved?) && can?(:suspend, account)\n         = link_to t('admin.accounts.perform_full_suspension'), new_admin_account_action_path(account.id, type: 'suspend'), class: 'button'\n     %div\n       - if account.local?\n         - if !account.memorial? && account.user_approved? && can?(:memorialize, account)\n-          = link_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive'\n+          = button_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive'\n       - elsif can?(:redownload, account)\n-        = link_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), method: :post, class: 'button'\n+        = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button\n---\napp/views/admin/accounts/show.html.haml\n@@ -30,7 +30,7 @@\n = render 'admin/accounts/counters', account: @account\n \n - if @account.local? && @account.user.nil?\n-  = link_to t('admin.accounts.unblock_email'), unblock_email_admin_account_path(@account.id), method: :post, class: 'button' if can?(:unblock_email, @account) && CanonicalEmailBlock.exists?(reference_account_id: @account.id)\n+  = button_to t('admin.accounts.unblock_email'), unblock_email_admin_account_path(@account.id), class: :button if can?(:unblock_email, @account) && CanonicalEmailBlock.exists?(reference_account_id: @account.id)\n - else\n   .table-wrapper\n     %table.table.inline-table\n---\napp/views/admin/instances/show.html.haml\n@@ -21,7 +21,7 @@\n   - if @instance.domain_allow\n     = link_to t('admin.domain_allows.undo'), admin_domain_allow_path(@instance.domain_allow), class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }\n   - else\n-    = link_to t('admin.domain_allows.add_new'), admin_domain_allows_path(domain_allow: { domain: @instance.domain }), class: 'button', method: :post\n+    = button_to t('admin.domain_allows.add_new'), admin_domain_allows_path(domain_allow: { domain: @instance.domain }), class: :button\n - else\n   %p= t('admin.instances.content_policies.description_html')\n \n@@ -40,7 +40,7 @@\n             %td= @instance.domain_block.policies.map { |policy| t(policy, scope: 'admin.instances.content_policies.policies') }.join(' \u00b7 ')\n \n     = link_to t('admin.domain_blocks.edit'), edit_admin_domain_block_path(@instance.domain_block), class: 'button'\n-    = link_to t('admin.domain_blocks.undo'), admin_domain_block_path(@instance.domain_block), class: 'button', data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }\n+    = button_to t('admin.domain_blocks.undo'), admin_domain_block_path(@instance.domain_block), class: :button, data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }\n   - else\n     = link_to t('admin.domain_blocks.add_new'), new_admin_domain_block_path(_domain: @instance.domain), class: 'button'\n \n@@ -70,16 +70,16 @@\n       - if @instance.unavailable?\n         %span.negative-hint\n           = t('admin.instances.availability.failure_threshold_reached', date: l(@instance.unavailable_domain.created_at.to_date))\n-          = link_to t('admin.instances.delivery.restart'), restart_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }\n+          = button_to t('admin.instances.delivery.restart'), restart_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') }\n       - elsif @instance.exhausted_deliveries_days.empty?\n         %span.positive-hint\n           = t('admin.instances.availability.no_failures_recorded')\n-          = link_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }\n+          = button_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') }\n       - else\n         %span.negative-hint\n           = t('admin.instances.availability.failures_recorded', count: @instance.delivery_failure_tracker.days)\n-          %span= link_to t('admin.instances.delivery.clear'), clear_delivery_errors_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post } unless @instance.exhausted_deliveries_days.empty?\n-          %span= link_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }\n+          %span= button_to t('admin.instances.delivery.clear'), clear_delivery_errors_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') } unless @instance.exhausted_deliveries_days.empty?\n+          %span= button_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') }\n \n   - if @instance.purgeable?\n     %p= t('admin.instances.purge_description_html')\n---\napp/views/admin/invites/index.html.haml\n@@ -34,4 +34,4 @@\n = paginate @invites\n \n - if policy(:invite).deactivate_all?\n-  = link_to t('admin.invites.deactivate_all'), deactivate_all_admin_invites_path, method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button'\n+  = button_to t('admin.invites.deactivate_all'), deactivate_all_admin_invites_path, data: { confirm: t('admin.accounts.are_you_sure') }, class: :button\n---\napp/views/admin/reports/show.html.haml\n@@ -3,9 +3,9 @@\n \n - content_for :heading_actions do\n   - if @report.unresolved?\n-    = link_to t('admin.reports.mark_as_resolved'), resolve_admin_report_path(@report), method: :post, class: 'button'\n+    = button_to t('admin.reports.mark_as_resolved'), resolve_admin_report_path(@report), class: :button\n   - else\n-    = link_to t('admin.reports.mark_as_unresolved'), reopen_admin_report_path(@report), method: :post, class: 'button'\n+    = button_to t('admin.reports.mark_as_unresolved'), reopen_admin_report_path(@report), class: :button\n \n - unless @report.account.local? || @report.target_account.local?\n   .flash-message= t('admin.reports.forwarded_replies_explanation')\n---\napp/views/disputes/strikes/show.html.haml\n@@ -3,8 +3,8 @@\n \n - content_for :heading_actions do\n   - if @appeal.persisted?\n-    = link_to t('disputes.strikes.approve_appeal'), approve_admin_disputes_appeal_path(@appeal), method: :post, class: 'button' if can?(:approve, @appeal)\n-    = link_to t('disputes.strikes.reject_appeal'), reject_admin_disputes_appeal_path(@appeal), method: :post, class: 'button button--destructive' if can?(:reject, @appeal)\n+    = button_to t('disputes.strikes.approve_appeal'), approve_admin_disputes_appeal_path(@appeal), class: :button if can?(:approve, @appeal)\n+    = button_to t('disputes.strikes.reject_appeal'), reject_admin_disputes_appeal_path(@appeal), class: 'button button--destructive' if can?(:reject, @appeal)\n \n - if @strike.overruled?\n   %p.hint\n---\napp/views/settings/exports/show.html.haml\n@@ -46,7 +46,7 @@\n %p.muted-hint= t('exports.archive_takeout.hint_html')\n \n - if policy(:backup).create?\n-  %p= link_to t('exports.archive_takeout.request'), settings_export_path, class: 'button', method: :post\n+  %p= button_to t('exports.archive_takeout.request'), settings_export_path, class: :button\n \n - unless @backups.empty?\n   %hr.spacer/\n---\napp/views/settings/two_factor_authentication/otp_authentication/show.html.haml\n@@ -6,4 +6,4 @@\n \n   %hr.spacer/\n \n-  = link_to t('otp_authentication.setup'), settings_otp_authentication_path, data: { method: :post }, class: 'block-button'\n+  = button_to t('otp_authentication.setup'), settings_otp_authentication_path, class: 'block-button'\n---\napp/views/settings/two_factor_authentication_methods/index.html.haml\n@@ -2,7 +2,7 @@\n   = t('settings.two_factor_authentication')\n \n - content_for :heading_actions do\n-  = link_to t('two_factor_authentication.disable'), disable_settings_two_factor_authentication_methods_path, class: 'button button--destructive', method: :post\n+  = button_to t('two_factor_authentication.disable'), disable_settings_two_factor_authentication_methods_path, class: 'button button--destructive'\n \n %p.hint\n   %span.positive-hint\n@@ -38,4 +38,4 @@\n %hr.spacer/\n \n .simple_form\n-  = link_to t('two_factor_authentication.generate_recovery_codes'), settings_two_factor_authentication_recovery_codes_path, data: { method: :post }, class: 'block-button'\n+  = button_to t('two_factor_authentication.generate_recovery_codes'), settings_two_factor_authentication_recovery_codes_path, class: 'block-button'\n---\napp/helpers/admin/accounts_helper.rb\n@@ -11,8 +11,28 @@ def admin_accounts_moderation_options\n     ]\n   end\n \n+  def remote_suspension_hint(deletion_request)\n+    if deletion_request.present?\n+      t('admin.accounts.remote_suspension_reversible_hint_html', date: due_date_for_hint(deletion_request))\n+    else\n+      t('admin.accounts.remote_suspension_irreversible')\n+    end\n+  end\n+\n+  def suspension_hint(deletion_request)\n+    if deletion_request.present?\n+      t('admin.accounts.suspension_reversible_hint_html', date: due_date_for_hint(deletion_request))\n+    else\n+      t('admin.accounts.suspension_irreversible')\n+    end\n+  end\n+\n   private\n \n+  def due_date_for_hint(deletion_request)\n+    tag.strong(l(deletion_request.due_at.to_date))\n+  end\n+\n   def pending_user_count_label\n     number_with_delimiter User.pending.count\n   end\n---\napp/views/admin/accounts/_buttons.html.haml\n@@ -1,41 +1,31 @@\n-- if account.suspended?\n-  %hr.spacer/\n-  - if account.suspension_origin_remote?\n-    %p.muted-hint= deletion_request.present? ? t('admin.accounts.remote_suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.remote_suspension_irreversible')\n-  - else\n-    %p.muted-hint= deletion_request.present? ? t('admin.accounts.suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.suspension_irreversible')\n-  = button_to t('admin.accounts.undo_suspension'), unsuspend_admin_account_path(account.id), class: :button if can?(:unsuspend, account)\n-  = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button if can?(:redownload, account) && account.suspension_origin_remote?\n-  - if deletion_request.present? && can?(:destroy, account)\n-    = link_to t('admin.accounts.delete'), admin_account_path(account.id), method: :delete, class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure') }\n-- else\n-  .action-buttons\n-    %div\n-      - if account.local? && account.user_approved?\n-        = link_to t('admin.accounts.warn'), new_admin_account_action_path(account.id, type: 'none'), class: 'button' if can?(:warn, account)\n-        - if account.user_disabled?\n-          = button_to t('admin.accounts.enable'), enable_admin_account_path(account.id), class: :button if can?(:enable, account.user)\n-        - elsif can?(:disable, account.user)\n-          = link_to t('admin.accounts.disable'), new_admin_account_action_path(account.id, type: 'disable'), class: 'button'\n-      - if account.sensitized?\n-        = button_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), class: :button if can?(:unsensitive, account)\n-      - elsif !account.local? || account.user_approved?\n-        = link_to t('admin.accounts.sensitive'), new_admin_account_action_path(account.id, type: 'sensitive'), class: 'button' if can?(:sensitive, account)\n-      - if account.silenced?\n-        = button_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), class: :button if can?(:unsilence, account)\n-      - elsif !account.local? || account.user_approved?\n-        = link_to t('admin.accounts.silence'), new_admin_account_action_path(account.id, type: 'silence'), class: 'button' if can?(:silence, account)\n-      - if account.local?\n-        - if account.user_pending?\n-          = button_to t('admin.accounts.approve'), approve_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: :button if can?(:approve, account.user)\n-          = button_to t('admin.accounts.reject'), reject_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive' if can?(:reject, account.user)\n-        - if !account.user_confirmed? && can?(:confirm, account.user)\n-          = button_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), class: :button\n-      - if (!account.local? || account.user_approved?) && can?(:suspend, account)\n-        = link_to t('admin.accounts.perform_full_suspension'), new_admin_account_action_path(account.id, type: 'suspend'), class: 'button'\n-    %div\n-      - if account.local?\n-        - if !account.memorial? && account.user_approved? && can?(:memorialize, account)\n-          = button_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive'\n-      - elsif can?(:redownload, account)\n-        = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button\n+-# locals: (account:)\n+.action-buttons\n+  %div\n+    - if account.local? && account.user_approved?\n+      = link_to t('admin.accounts.warn'), new_admin_account_action_path(account.id, type: :none), class: :button if can?(:warn, account)\n+      - if account.user_disabled?\n+        = button_to t('admin.accounts.enable'), enable_admin_account_path(account.id), class: :button if can?(:enable, account.user)\n+      - elsif can?(:disable, account.user)\n+        = link_to t('admin.accounts.disable'), new_admin_account_action_path(account.id, type: :disable), class: :button\n+    - if account.sensitized?\n+      = button_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), class: :button if can?(:unsensitive, account)\n+    - elsif !account.local? || account.user_approved?\n+      = link_to t('admin.accounts.sensitive'), new_admin_account_action_path(account.id, type: :sensitive), class: :button if can?(:sensitive, account)\n+    - if account.silenced?\n+      = button_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), class: :button if can?(:unsilence, account)\n+    - elsif !account.local? || account.user_approved?\n+      = link_to t('admin.accounts.silence'), new_admin_account_action_path(account.id, type: :silence), class: :button if can?(:silence, account)\n+    - if account.local?\n+      - if account.user_pending?\n+        = button_to t('admin.accounts.approve'), approve_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: :button if can?(:approve, account.user)\n+        = button_to t('admin.accounts.reject'), reject_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: [:button, 'button--destructive'] if can?(:reject, account.user)\n+      - if !account.user_confirmed? && can?(:confirm, account.user)\n+        = button_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), class: :button\n+    - if (!account.local? || account.user_approved?) && can?(:suspend, account)\n+      = link_to t('admin.accounts.perform_full_suspension'), new_admin_account_action_path(account.id, type: :suspend), class: :button\n+  %div\n+    - if account.local?\n+      - if !account.memorial? && account.user_approved? && can?(:memorialize, account)\n+        = button_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: [:button, 'button--destructive']\n+    - elsif can?(:redownload, account)\n+      = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button\n---\napp/views/admin/accounts/_suspended_buttons.html.haml\n@@ -0,0 +1,25 @@\n+-# locals: (account:, deletion_request:)\n+%hr.spacer/\n+\n+%p.muted-hint\n+  - if account.suspension_origin_remote?\n+    = remote_suspension_hint(deletion_request)\n+  - else\n+    = suspension_hint(deletion_request)\n+\n+- if can?(:unsuspend, account)\n+  = button_to t('admin.accounts.undo_suspension'),\n+              unsuspend_admin_account_path(account.id),\n+              class: :button\n+\n+- if can?(:redownload, account) && account.suspension_origin_remote?\n+  = button_to t('admin.accounts.redownload'),\n+              redownload_admin_account_path(account.id),\n+              class: :button\n+\n+- if deletion_request.present? && can?(:destroy, account)\n+  = link_to t('admin.accounts.delete'),\n+            admin_account_path(account.id),\n+            class: [:button, 'button--destructive'],\n+            data: { confirm: t('admin.accounts.are_you_sure') },\n+            method: :delete\n---\napp/views/admin/accounts/show.html.haml\n@@ -40,7 +40,13 @@\n         - else\n           = render 'admin/accounts/remote_account', account: @account, domain_block: @domain_block\n \n-  = render 'admin/accounts/buttons', account: @account, deletion_request: @deletion_request\n+  - if @account.suspended?\n+    = render 'admin/accounts/suspended_buttons',\n+             account: @account,\n+             deletion_request: @deletion_request\n+  - else\n+    = render 'admin/accounts/buttons',\n+             account: @account\n \n   %hr.spacer/\n \n---\n\n\n---\n\nChoice D:\napp/models/user_role.rb\n@@ -41,7 +41,7 @@ class UserRole < ApplicationRecord\n   EVERYONE_ROLE_ID = -99\n   NOBODY_POSITION = -1\n \n-  POSITION_LIMIT = 2**31\n+  POSITION_LIMIT = (2**31) - 1\n \n   module Flags\n     NONE = 0\n@@ -91,7 +91,7 @@ module Flags\n \n   validates :name, presence: true, unless: :everyone?\n   validates :color, format: { with: /\\A#?(?:[A-F0-9]{3}){1,2}\\z/i }, unless: -> { color.blank? }\n-  validates :position, numericality: { greater_than_or_equal_to: -POSITION_LIMIT, less_than_or_equal_to: POSITION_LIMIT }\n+  validates :position, numericality: { in: (-POSITION_LIMIT..POSITION_LIMIT) }\n \n   validate :validate_permissions_elevation\n   validate :validate_position_elevation\n---\nspec/models/user_role_spec.rb\n@@ -21,11 +21,9 @@\n     describe 'position' do\n       subject { Fabricate.build :user_role }\n \n-      let(:excess) { 2**32 }\n-      let(:limit) { 2**31 }\n+      let(:limit) { described_class::POSITION_LIMIT }\n \n-      it { is_expected.to_not allow_values(-excess, excess).for(:position) }\n-      it { is_expected.to allow_values(-limit, limit).for(:position) }\n+      it { is_expected.to validate_numericality_of(:position).is_in(-limit..limit) }\n     end\n \n     describe 'color' do\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix polls not being validated on edition\n\nIssue Description:\nFixes #33742\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -6437,7 +6437,7 @@ a.status-card {\n   }\n \n   .dialog-option .poll__input {\n-    border-color: $inverted-text-color;\n+    border-color: $darker-text-color;\n     color: $ui-secondary-color;\n     display: inline-flex;\n     align-items: center;\n@@ -6451,13 +6451,13 @@ a.status-card {\n     &:active,\n     &:focus,\n     &:hover {\n-      border-color: lighten($inverted-text-color, 15%);\n+      border-color: $valid-value-color;\n       border-width: 4px;\n     }\n \n     &.active {\n-      border-color: $inverted-text-color;\n-      background: $inverted-text-color;\n+      border-color: $valid-value-color;\n+      background: $valid-value-color;\n     }\n   }\n \n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.jsx\n@@ -151,8 +151,13 @@ export const InlineFollowSuggestions = ({ hidden }) => {\n       return;\n     }\n \n-    setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n-    setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n+      setCanScrollLeft((bodyRef.current.clientWidth - bodyRef.current.scrollLeft) < bodyRef.current.scrollWidth);\n+      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n+    } else {\n+      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n+      setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    }\n   }, [setCanScrollRight, setCanScrollLeft, bodyRef]);\n \n   const handleDismiss = useCallback(() => {\n---\n\n\n---\n\nChoice D:\napp/validators/poll_expiration_validator.rb\n@@ -5,9 +5,12 @@ class PollExpirationValidator < ActiveModel::Validator\n   MIN_EXPIRATION = 5.minutes.freeze\n \n   def validate(poll)\n+    # We have a `presence: true` check for this attribute already\n+    return if poll.expires_at.nil?\n+\n     current_time = Time.now.utc\n \n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix preview card sizing in \u201cAuthor attribution\u201d in profile settings\n\nIssue Description:\nAn alternative, I guess, would be to change the `contain` to only be applied to `.status .status-card` and `.detailed-status .status-card`\n\n---\n\nChoice A:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice B:\napp/presenters/language_presenter.rb\n@@ -1,7 +1,7 @@\n # frozen_string_literal: true\n \n class LanguagePresenter < ActiveModelSerializers::Model\n-  attributes :code, :name, :native_name\n+  attributes :code, :name\n \n   def initialize(code)\n     super()\n@@ -13,8 +13,4 @@ def initialize(code)\n   def name\n     @item[0]\n   end\n-\n-  def native_name\n-    @item[1]\n-  end\n end\n---\nspec/requests/api/v1/instances/languages_spec.rb\n@@ -9,10 +9,21 @@\n     end\n \n     it 'returns http success and includes supported languages' do\n-      expect(response).to have_http_status(200)\n+      expect(response)\n+        .to have_http_status(200)\n       expect(response.content_type)\n         .to start_with('application/json')\n-      expect(response.parsed_body.pluck(:code)).to match_array LanguagesHelper::SUPPORTED_LOCALES.keys.map(&:to_s)\n+      expect(response.parsed_body)\n+        .to match_array(supported_locale_expectations)\n+    end\n+\n+    def supported_locale_expectations\n+      LanguagesHelper::SUPPORTED_LOCALES.map do |key, values|\n+        include(\n+          code: key.to_s,\n+          name: values.first\n+        )\n+      end\n     end\n   end\n end\n---\n\n\n---\n\nChoice C:\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json.fetch('links', []).index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/resolve_account_service.rb\n@@ -106,8 +106,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -122,12 +120,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -33,7 +33,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -51,7 +51,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -72,7 +72,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -95,7 +95,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -111,7 +111,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -33,7 +33,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -51,7 +51,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -72,7 +72,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -95,7 +95,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -111,7 +111,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -215,7 +215,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/reducers/compose.js\n@@ -402,7 +402,7 @@ export default function compose(state = initialState, action) {\n       .set('isUploadingThumbnail', false)\n       .update('media_attachments', list => list.map(item => {\n         if (item.get('id') === action.media.id) {\n-          return fromJS(action.media);\n+          return fromJS(action.media).set('unattached', item.get('unattached'));\n         }\n \n         return item;\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix processing of incoming notifications for unfilterable types\n\nIssue Description:\nThis fixes new notifications of types `moderation_warning`, `severed_relationships` or `annual_report` not being inserted from streaming in the client-side code.\r\n\r\nThis is because notifications that can't be turned off don't have a settings entry, so the check returns `undefined` which is falsy.\n\n---\n\nChoice A:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/components/status_action_bar.jsx\n@@ -375,20 +375,29 @@ class StatusActionBar extends ImmutablePureComponent {\n \n     return (\n       <div className='status__action-bar'>\n-        <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n-        <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n-        <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n-        <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n-\n-        <DropdownMenuContainer\n-          scrollKey={scrollKey}\n-          status={status}\n-          items={menu}\n-          icon='ellipsis-h'\n-          iconComponent={MoreHorizIcon}\n-          direction='right'\n-          title={intl.formatMessage(messages.more)}\n-        />\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <DropdownMenuContainer\n+            scrollKey={scrollKey}\n+            status={status}\n+            items={menu}\n+            icon='ellipsis-h'\n+            iconComponent={MoreHorizIcon}\n+            direction='right'\n+            title={intl.formatMessage(messages.more)}\n+          />\n+        </div>\n       </div>\n     );\n   }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -299,6 +299,10 @@\n     }\n   }\n \n+  &--with-counter {\n+    padding-inline-end: 4px;\n+  }\n+\n   &__counter {\n     display: block;\n     width: auto;\n@@ -1465,6 +1469,15 @@ body > [data-popper-placement] {\n     }\n   }\n \n+  &__action-bar__button-wrapper {\n+    flex-basis: 0;\n+    flex-grow: 1;\n+\n+    &:last-child {\n+      flex-grow: 0;\n+    }\n+  }\n+\n   &--first-in-thread {\n     border-top: 1px solid var(--background-border-color);\n   }\n---\n\n\n---\n\nChoice C:\napp/workers/web/push_notification_worker.rb\n@@ -55,12 +55,8 @@ def web_push_request\n   end\n \n   def push_notification_json\n-    Oj.dump(serialized_notification_in_subscription_locale.as_json)\n-  end\n-\n-  def serialized_notification_in_subscription_locale\n     I18n.with_locale(@subscription.locale.presence || I18n.default_locale) do\n-      serialized_notification\n+      Oj.dump(serialized_notification.as_json)\n     end\n   end\n \n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.jsx\n@@ -151,8 +151,13 @@ export const InlineFollowSuggestions = ({ hidden }) => {\n       return;\n     }\n \n-    setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n-    setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n+      setCanScrollLeft((bodyRef.current.clientWidth - bodyRef.current.scrollLeft) < bodyRef.current.scrollWidth);\n+      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n+    } else {\n+      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n+      setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    }\n   }, [setCanScrollRight, setCanScrollLeft, bodyRef]);\n \n   const handleDismiss = useCallback(() => {\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix incorrect notification settings migration for non-followers\n\nIssue Description:\nSee https://github.com/mastodon/mastodon/pull/33340#issuecomment-2549791241\r\n\r\nThis fixes incorrect migrations, but unfortunately, not retroactively.\n\n---\n\nChoice A:\napp/javascript/styles/mastodon-light/diff.scss\n@@ -159,8 +159,8 @@\n .error-modal,\n .onboarding-modal,\n .compare-history-modal,\n-.report-modal__comment .setting-text__wrapper,\n-.report-modal__comment .setting-text,\n+.report-modal__comment,\n+.report-modal__comment,\n .announcements,\n .picture-in-picture__header,\n .picture-in-picture__footer,\n@@ -169,6 +169,11 @@\n   border: 1px solid var(--background-border-color);\n }\n \n+.setting-text__wrapper,\n+.setting-text {\n+  border: 1px solid var(--background-border-color);\n+}\n+\n .reactions-bar__item:hover,\n .reactions-bar__item:focus,\n .reactions-bar__item:active {\n@@ -198,14 +203,6 @@\n   color: $white;\n }\n \n-.report-modal__comment {\n-  border-right-color: lighten($ui-base-color, 8%);\n-}\n-\n-.report-modal__container {\n-  border-top-color: lighten($ui-base-color, 8%);\n-}\n-\n .column-settings__hashtags .column-select__option {\n   color: $white;\n }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -3911,7 +3911,7 @@ $ui-header-logo-wordmark-width: 99px;\n \n   &__wrapper {\n     background: $white;\n-    border: 1px solid $ui-secondary-color;\n+    border: 1px solid var(--background-border-color);\n     margin-bottom: 10px;\n     border-radius: 4px;\n \n@@ -6298,9 +6298,10 @@ a.status-card {\n .report-modal,\n .actions-modal,\n .compare-history-modal {\n-  background: lighten($ui-secondary-color, 8%);\n-  color: $inverted-text-color;\n-  border-radius: 8px;\n+  background: var(--background-color);\n+  color: $primary-text-color;\n+  border-radius: 4px;\n+  border: 1px solid var(--background-border-color);\n   overflow: hidden;\n   max-width: 90vw;\n   width: 480px;\n@@ -6344,6 +6345,7 @@ a.status-card {\n .report-modal {\n   width: 90vw;\n   max-width: 700px;\n+  border: 1px solid var(--background-border-color);\n }\n \n .report-dialog-modal {\n@@ -6567,7 +6569,7 @@ a.status-card {\n \n .report-modal__container {\n   display: flex;\n-  border-top: 1px solid $ui-secondary-color;\n+  border-top: 1px solid var(--background-border-color);\n \n   @media screen and (width <= 480px) {\n     flex-wrap: wrap;\n@@ -6625,7 +6627,7 @@ a.status-card {\n \n .report-modal__comment {\n   padding: 20px;\n-  border-inline-end: 1px solid $ui-secondary-color;\n+  border-inline-end: 1px solid var(--background-border-color);\n   max-width: 320px;\n \n   p {\n@@ -6636,7 +6638,7 @@ a.status-card {\n \n   .setting-text-label {\n     display: block;\n-    color: $inverted-text-color;\n+    color: $secondary-text-color;\n     font-size: 14px;\n     font-weight: 500;\n     margin-bottom: 10px;\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/components/status_action_bar.jsx\n@@ -375,20 +375,29 @@ class StatusActionBar extends ImmutablePureComponent {\n \n     return (\n       <div className='status__action-bar'>\n-        <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n-        <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n-        <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n-        <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n-\n-        <DropdownMenuContainer\n-          scrollKey={scrollKey}\n-          status={status}\n-          items={menu}\n-          icon='ellipsis-h'\n-          iconComponent={MoreHorizIcon}\n-          direction='right'\n-          title={intl.formatMessage(messages.more)}\n-        />\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <DropdownMenuContainer\n+            scrollKey={scrollKey}\n+            status={status}\n+            items={menu}\n+            icon='ellipsis-h'\n+            iconComponent={MoreHorizIcon}\n+            direction='right'\n+            title={intl.formatMessage(messages.more)}\n+          />\n+        </div>\n       </div>\n     );\n   }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -299,6 +299,10 @@\n     }\n   }\n \n+  &--with-counter {\n+    padding-inline-end: 4px;\n+  }\n+\n   &__counter {\n     display: block;\n     width: auto;\n@@ -1465,6 +1469,15 @@ body > [data-popper-placement] {\n     }\n   }\n \n+  &__action-bar__button-wrapper {\n+    flex-basis: 0;\n+    flex-grow: 1;\n+\n+    &:last-child {\n+      flex-grow: 0;\n+    }\n+  }\n+\n   &--first-in-thread {\n     border-top: 1px solid var(--background-border-color);\n   }\n---\n\n\n---\n\nChoice C:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice D:\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil`\n\nIssue Description:\nFixes half of #33319\n\n---\n\nChoice A:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice C:\nCHANGELOG.md\n@@ -10,21 +10,24 @@ The following changelog entries focus on changes visible to users, administrator\n \n - **Add confirmation interstitial instead of silently redirecting logged-out visitors to remote resources** (#27792, #28902, and #30651 by @ClearlyClaire and @Gargron)\\\n   This fixes a longstanding open redirect in Mastodon, at the cost of added friction when local links to remote resources are shared.\n+- Change `form-action` Content-Security-Policy directive to be more restrictive (#26897 by @ClearlyClaire)\n+- Update dependencies\n \n ### Added\n \n-- **Add experimental server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, and #31513 by @ClearlyClaire, @mgmn, and @renchap)\\\n+- **Add server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, #31513, #31592, #31594, #31638, #31746, #31652, #31709, #31725, #31745, #31613, #31657, #31840, #31610 and #31929 by @ClearlyClaire, @Gargron, @mgmn, and @renchap)\\\n   Group notifications of the same type for the same target, so that your notifications no longer get cluttered by boost and favorite notifications as soon as a couple of your posts get traction.\\\n   This is done server-side so that clients can efficiently get relevant groups without having to go through numerous pages of individual notifications.\\\n   As part of this, the visual design of the entire notifications feature has been revamped.\\\n   This feature is intended to eventually replace the existing notifications column, but for this first beta, users will have to enable it in the \u201cExperimental features\u201d section of the notifications column settings.\\\n   The API is not final yet, but it consists of:\n   - a new `group_key` attribute to `Notification` entities\n-  - `GET /api/v2_alpha/notifications`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-grouped\n-  - `GET /api/v2_alpha/notifications/:group_key`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-notification-group\n-  - `POST /api/v2_alpha/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/notifications_alpha/#dismiss-group\n-  - `GET /api/v2_alpha/notifications/:unread_count`: https://docs.joinmastodon.org/methods/notifications_alpha/#unread-group-count\n-- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, and #31541 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n+  - `GET /api/v2/notifications`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-grouped\n+  - `GET /api/v2/notifications/:group_key`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-notification-group\n+  - `GET /api/v2/notifications/:group_key/accounts`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-group-accounts\n+  - `POST /api/v2/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/grouped_notifications/#dismiss-group\n+  - `GET /api/v2/notifications/:unread_count`: https://docs.joinmastodon.org/methods/grouped_notifications/#unread-group-count\n+- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, #31541, and #31723 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n   The old \u201cBlock notifications from non-followers\u201d, \u201cBlock notifications from people you don't follow\u201d and \u201cBlock direct messages from people you don't follow\u201d notification settings have been replaced by a new set of settings found directly in the notification column.\\\n   You can now separately filter or drop notifications from people you don't follow, people who don't follow you, accounts created within the past 30 days, as well as unsolicited private mentions, and accounts limited by the moderation.\\\n   Instead of being outright dropped, notifications that you chose to filter are put in a separate \u201cFiltered notifications\u201d box that you can review separately without it clogging your main notifications.\\\n@@ -57,26 +60,31 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add timeline of public posts about a trending link** (#30381 and #30840 by @Gargron)\\\n   You can now see public posts mentioning currently-trending articles from people who have opted into discovery features.\\\n   This adds a new REST API endpoint: https://docs.joinmastodon.org/methods/timelines/#link\n-- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, and #30846 by @Gargron)\\\n+- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, #30846, #31819, and #31900 by @Gargron and @oneiros)\\\n   This adds a mechanism to [highlight the author of news articles](https://blog.joinmastodon.org/2024/07/highlighting-journalism-on-mastodon/) shared on Mastodon.\\\n   Articles hosted outside the fediverse can indicate a fediverse author with a meta tag:\n   ```html\n   <meta name=\"fediverse:creator\" content=\"username@domain\" />\n   ```\n   On the API side, this is represented by a new `authors` attribute to the `PreviewCard` entity: https://docs.joinmastodon.org/entities/PreviewCard/#authors\\\n-  Note that this feature is still work in progress and the tagging format and verification mechanisms may change in future releases.\n+  Users can allow arbitrary domains to use `fediverse:creator` to credit them by visiting `/settings/verification`.\\\n+  This is federated as a new `attributionDomains` property in the `http://joinmastodon.org/ns` namespace, containing an array of domain names: https://docs.joinmastodon.org/spec/activitypub/#properties-used-1\n - **Add in-app notifications for moderation actions and warnings** (#30065, #30082, and #30081 by @ClearlyClaire)\\\n   In addition to email notifications, also notify users of moderation actions or warnings against them directly within the app, so they are less likely to miss important communication from their moderators.\\\n   This adds the `moderation_warning` notification type to the REST API and streaming, with a new [`moderation_warning` attribute](https://docs.joinmastodon.org/entities/Notification/#moderation_warning).\n - **Add domain information to profiles in web UI** (#29602 by @Gargron)\\\n   Clicking the domain of a user in their profile will now open a tooltip with a short explanation about servers and federation.\n+- **Add support for Redis sentinel** (#31694, #31623, #31744, #31767, and #31768 by @ThisIsMissEm and @oneiros)\\\n+  See https://docs.joinmastodon.org/admin/scaling/#redis-sentinel\n - Add ability to reorder uploaded media before posting in web UI (#28456 by @Gargron)\n - Add moderation interface for searching hashtags (#30880 by @ThisIsMissEm)\n - Add ability for admins to configure instance favicon and logo (#30040, #30208, #30259, #30375, #30734, #31016, and #30205 by @ClearlyClaire, @FawazFarid, @JasonPunyon, @mgmn, and @renchap)\\\n   This is also exposed through the REST API: https://docs.joinmastodon.org/entities/Instance/#icon\n - Add `api_versions` to `/api/v2/instance` (#31354 by @ClearlyClaire)\\\n   Add API version number to make it easier for clients to detect compatible features going forward.\\\n   See API documentation at https://docs.joinmastodon.org/entities/Instance/#api-versions\n+- Add quick links to Administration and Moderation Reports from Web UI (#24838 by @ThisIsMissEm)\n+- Add link to `/admin/roles` in moderation interface when changing someone's role (#31791 by @ClearlyClaire)\n - Add recent audit log entries in federation moderation interface (#27386 by @ThisIsMissEm)\n - Add profile setup to onboarding in web UI (#27829, #27876, and #28453 by @Gargron)\n - Add prominent share/copy button on profiles in web UI (#27865 and #27889 by @ClearlyClaire and @Gargron)\n@@ -113,21 +121,24 @@ The following changelog entries focus on changes visible to users, administrator\n - Add support for multiple `redirect_uris` when creating OAuth 2.0 Applications (#29192 by @ThisIsMissEm)\n - Add Interlingue and Interlingua to interface languages (#28630 and #30828 by @Dhghomon and @renchap)\n - Add Kashubian, Pennsylvania Dutch, Vai, Jawi Malay, Mohawk and Low German to posting languages (#26024, #26634, #27136, #29098, #27115, and #27434 by @EngineerDali, @HelgeKrueger, and @gunchleoc)\n-- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n - Add option to use native Ruby driver for Redis through `REDIS_DRIVER=ruby` (#30717 by @vmstan)\n - Add support for libvips in addition to ImageMagick (#30090, #30590, #30597, #30632, #30857, #30869, and #30858 by @ClearlyClaire, @Gargron, and @mjankowski)\\\n   Server admins can now use libvips as a faster and lighter alternative to ImageMagick for processing user-uploaded images.\\\n   This requires libvips 8.13 or newer, and needs to be enabled with `MASTODON_USE_LIBVIPS=true`.\\\n   This is enabled by default in the official Docker images, and is intended to completely replace ImageMagick in the future.\n+- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n+- Add anchors to each authorized application in `/oauth/authorized_applications` (#31677 by @fowl2)\n - Add active animation to header settings button (#30221, #30307, and #30388 by @daudix)\n - Add OpenTelemetry instrumentation (#30130, #30322, #30353, and #30350 by @julianocosta89, @renchap, and @robbkidd)\\\n   See https://docs.joinmastodon.org/admin/config/#otel for documentation\n - Add API to get multiple accounts and statuses (#27871 and #30465 by @ClearlyClaire)\\\n   This adds `GET /api/v1/accounts` and `GET /api/v1/statuses` to the REST API, see https://docs.joinmastodon.org/methods/accounts/#index and https://docs.joinmastodon.org/methods/statuses/#index\n+- Add support for CORS to `POST /oauth/revoke` (#31743 by @ClearlyClaire)\n - Add redirection back to previous page after site upload deletion (#30141 by @FawazFarid)\n - Add RFC8414 OAuth 2.0 server metadata (#29191 by @ThisIsMissEm)\n - Add loading indicator and empty result message to advanced interface search (#30085 by @ClearlyClaire)\n - Add `profile` OAuth 2.0 scope, allowing more limited access to user data (#29087 and #30357 by @ThisIsMissEm)\n+- Add global Regexp timeout (#31928 by @ClearlyClaire)\n - Add the role ID to the badge component (#29707 by @renchap)\n - Add diagnostic message for failure during CLI search deploy (#29462 by @mjankowski)\n - Add pagination `Link` headers on API accounts/statuses when pinned true (#29442 by @mjankowski)\n@@ -156,34 +167,43 @@ The following changelog entries focus on changes visible to users, administrator\n - **Change icons throughout the web interface** (#27385, #27539, #27555, #27579, #27700, #27817, #28519, #28709, #28064, #28775, #28780, #27924, #29294, #29395, #29537, #29569, #29610, #29612, #29649, #29844, #27780, #30974, #30963, #30962, #30961, #31362, #31363, #31359, #31371, #31360, #31512, #31511, and #31525 by @ClearlyClaire, @Gargron, @arbolitoloco1, @mjankowski, @nclm, @renchap, @ronilaukkarinen, and @zunda)\\\n   This changes all the interface icons from FontAwesome to Material Symbols for a more modern look, consistent with the official Mastodon Android app.\\\n   In addition, better care is given to pixel alignment, and icon variants are used to better highlight active/inactive state.\n-- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, and #29659 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n+- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, #29659, and #31889 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n   The compose form has been completely redesigned for a more modern and consistent look, as well as spelling out the chosen privacy setting and language name at all times.\\\n   As part of this, the \u201cUnlisted\u201d privacy setting has been renamed to \u201cQuiet public\u201d.\n-- **Change design of confirmation modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, and #31399 by @ClearlyClaire, @Gargron, and @tribela)\\\n+- **Change design of modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, #31399, #31555, #31752, #31801, #31883, #31844, #31864, and #31943 by @ClearlyClaire, @Gargron, @tribela and @vmstan)\\\n   The mute, block, and domain block confirmation modals have been completely redesigned to be clearer and include more detailed information on the action to be performed.\\\n   They also have a more modern and consistent design, along with other confirmation modals in the application.\n - **Change colors throughout the web UI** (#29522, #29584, #29653, #29779, #29803, #29809, #29808, #29828, #31034, #31168, #31266, #31348, #31349, #31361, and #31510 by @ClearlyClaire, @Gargron, @renchap, and @vmstan)\n-- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878 and #29272 by @Gargron)\n+- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878, #29272, and #31912 by @Gargron)\n - **Change email templates** (#28416, #28755, #28814, #29064, #28883, #29470, #29607, #29761, #29760, and #29879 by @ClearlyClaire, @Gargron, @hteumeuleu, and @mjankowski)\\\n   All emails to end-users have been completely redesigned with a fresh new look, providing more information while making them easier to read and keeping maximum compatibility across mail clients.\n - **Change follow recommendations algorithm** (#28314, #28433, #29017, #29108, #29306, #29550, #29619, and #31474 by @ClearlyClaire, @Gargron, @kernal053, @mjankowski, and @wheatear-dev)\\\n   This replaces the \u201cpast interactions\u201d recommendation algorithm with a \u201cfriends of friends\u201d algorithm that suggests accounts followed by people you follow, and a \u201csimilar profiles\u201d algorithm that suggests accounts with a profile similar to your most recent follows.\\\n   In addition, the implementation has been significantly reworked, and all follow recommendations are now dismissable.\\\n   This change deprecates the `source` attribute in `Suggestion` entities in the REST API, and replaces it with the new [`sources` attribute](https://docs.joinmastodon.org/entities/Suggestion/#sources).\n - Change account search algorithm (#30803 by @Gargron)\n-- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, and #30795 by @TheEssem, @ThisIsMissEm, @jippi, @timetinytim, and @vmstan)\\\n+- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, #30795, #31612, and #31615 by @TheEssem, @ThisIsMissEm, @jippi, @renchap, @timetinytim, and @vmstan)\\\n   In order to reduce the amount of runtime dependencies, the streaming server has been moved into a separate package and Docker image.\\\n   The `mastodon` image does not contain the streaming server anymore, as it has been moved to its own `mastodon-streaming` image.\\\n   Administrators may need to update their setup accordingly.\n-- Change how content warnings and filters are displayed in web UI (#31365 by @Gargron)\n+- Change how content warnings and filters are displayed in web UI (#31365, and #31761 by @Gargron)\n+- Change preview card processing to ignore `undefined` as canonical url (#31882 by @oneiros)\n+- Change embedded posts to use web UI (#31766 by @Gargron)\n+- Change inner borders in media galleries in web UI (#31852 by @Gargron)\n+- Change design of hide media button in web UI (#31807 by @Gargron)\n+- Change labels on thread indicators in web UI (#31806 by @Gargron)\n+- Change report action buttons to be disabled when action has already been taken (#31773, #31822, and #31899 by @ClearlyClaire and @ThisIsMissEm)\n+- Change width of columns in advanced web UI (#31762 by @Gargron)\n+- Change design of unread conversations in web UI (#31763 by @Gargron)\n - Change Web UI to allow viewing and severing relationships with suspended accounts (#27667 by @ClearlyClaire)\\\n   This also adds a `with_suspended` parameter to `GET /api/v1/accounts/relationships` in the REST API.\n+- Change preview card image size limit from 2MB to 8MB when using libvips (#31904 by @ClearlyClaire)\n - Change avatars border radius (#31390 by @renchap)\n - Change counters to be displayed on profile timelines in web UI (#30525 by @Gargron)\n - Change disabled buttons color in light mode to make the difference more visible (#30998 by @renchap)\n - Change design of people tab on explore in web UI (#30059 by @Gargron)\n - Change sidebar text in web UI (#30696 by @Gargron)\n-- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452 and #28465 by @Gargron and @renchap)\n+- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452, #28465, and #31934 by @ClearlyClaire, @Gargron and @renchap)\n - Change media to be hidden/blurred by default in report modal (#28522 by @ClearlyClaire)\n - Change order of the \"muting\" and \"blocking\" list options in \u201cData Exports\u201d (#26088 by @fixermark)\n - Change admin and moderation notes character limit from 500 to 2000 characters (#30288 by @ThisIsMissEm)\n@@ -197,6 +217,7 @@ The following changelog entries focus on changes visible to users, administrator\n - Change dropdown menu icon to not be replaced by close icon when open in web UI (#29532 by @Gargron)\n - Change back button to always appear in advanced web UI (#29551 and #29669 by @Gargron)\n - Change border of active compose field search inputs (#29832 and #29839 by @vmstan)\n+- Change instances of Nokogiri HTML4 parsing to HTML5 (#31812, #31815, #31813, and #31814 by @flavorjones)\n - Change link detection to allow `@` at the end of an URL (#31124 by @adamniedzielski)\n - Change User-Agent to use Mastodon as the product, and http.rb as platform details (#31192 by @ClearlyClaire)\n - Change layout and wording of the Content Retention server settings page (#27733 by @vmstan)\n@@ -249,8 +270,17 @@ The following changelog entries focus on changes visible to users, administrator\n - Fix various issues when in link preview card generation (#28748, #30017, #30362, #30173, #30853, #30929, #30933, #30957, #30987, and #31144 by @adamniedzielski, @oneiros, @phocks, @timothyjrogers, and @tribela)\n - Fix handling of missing links in Webfinger responses (#31030 by @adamniedzielski)\n - Fix HTTP 500 error in `/api/v1/polls/:id/votes` when required `choices` parameter is missing (#25598 by @danielmbrasil)\n+- Fix security context sometimes not being added in LD-Signed activities (#31871 by @ClearlyClaire)\n - Fix cross-origin loading of `inert.css` polyfill (#30687 by @louis77)\n - Fix cutoff of instance name in sign-up form (#30598 by @oneiros)\n+- Fix invalid date searches returning 503 errors (#31526 by @notchairmk)\n+- Fix invalid `visibility` values in `POST /api/v1/statuses` returning 500 errors (#31571 by @c960657)\n+- Fix some components re-rendering spuriously in web UI (#31879 and #31881 by @ClearlyClaire and @Gargron)\n+- Fix sort order of moderation notes on Reports and Accounts (#31528 by @ThisIsMissEm)\n+- Fix email language when recipient has no selected locale (#31747 by @ClearlyClaire)\n+- Fix frequently-used languages not correctly updating in the web UI (#31386 by @c960657)\n+- Fix `POST /api/v1/statuses` silently ignoring invalid `media_ids` parameter (#31681 by @c960657)\n+- Fix handling of the `BIND` environment variable in the streaming server (#31624 by @ThisIsMissEm)\n - Fix empty `aria-hidden` attribute value in logo resources area (#30570 by @mjankowski)\n - Fix \u201cRedirect URI\u201d field not being marked as required in \u201cNew application\u201d form (#30311 by @ThisIsMissEm)\n - Fix right-to-left text in preview cards (#30930 by @ClearlyClaire)\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -17,7 +17,7 @@ def patch\n     end\n \n     def default_prerelease\n-      'beta.1'\n+      'beta.2'\n     end\n \n     def prerelease\n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix long account username leaving container\n\nIssue Description:\nReformulation of https://github.com/mastodon/mastodon/pull/32779 which appears abandoned. Incorporates the suggested changes. Fixes both the popup box wrap, and the lack of ability to even see the domain in initial view.\r\n\r\nBefore:\r\n\r\n<img width=\"622\" alt=\"Screenshot 2024-12-12 at 13 00 01\" src=\"https://github.com/user-attachments/assets/60042fb3-2fc5-491f-a670-d9dd0b678085\" />\r\n\r\nAfter:\r\n\r\n<img width=\"628\" alt=\"Screenshot 2024-12-12 at 12 55 35\" src=\"https://github.com/user-attachments/assets/b704ea5a-cca8-4838-a65b-eca7d05a56da\" />\r\n\r\nBefore:\r\n\r\n<img width=\"769\" alt=\"Screenshot 2024-12-12 at 13 00 32\" src=\"https://github.com/user-attachments/assets/d2acbee2-fee7-4c48-af1c-d0b8a0a2b2f4\" />\r\n\r\nAfter:\r\n\r\n<img width=\"383\" alt=\"Screenshot 2024-12-12 at 12 55 43\" src=\"https://github.com/user-attachments/assets/72a45e3f-78dd-422f-a83c-b8f3bb969f65\" />\r\n\r\n\r\nGood followup here might be to put the username and domain portions in the popup into separate spans so that we could truncate (or other responsive approach) that so you always see the domain? For now just doing broken-ness fix.\n\n---\n\nChoice A:\napp/models/user_role.rb\n@@ -41,7 +41,7 @@ class UserRole < ApplicationRecord\n   EVERYONE_ROLE_ID = -99\n   NOBODY_POSITION = -1\n \n-  POSITION_LIMIT = 2**31\n+  POSITION_LIMIT = (2**31) - 1\n \n   module Flags\n     NONE = 0\n@@ -91,7 +91,7 @@ module Flags\n \n   validates :name, presence: true, unless: :everyone?\n   validates :color, format: { with: /\\A#?(?:[A-F0-9]{3}){1,2}\\z/i }, unless: -> { color.blank? }\n-  validates :position, numericality: { greater_than_or_equal_to: -POSITION_LIMIT, less_than_or_equal_to: POSITION_LIMIT }\n+  validates :position, numericality: { in: (-POSITION_LIMIT..POSITION_LIMIT) }\n \n   validate :validate_permissions_elevation\n   validate :validate_position_elevation\n---\nspec/models/user_role_spec.rb\n@@ -21,11 +21,9 @@\n     describe 'position' do\n       subject { Fabricate.build :user_role }\n \n-      let(:excess) { 2**32 }\n-      let(:limit) { 2**31 }\n+      let(:limit) { described_class::POSITION_LIMIT }\n \n-      it { is_expected.to_not allow_values(-excess, excess).for(:position) }\n-      it { is_expected.to allow_values(-limit, limit).for(:position) }\n+      it { is_expected.to validate_numericality_of(:position).is_in(-limit..limit) }\n     end\n \n     describe 'color' do\n---\n\n\n---\n\nChoice B:\napp/controllers/concerns/web_app_controller_concern.rb\n@@ -13,7 +13,7 @@ module WebAppControllerConcern\n       policy = ContentSecurityPolicy.new\n \n       if policy.sso_host.present?\n-        p.form_action policy.sso_host\n+        p.form_action policy.sso_host, -> { \"https://#{request.host}/auth/auth/\" }\n       else\n         p.form_action :none\n       end\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -1996,6 +1996,7 @@ body > [data-popper-placement] {\n \n         &__handle {\n           user-select: all;\n+          overflow-wrap: anywhere;\n         }\n       }\n \n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/features/ui/components/columns_area.jsx\n@@ -63,7 +63,7 @@ export default class ColumnsArea extends ImmutablePureComponent {\n     children: PropTypes.node,\n   };\n \n-  // Corresponds to (max-width: $no-gap-breakpoint + 285px - 1px) in SCSS\n+  // Corresponds to (max-width: $no-gap-breakpoint - 1px) in SCSS\n   mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1174px)');\n \n   state = {\n---\napp/javascript/styles/mastodon/components.scss\n@@ -2712,7 +2712,7 @@ a.account__display-name {\n       flex-direction: column;\n \n       @media screen and (min-width: $no-gap-breakpoint) {\n-        max-width: 600px;\n+        max-width: 568px;\n       }\n     }\n   }\n---\napp/javascript/mastodon/features/ui/components/columns_area.jsx\n@@ -63,8 +63,8 @@ export default class ColumnsArea extends ImmutablePureComponent {\n     children: PropTypes.node,\n   };\n \n-  // Corresponds to (max-width: $no-gap-breakpoint + 285px - 1px) in SCSS\n-  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1174px)');\n+  // Corresponds to (max-width: $no-gap-breakpoint - 1px) in SCSS\n+  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1206px)');\n \n   state = {\n     renderComposePanel: !(this.mediaQuery && this.mediaQuery.matches),\n---\napp/javascript/styles/mastodon/variables.scss\n@@ -87,7 +87,7 @@ $media-modal-media-max-width: 100%;\n // put margins on top and bottom of image to avoid the screen covered by image.\n $media-modal-media-max-height: 80%;\n \n-$no-gap-breakpoint: 1175px;\n+$no-gap-breakpoint: 1207px;\n $mobile-breakpoint: 630px;\n \n $font-sans-serif: 'mastodon-font-sans-serif' !default;\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Add coverage for `AccountPin` model\n\nIssue Description:\nExtracted from a previous now-closed PR which was also doing more things. Simpler version here I hope.\r\n\r\nThe spec changes are adding coverage for the one validation method in the class re: the follow status of the connected accounts.\r\n\r\nThe change in the model is needed to make spec pass, and I think is probably a bugfix (the line in the validation method will error when an account is not present -- so it needs either a change like this, or safe navigation added, to run correctly). When the account is missed the record will be invalid (from the association declaration).\n\n---\n\nChoice A:\napp/javascript/mastodon/reducers/notification_groups.ts\n@@ -559,7 +559,10 @@ export const notificationGroupsReducer = createReducer<NotificationGroupsState>(\n           compareId(state.lastReadId, mostRecentGroup.page_max_id) < 0\n         )\n           state.lastReadId = mostRecentGroup.page_max_id;\n-        commitLastReadId(state);\n+\n+        // We don't call `commitLastReadId`, because that is conditional\n+        // and we want to unconditionally update the state instead.\n+        state.readMarkerId = state.lastReadId;\n       })\n       .addCase(fetchMarkers.fulfilled, (state, action) => {\n         if (\n---\n\n\n---\n\nChoice B:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice C:\napp/models/account_pin.rb\n@@ -5,10 +5,10 @@\n # Table name: account_pins\n #\n #  id                :bigint(8)        not null, primary key\n-#  account_id        :bigint(8)\n-#  target_account_id :bigint(8)\n #  created_at        :datetime         not null\n #  updated_at        :datetime         not null\n+#  account_id        :bigint(8)        not null\n+#  target_account_id :bigint(8)        not null\n #\n \n class AccountPin < ApplicationRecord\n---\ndb/migrate/20241210140838_add_not_null_to_account_pin_account_columns.rb\n@@ -0,0 +1,23 @@\n+# frozen_string_literal: true\n+\n+class AddNotNullToAccountPinAccountColumns < ActiveRecord::Migration[7.2]\n+  def up\n+    connection.execute(<<~SQL.squish)\n+      DELETE FROM account_pins\n+      WHERE account_id IS NULL\n+      OR target_account_id IS NULL\n+    SQL\n+\n+    safety_assured do\n+      change_column_null :account_pins, :account_id, false\n+      change_column_null :account_pins, :target_account_id, false\n+    end\n+  end\n+\n+  def down\n+    safety_assured do\n+      change_column_null :account_pins, :account_id, true\n+      change_column_null :account_pins, :target_account_id, true\n+    end\n+  end\n+end\n---\ndb/schema.rb\n@@ -10,7 +10,7 @@\n #\n # It's strongly recommended that you check this file into your version control system.\n \n-ActiveRecord::Schema[7.2].define(version: 2024_12_05_163118) do\n+ActiveRecord::Schema[7.2].define(version: 2024_12_10_140838) do\n   # These are extensions that must be enabled in order to support this database\n   enable_extension \"plpgsql\"\n \n@@ -82,8 +82,8 @@\n   end\n \n   create_table \"account_pins\", force: :cascade do |t|\n-    t.bigint \"account_id\"\n-    t.bigint \"target_account_id\"\n+    t.bigint \"account_id\", null: false\n+    t.bigint \"target_account_id\", null: false\n     t.datetime \"created_at\", precision: nil, null: false\n     t.datetime \"updated_at\", precision: nil, null: false\n     t.index [\"account_id\", \"target_account_id\"], name: \"index_account_pins_on_account_id_and_target_account_id\", unique: true\n---\n\n\n---\n\nChoice D:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix hard wrap of markdown list in TOS template\n\nIssue Description:\nI suspect the error here is side effect of a [hard wrap](https://github.com/mastodon/mastodon/pull/33055#discussion_r1864932757).\r\n\r\nI assume this was the intended layout?:\r\n\r\n<img width=\"735\" alt=\"Screenshot 2024-12-09 at 10 31 20\" src=\"https://github.com/user-attachments/assets/7d82e519-f1e7-4c30-bc2f-69223edcaefc\">\r\n\n\n---\n\nChoice A:\nconfig/templates/terms-of-service.md\n@@ -1,7 +1,7 @@\n ## Introduction\n \n-These terms of service (the \"Terms\") cover your access and use of\u00a0Server\n-Operator\u2019s\u00a0(\"Administrator\",\u00a0\"we\", or \"us\") instance, located at\u00a0%{domain}\u00a0(the\n+These terms of service (the \"Terms\") cover your access and use of Server\n+Operator's (\"Administrator\", \"we\", or \"us\") instance, located at %{domain} (the\n \"Instance\"). These Terms apply solely to your use of the Instance as operated\n by the Administrator. Please note that we have no affiliation with Mastodon\n gGmbH (\u201cMastodon\u201d) and these Terms do not contain any representations or\n@@ -23,8 +23,8 @@ are old enough to access the Instance in your country, but are not old enough to\n have the legal authority to consent to our Terms, please ask your parent or\n legal guardian to read these Terms with you, as they must agree to the Terms on\n your behalf. If you are a parent or legal guardian who has accepted these terms\n-on your child\u2019s behalf, these terms apply to you and you are responsible for\n-your child\u2019s activities on the Instance.\n+on your child's behalf, these terms apply to you and you are responsible for\n+your child's activities on the Instance.\n \n ## Prohibited Uses\n \n@@ -36,14 +36,14 @@ and local laws and regulations in connection with your use of the Instance. You\n also agree not to use the Instance to engage in any prohibited conduct, or to\n assist any other person or entity in engaging in any prohibited conduct.\n \n-We reserve the right (but do not have the obligation)\u00a0in our sole discretion\u00a0to:\n+We reserve the right (but do not have the obligation) in our sole discretion to:\n (1) monitor the Instance for violations of these Terms; (2) take appropriate\n-legal action against anyone who\u00a0uses or accesses the Instance in a manner that\n-we believe\u00a0violates the law or these Terms, including without limitation,\n-reporting such user to law enforcement authorities;\u00a0(3)\u00a0deny access to the\n+legal action against anyone who uses or accesses the Instance in a manner that\n+we believe violates the law or these Terms, including without limitation,\n+reporting such user to law enforcement authorities; (3) deny access to the\n Instance or any features of the Instance to anyone who violates these Terms or\n-who\u00a0we believe\u00a0interferes with the ability of others to enjoy our Instance or\n-infringes the rights of others; and\u00a0(4) otherwise manage the Instance in a\n+who we believe interferes with the ability of others to enjoy our Instance or\n+infringes the rights of others; and (4) otherwise manage the Instance in a\n manner designed to protect our rights and property and to facilitate the proper\n functioning of the Instance.\n \n@@ -53,16 +53,16 @@ attempt to):\n \n - Violate these Terms or other policies and terms posted on, or otherwise\n - applicable to, the Instance; Upload any material, program, or software that\n-- contains any\u00a0virus, worm, spyware, Trojan horse or other program or code\n+- contains any virus, worm, spyware, Trojan horse or other program or code\n - designed to interrupt, destroy or limit the functionality of the Instance,\n-- launch a denial of service attack, or in any other way attempt\u00a0to interfere\n+- launch a denial of service attack, or in any other way attempt to interfere\n - with the functioning and availability of the Instance; Except as may be the\n - result of standard search engine or Internet browser usage, use, launch,\n - develop, or distribute any automated system, including without limitation, any\n - spider, robot, cheat utility, scraper, offline reader, or any data mining or\n-- similar data gathering extraction tools to\u00a0access the Instance, or use\u00a0or\n+- similar data gathering extraction tools to access the Instance, or use or\n - launch any unauthorized script or other software; Interfere with, disable,\n-- vandalize\u00a0or disrupt the Instance or servers or networks connected to the\n+- vandalize or disrupt the Instance or servers or networks connected to the\n - Instance; Hack into, penetrate, disable, or otherwise circumvent the security\n - measures of the Instance or servers or networks connected to the Instance; or\n - otherwise use the Instance in any way that violates any applicable national,\n@@ -90,11 +90,11 @@ the Content on the Instance.\n ## DMCA Copyright Infringement Notice\n \n We have implemented the procedures described in the Digital Millennium Copyright\n-Act of 1998 (\"DMCA\"),\u00a017 U.S.C. \u00a7 512\u00a0, regarding the reporting of alleged\n+Act of 1998 (\"DMCA\"), 17 U.S.C. \u00a7 512 , regarding the reporting of alleged\n copyright infringement and the removal of or disabling access to infringing\n-material. If you have a good faith belief that copyrighted material\u00a0on\u00a0the\n-Instance\u00a0is being used in a way that infringes a copyright over which you are\n-authorized\u00a0to act, you may make a Notice of Infringing Material.\u00a0If you have a\n+material. If you have a good faith belief that copyrighted material on the\n+Instance is being used in a way that infringes a copyright over which you are\n+authorized to act, you may make a Notice of Infringing Material. If you have a\n good faith belief that copyrighted material that was removed or access to which\n was disabled was a result of a mistake or misidentification, then you may make a\n Notice of Counter-Notification.\n@@ -103,57 +103,57 @@ Before serving a Notice of Infringing Material or Counter-Notification, you may\n wish to contact a lawyer to better understand your rights and obligations under\n the DMCA and other applicable laws. For example, if your Notice or\n Counter-Notifications fails to comply with all requirements of sections\n-512(c)(3) or 512(g)(3), respectively, your\u00a0Notice\u00a0or Counter-Notification may\n+512(c)(3) or 512(g)(3), respectively, your Notice or Counter-Notification may\n not be effective.\n \n ### Termination of Repeat Infringers\n \n-We will terminate or disable your use of the Instance\u00a0in appropriate\n+We will terminate or disable your use of the Instance in appropriate\n circumstances if you are deemed by us to be a repeat copyright infringer.\n \n ### Notices and Counter-Notifications must be sent to:\n \n DMCA Agent: Copyright Manager\n \n-Address:\u00a0%{dmca_address}\n+Address: %{dmca_address}\n \n Email: %{dmca_email}\n \n ## Disclaimer\n \n-Administrator reserves the right\u00a0in our sole discretion\u00a0to modify or\n-discontinue, temporarily or permanently, the Instance\u00a0(or any part thereof) with\n+Administrator reserves the right in our sole discretion to modify or\n+discontinue, temporarily or permanently, the Instance (or any part thereof) with\n or without notice to you. You agree that Administrator will not be liable to\n you or to any third party for any modification or discontinuance of the\n Instance, except as set forth in the \"Limitation of Liability\" section below.\n \n You understand that we are not responsible for any activities or legal\n consequences of your use of the Instance. Users are responsible for using the\n-Instance\u00a0in compliance with all applicable laws and regulations of the\n+Instance in compliance with all applicable laws and regulations of the\n jurisdictions in which such users are domiciled, reside, or are located at the\n-time of such access or use,\u00a0as well as these Terms. Any violation of these\n+time of such access or use, as well as these Terms. Any violation of these\n Terms may result in the suspension or termination by us, in our sole discretion,\n of your access to and use of the Instance.\n \n ## Limitation of Liability\n \n-In no event will Administrator\u2019s total liability to you for all damages, losses,\n+In no event will Administrator's total liability to you for all damages, losses,\n or causes of action exceed one hundred dollars ($100). If you are dissatisfied\n with the Instance or with these Terms, your sole remedy is to discontinue your\n use of the Instance.\n \n ## Links to and From Other Websites\n \n-You may gain access to other websites and Instances via links on the Instance.\u00a0\n+You may gain access to other websites and Instances via links on the Instance.\n These Terms apply to the Instance only and do not apply to Mastodon, other\n Instances, or other parties' websites. Similarly, you may have come to the\n Instance via a link from another website or Instance. The terms of use of other\n-websites and Instances do not apply to the Instance. Administrator\u00a0assumes no\n+websites and Instances do not apply to the Instance. Administrator assumes no\n responsibility for any terms of use or material outside of the Instance accessed\n via any link. You are free to establish a hypertext link to the Instance so\n long as the link does not state or imply any sponsorship of your website,\n-instance or service by\u00a0Administrator\u00a0or the Instance. Unless expressly agreed\n-to by us in writing,\u00a0reference to any of our products, services, processes or\n+instance or service by Administrator or the Instance. Unless expressly agreed\n+to by us in writing, reference to any of our products, services, processes or\n other information, by trade name, trademark, logo, or otherwise by you or any\n third party does not constitute or imply endorsement, sponsorship or\n recommendation thereof by us. You may not, without our prior written\n@@ -175,7 +175,7 @@ us, will be resolved exclusively through final and binding arbitration before a\n neutral arbitrator, rather than in a court by a judge or jury, in accordance\n with the terms of this Arbitration Agreement, except that, where available, you\n or we may (but are not required to) assert individual Claims in small claims\n-court if such Claims are within the scope of such court\u2019s jurisdiction. Further,\n+court if such Claims are within the scope of such court's jurisdiction. Further,\n this Arbitration Agreement does not preclude you from bringing issues to the\n attention of federal, state/provincial, or local agencies, and such agencies\n can, if the law allows, seek relief against us on your behalf. You agree that,\n@@ -203,7 +203,7 @@ Instance has your contact information, the Instance will send its Notice to you\n using the last email address we have on file for you if you have provided us\n with an email address (each, a \u201cNotice Address\u201d). The Notice must (i) describe\n the nature and basis of the Claim in sufficient detail to evaluate the merits of\n-the claiming party\u2019s Claim and (ii) set forth the specific relief sought,\n+the claiming party's Claim and (ii) set forth the specific relief sought,\n including the amount of money (if any) that is demanded and the means by which\n the demanding party calculated the claimed amount. Both parties agree that they\n will attempt to resolve a Claim through informal negotiation within sixty (60)\n@@ -242,33 +242,33 @@ pursue a Claim in a local small claims court rather than through arbitration so\n long as the matter remains in a small claims court and proceeds only on an\n individual basis.\n \n-## Choice of Law\u00a0\n+## Choice of Law\n \n-Any and all\u00a0claims related to or arising out of your use of, or access to the\n-Instance\u00a0shall be governed by internal substantive\u00a0laws\u00a0of New York in all\n+Any and all claims related to or arising out of your use of, or access to the\n+Instance shall be governed by internal substantive laws of New York in all\n respects, without regard for the jurisdiction or forum in which you are\n domiciled, reside, or located at the time of such access or use.\n \n-## Waiver and Severability\u00a0\n+## Waiver and Severability\n \n-If you do not comply with\u00a0a portion of these Terms and we do not\u00a0take action\n-right away, this does not mean we are giving up any of our rights\u00a0under these\n+If you do not comply with a portion of these Terms and we do not take action\n+right away, this does not mean we are giving up any of our rights under these\n Terms. If any part of these Terms is determined to be invalid or unenforceable\n-by a court of competent jurisdiction\u00a0or arbitrator, the remainder of the Terms\n-shall\u00a0be enforced to the maximum extent permitted by law.\n+by a court of competent jurisdiction or arbitrator, the remainder of the Terms\n+shall be enforced to the maximum extent permitted by law.\n \n ## Notices\n \n All notices to Administrator under these Terms, unless otherwise specified shall\n-be\u00a0sent\u00a0to\u00a0%{admin_email}. Service of any notice will be deemed given on the\n+be sent to %{admin_email}. Service of any notice will be deemed given on the\n date of receipt delivered by email.\n \n ## Changes to these Terms\n \n-We may\u00a0change or modify\u00a0these Terms by posting a revised version on the\n+We may change or modify these Terms by posting a revised version on the\n Instance, or by otherwise providing notice to you, and will state at the top of\n-the revised Terms the date they were last\u00a0revised. Changes will not apply\n-retroactively and will become effective no\u00a0earlier\u00a0than\u00a0fourteen\u00a0(14) calendar\n+the revised Terms the date they were last revised. Changes will not apply\n+retroactively and will become effective no earlier than fourteen (14) calendar\n days after they are posted, except for changes addressing changes made for legal\n reasons, which will be effective immediately. Your continued use of the\n-Instance\u00a0after any change means you agree to\u00a0the new Terms.\n+Instance after any change means you agree to the new Terms.\n---\n\n\n---\n\nChoice B:\napp/mailers/application_mailer.rb\n@@ -12,7 +12,7 @@ class ApplicationMailer < ActionMailer::Base\n   protected\n \n   def locale_for_account(account, &block)\n-    I18n.with_locale(account.user_locale || I18n.locale || I18n.default_locale, &block)\n+    I18n.with_locale(account.user_locale || I18n.default_locale, &block)\n   end\n \n   def set_autoreply_headers!\n---\napp/mailers/user_mailer.rb\n@@ -33,7 +33,7 @@ def reset_password_instructions(user, token, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -43,7 +43,7 @@ def password_change(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -53,7 +53,7 @@ def email_changed(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -63,7 +63,7 @@ def two_factor_enabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -73,7 +73,7 @@ def two_factor_disabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -83,7 +83,7 @@ def two_factor_recovery_codes_changed(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -93,7 +93,7 @@ def webauthn_enabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -103,7 +103,7 @@ def webauthn_disabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -114,7 +114,7 @@ def webauthn_credential_added(user, webauthn_credential)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: I18n.t('devise.mailer.webauthn_credential.added.subject')\n     end\n   end\n@@ -125,7 +125,7 @@ def webauthn_credential_deleted(user, webauthn_credential)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: I18n.t('devise.mailer.webauthn_credential.deleted.subject')\n     end\n   end\n@@ -219,7 +219,7 @@ def set_instance\n     @instance = Rails.configuration.x.local_domain\n   end\n \n-  def locale\n-    @resource.locale.presence || I18n.locale || I18n.default_locale\n+  def locale(use_current_locale: false)\n+    @resource.locale.presence || (use_current_locale && I18n.locale) || I18n.default_locale\n   end\n end\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/dashboard.scss\n@@ -86,9 +86,7 @@\n     color: $primary-text-color;\n     transition: all 100ms ease-in;\n     font-size: 14px;\n-    padding: 0 16px;\n-    line-height: 36px;\n-    height: 36px;\n+    padding: 8px 16px;\n     text-decoration: none;\n     margin-bottom: 4px;\n \n---\napp/javascript/styles/mastodon/dashboard.scss\n@@ -91,6 +91,7 @@\n     height: 36px;\n     text-decoration: none;\n     margin-bottom: 4px;\n+    white-space: nowrap;\n \n     &:active,\n     &:focus,\n@@ -111,6 +112,8 @@\n \n     span {\n       flex: 1 1 auto;\n+      overflow: hidden;\n+      text-overflow: ellipsis;\n     }\n \n     strong {\n---\n\n\n---\n\nChoice D:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix processing of mentions for post edits with an existing corresponding silent mention\n\nIssue Description:\nFixes #33208\n\n---\n\nChoice A:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/reducers/compose.js\n@@ -402,7 +402,7 @@ export default function compose(state = initialState, action) {\n       .set('isUploadingThumbnail', false)\n       .update('media_attachments', list => list.map(item => {\n         if (item.get('id') === action.media.id) {\n-          return fromJS(action.media);\n+          return fromJS(action.media).set('unattached', item.get('unattached'));\n         }\n \n         return item;\n---\n\n\n---\n\nChoice D:\nconfig/templates/terms-of-service.md\n@@ -1,7 +1,7 @@\n ## Introduction\n \n-These terms of service (the \"Terms\") cover your access and use of\u00a0Server\n-Operator\u2019s\u00a0(\"Administrator\",\u00a0\"we\", or \"us\") instance, located at\u00a0%{domain}\u00a0(the\n+These terms of service (the \"Terms\") cover your access and use of Server\n+Operator's (\"Administrator\", \"we\", or \"us\") instance, located at %{domain} (the\n \"Instance\"). These Terms apply solely to your use of the Instance as operated\n by the Administrator. Please note that we have no affiliation with Mastodon\n gGmbH (\u201cMastodon\u201d) and these Terms do not contain any representations or\n@@ -23,8 +23,8 @@ are old enough to access the Instance in your country, but are not old enough to\n have the legal authority to consent to our Terms, please ask your parent or\n legal guardian to read these Terms with you, as they must agree to the Terms on\n your behalf. If you are a parent or legal guardian who has accepted these terms\n-on your child\u2019s behalf, these terms apply to you and you are responsible for\n-your child\u2019s activities on the Instance.\n+on your child's behalf, these terms apply to you and you are responsible for\n+your child's activities on the Instance.\n \n ## Prohibited Uses\n \n@@ -36,14 +36,14 @@ and local laws and regulations in connection with your use of the Instance. You\n also agree not to use the Instance to engage in any prohibited conduct, or to\n assist any other person or entity in engaging in any prohibited conduct.\n \n-We reserve the right (but do not have the obligation)\u00a0in our sole discretion\u00a0to:\n+We reserve the right (but do not have the obligation) in our sole discretion to:\n (1) monitor the Instance for violations of these Terms; (2) take appropriate\n-legal action against anyone who\u00a0uses or accesses the Instance in a manner that\n-we believe\u00a0violates the law or these Terms, including without limitation,\n-reporting such user to law enforcement authorities;\u00a0(3)\u00a0deny access to the\n+legal action against anyone who uses or accesses the Instance in a manner that\n+we believe violates the law or these Terms, including without limitation,\n+reporting such user to law enforcement authorities; (3) deny access to the\n Instance or any features of the Instance to anyone who violates these Terms or\n-who\u00a0we believe\u00a0interferes with the ability of others to enjoy our Instance or\n-infringes the rights of others; and\u00a0(4) otherwise manage the Instance in a\n+who we believe interferes with the ability of others to enjoy our Instance or\n+infringes the rights of others; and (4) otherwise manage the Instance in a\n manner designed to protect our rights and property and to facilitate the proper\n functioning of the Instance.\n \n@@ -53,16 +53,16 @@ attempt to):\n \n - Violate these Terms or other policies and terms posted on, or otherwise\n - applicable to, the Instance; Upload any material, program, or software that\n-- contains any\u00a0virus, worm, spyware, Trojan horse or other program or code\n+- contains any virus, worm, spyware, Trojan horse or other program or code\n - designed to interrupt, destroy or limit the functionality of the Instance,\n-- launch a denial of service attack, or in any other way attempt\u00a0to interfere\n+- launch a denial of service attack, or in any other way attempt to interfere\n - with the functioning and availability of the Instance; Except as may be the\n - result of standard search engine or Internet browser usage, use, launch,\n - develop, or distribute any automated system, including without limitation, any\n - spider, robot, cheat utility, scraper, offline reader, or any data mining or\n-- similar data gathering extraction tools to\u00a0access the Instance, or use\u00a0or\n+- similar data gathering extraction tools to access the Instance, or use or\n - launch any unauthorized script or other software; Interfere with, disable,\n-- vandalize\u00a0or disrupt the Instance or servers or networks connected to the\n+- vandalize or disrupt the Instance or servers or networks connected to the\n - Instance; Hack into, penetrate, disable, or otherwise circumvent the security\n - measures of the Instance or servers or networks connected to the Instance; or\n - otherwise use the Instance in any way that violates any applicable national,\n@@ -90,11 +90,11 @@ the Content on the Instance.\n ## DMCA Copyright Infringement Notice\n \n We have implemented the procedures described in the Digital Millennium Copyright\n-Act of 1998 (\"DMCA\"),\u00a017 U.S.C. \u00a7 512\u00a0, regarding the reporting of alleged\n+Act of 1998 (\"DMCA\"), 17 U.S.C. \u00a7 512 , regarding the reporting of alleged\n copyright infringement and the removal of or disabling access to infringing\n-material. If you have a good faith belief that copyrighted material\u00a0on\u00a0the\n-Instance\u00a0is being used in a way that infringes a copyright over which you are\n-authorized\u00a0to act, you may make a Notice of Infringing Material.\u00a0If you have a\n+material. If you have a good faith belief that copyrighted material on the\n+Instance is being used in a way that infringes a copyright over which you are\n+authorized to act, you may make a Notice of Infringing Material. If you have a\n good faith belief that copyrighted material that was removed or access to which\n was disabled was a result of a mistake or misidentification, then you may make a\n Notice of Counter-Notification.\n@@ -103,57 +103,57 @@ Before serving a Notice of Infringing Material or Counter-Notification, you may\n wish to contact a lawyer to better understand your rights and obligations under\n the DMCA and other applicable laws. For example, if your Notice or\n Counter-Notifications fails to comply with all requirements of sections\n-512(c)(3) or 512(g)(3), respectively, your\u00a0Notice\u00a0or Counter-Notification may\n+512(c)(3) or 512(g)(3), respectively, your Notice or Counter-Notification may\n not be effective.\n \n ### Termination of Repeat Infringers\n \n-We will terminate or disable your use of the Instance\u00a0in appropriate\n+We will terminate or disable your use of the Instance in appropriate\n circumstances if you are deemed by us to be a repeat copyright infringer.\n \n ### Notices and Counter-Notifications must be sent to:\n \n DMCA Agent: Copyright Manager\n \n-Address:\u00a0%{dmca_address}\n+Address: %{dmca_address}\n \n Email: %{dmca_email}\n \n ## Disclaimer\n \n-Administrator reserves the right\u00a0in our sole discretion\u00a0to modify or\n-discontinue, temporarily or permanently, the Instance\u00a0(or any part thereof) with\n+Administrator reserves the right in our sole discretion to modify or\n+discontinue, temporarily or permanently, the Instance (or any part thereof) with\n or without notice to you. You agree that Administrator will not be liable to\n you or to any third party for any modification or discontinuance of the\n Instance, except as set forth in the \"Limitation of Liability\" section below.\n \n You understand that we are not responsible for any activities or legal\n consequences of your use of the Instance. Users are responsible for using the\n-Instance\u00a0in compliance with all applicable laws and regulations of the\n+Instance in compliance with all applicable laws and regulations of the\n jurisdictions in which such users are domiciled, reside, or are located at the\n-time of such access or use,\u00a0as well as these Terms. Any violation of these\n+time of such access or use, as well as these Terms. Any violation of these\n Terms may result in the suspension or termination by us, in our sole discretion,\n of your access to and use of the Instance.\n \n ## Limitation of Liability\n \n-In no event will Administrator\u2019s total liability to you for all damages, losses,\n+In no event will Administrator's total liability to you for all damages, losses,\n or causes of action exceed one hundred dollars ($100). If you are dissatisfied\n with the Instance or with these Terms, your sole remedy is to discontinue your\n use of the Instance.\n \n ## Links to and From Other Websites\n \n-You may gain access to other websites and Instances via links on the Instance.\u00a0\n+You may gain access to other websites and Instances via links on the Instance.\n These Terms apply to the Instance only and do not apply to Mastodon, other\n Instances, or other parties' websites. Similarly, you may have come to the\n Instance via a link from another website or Instance. The terms of use of other\n-websites and Instances do not apply to the Instance. Administrator\u00a0assumes no\n+websites and Instances do not apply to the Instance. Administrator assumes no\n responsibility for any terms of use or material outside of the Instance accessed\n via any link. You are free to establish a hypertext link to the Instance so\n long as the link does not state or imply any sponsorship of your website,\n-instance or service by\u00a0Administrator\u00a0or the Instance. Unless expressly agreed\n-to by us in writing,\u00a0reference to any of our products, services, processes or\n+instance or service by Administrator or the Instance. Unless expressly agreed\n+to by us in writing, reference to any of our products, services, processes or\n other information, by trade name, trademark, logo, or otherwise by you or any\n third party does not constitute or imply endorsement, sponsorship or\n recommendation thereof by us. You may not, without our prior written\n@@ -175,7 +175,7 @@ us, will be resolved exclusively through final and binding arbitration before a\n neutral arbitrator, rather than in a court by a judge or jury, in accordance\n with the terms of this Arbitration Agreement, except that, where available, you\n or we may (but are not required to) assert individual Claims in small claims\n-court if such Claims are within the scope of such court\u2019s jurisdiction. Further,\n+court if such Claims are within the scope of such court's jurisdiction. Further,\n this Arbitration Agreement does not preclude you from bringing issues to the\n attention of federal, state/provincial, or local agencies, and such agencies\n can, if the law allows, seek relief against us on your behalf. You agree that,\n@@ -203,7 +203,7 @@ Instance has your contact information, the Instance will send its Notice to you\n using the last email address we have on file for you if you have provided us\n with an email address (each, a \u201cNotice Address\u201d). The Notice must (i) describe\n the nature and basis of the Claim in sufficient detail to evaluate the merits of\n-the claiming party\u2019s Claim and (ii) set forth the specific relief sought,\n+the claiming party's Claim and (ii) set forth the specific relief sought,\n including the amount of money (if any) that is demanded and the means by which\n the demanding party calculated the claimed amount. Both parties agree that they\n will attempt to resolve a Claim through informal negotiation within sixty (60)\n@@ -242,33 +242,33 @@ pursue a Claim in a local small claims court rather than through arbitration so\n long as the matter remains in a small claims court and proceeds only on an\n individual basis.\n \n-## Choice of Law\u00a0\n+## Choice of Law\n \n-Any and all\u00a0claims related to or arising out of your use of, or access to the\n-Instance\u00a0shall be governed by internal substantive\u00a0laws\u00a0of New York in all\n+Any and all claims related to or arising out of your use of, or access to the\n+Instance shall be governed by internal substantive laws of New York in all\n respects, without regard for the jurisdiction or forum in which you are\n domiciled, reside, or located at the time of such access or use.\n \n-## Waiver and Severability\u00a0\n+## Waiver and Severability\n \n-If you do not comply with\u00a0a portion of these Terms and we do not\u00a0take action\n-right away, this does not mean we are giving up any of our rights\u00a0under these\n+If you do not comply with a portion of these Terms and we do not take action\n+right away, this does not mean we are giving up any of our rights under these\n Terms. If any part of these Terms is determined to be invalid or unenforceable\n-by a court of competent jurisdiction\u00a0or arbitrator, the remainder of the Terms\n-shall\u00a0be enforced to the maximum extent permitted by law.\n+by a court of competent jurisdiction or arbitrator, the remainder of the Terms\n+shall be enforced to the maximum extent permitted by law.\n \n ## Notices\n \n All notices to Administrator under these Terms, unless otherwise specified shall\n-be\u00a0sent\u00a0to\u00a0%{admin_email}. Service of any notice will be deemed given on the\n+be sent to %{admin_email}. Service of any notice will be deemed given on the\n date of receipt delivered by email.\n \n ## Changes to these Terms\n \n-We may\u00a0change or modify\u00a0these Terms by posting a revised version on the\n+We may change or modify these Terms by posting a revised version on the\n Instance, or by otherwise providing notice to you, and will state at the top of\n-the revised Terms the date they were last\u00a0revised. Changes will not apply\n-retroactively and will become effective no\u00a0earlier\u00a0than\u00a0fourteen\u00a0(14) calendar\n+the revised Terms the date they were last revised. Changes will not apply\n+retroactively and will become effective no earlier than fourteen (14) calendar\n days after they are posted, except for changes addressing changes made for legal\n reasons, which will be effective immediately. Your continued use of the\n-Instance\u00a0after any change means you agree to\u00a0the new Terms.\n+Instance after any change means you agree to the new Terms.\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix deletion of unconfirmed users with Webauthn set\n\nIssue Description:\nThis foreign key could use a `on_delete: :cascade`, but this fix doesn't rely on this, to avoid complicating backports with database migrations.\n\n---\n\nChoice A:\nstreaming/index.js\n@@ -1351,15 +1351,23 @@ const startServer = async () => {\n  * @param {function(string): void} [onSuccess]\n  */\n const attachServerWithConfig = (server, onSuccess) => {\n-  if (process.env.SOCKET || process.env.PORT && isNaN(+process.env.PORT)) {\n-    server.listen(process.env.SOCKET || process.env.PORT, () => {\n+  if (process.env.SOCKET) {\n+    server.listen(process.env.SOCKET, () => {\n       if (onSuccess) {\n         fs.chmodSync(server.address(), 0o666);\n         onSuccess(server.address());\n       }\n     });\n   } else {\n-    server.listen(+(process.env.PORT || 4000), process.env.BIND || '127.0.0.1', () => {\n+    const port = +(process.env.PORT || 4000);\n+    let bind = process.env.BIND ?? '127.0.0.1';\n+    // Web uses the URI syntax for BIND, which means IPv6 addresses may\n+    // be wrapped in square brackets:\n+    if (bind.startsWith('[') && bind.endsWith(']')) {\n+      bind = bind.slice(1, -1);\n+    }\n+\n+    server.listen(port, bind, () => {\n       if (onSuccess) {\n         onSuccess(`${server.address().address}:${server.address().port}`);\n       }\n---\n\n\n---\n\nChoice B:\nlib/mastodon/cli/feeds.rb\n@@ -5,6 +5,7 @@\n module Mastodon::CLI\n   class Feeds < Base\n     include Redisable\n+    include DatabaseHelper\n \n     option :all, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n@@ -44,6 +45,38 @@ def clear\n       say('OK', :green)\n     end\n \n+    desc 'vacuum', 'Remove home feeds of inactive users from Redis'\n+    long_desc <<-LONG_DESC\n+      Running this task should not be needed in most cases, as Mastodon will\n+      automatically clean up feeds from inactive accounts every day.\n+\n+      However, this task is more aggressive in order to clean up feeds that\n+      may have been missed because of bugs or database mishaps.\n+    LONG_DESC\n+    def vacuum\n+      with_read_replica do\n+        say('Deleting orphaned home feeds\u2026')\n+        redis.scan_each(match: 'feed:home:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = User.confirmed.signed_in_recently.where(account_id: ids).pluck(:account_id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+\n+        say('Deleting orphaned list feeds\u2026')\n+        redis.scan_each(match: 'feed:list:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = List.where(account_id: User.confirmed.signed_in_recently.select(:account_id)).where(id: ids).pluck(:id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+      end\n+    end\n+\n     private\n \n     def active_user_accounts\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.jsx\n@@ -151,8 +151,13 @@ export const InlineFollowSuggestions = ({ hidden }) => {\n       return;\n     }\n \n-    setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n-    setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n+      setCanScrollLeft((bodyRef.current.clientWidth - bodyRef.current.scrollLeft) < bodyRef.current.scrollWidth);\n+      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n+    } else {\n+      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n+      setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    }\n   }, [setCanScrollRight, setCanScrollLeft, bodyRef]);\n \n   const handleDismiss = useCallback(() => {\n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\nCHANGELOG.md\n@@ -2,6 +2,18 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.2.15] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+\n ## [4.2.14] - 2024-02-03\n \n ### Added\n---\nDockerfile\n@@ -28,6 +28,7 @@ RUN apt-get update && \\\n         libgdbm-dev \\\n         libgmp-dev \\\n         libssl-dev \\\n+        libyaml-dev \\\n         libyaml-0-2 \\\n         ca-certificates \\\n         libreadline8 \\\n---\nGemfile.lock\n@@ -28,47 +28,47 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actioncable (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n-    actionmailbox (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      activejob (= 7.0.8.6)\n-      activerecord (= 7.0.8.6)\n-      activestorage (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actionmailbox (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      activejob (= 7.0.8.7)\n+      activerecord (= 7.0.8.7)\n+      activestorage (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      actionview (= 7.0.8.6)\n-      activejob (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actionmailer (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      actionview (= 7.0.8.7)\n+      activejob (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.0)\n-    actionpack (7.0.8.6)\n-      actionview (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actionpack (7.0.8.7)\n+      actionview (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       rack (~> 2.0, >= 2.2.4)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.0)\n       rails-html-sanitizer (~> 1.0, >= 1.2.0)\n-    actiontext (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      activerecord (= 7.0.8.6)\n-      activestorage (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actiontext (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      activerecord (= 7.0.8.7)\n+      activestorage (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actionview (7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       builder (~> 3.1)\n       erubi (~> 1.4)\n       rails-dom-testing (~> 2.0)\n@@ -78,22 +78,22 @@ GEM\n       activemodel (>= 4.1, < 7.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    activejob (7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       globalid (>= 0.3.6)\n-    activemodel (7.0.8.6)\n-      activesupport (= 7.0.8.6)\n-    activerecord (7.0.8.6)\n-      activemodel (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n-    activestorage (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      activejob (= 7.0.8.6)\n-      activerecord (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    activemodel (7.0.8.7)\n+      activesupport (= 7.0.8.7)\n+    activerecord (7.0.8.7)\n+      activemodel (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n+    activestorage (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      activejob (= 7.0.8.7)\n+      activerecord (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       marcel (~> 1.0)\n       mini_mime (>= 1.1.0)\n-    activesupport (7.0.8.6)\n+    activesupport (7.0.8.7)\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       i18n (>= 1.6, < 2)\n       minitest (>= 5.1)\n@@ -469,7 +469,7 @@ GEM\n       net-protocol\n     net-ssh (7.1.0)\n     nio4r (2.7.4)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     nsa (0.3.0)\n@@ -550,20 +550,20 @@ GEM\n       rack\n     rack-test (2.1.0)\n       rack (>= 1.3)\n-    rails (7.0.8.6)\n-      actioncable (= 7.0.8.6)\n-      actionmailbox (= 7.0.8.6)\n-      actionmailer (= 7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      actiontext (= 7.0.8.6)\n-      actionview (= 7.0.8.6)\n-      activejob (= 7.0.8.6)\n-      activemodel (= 7.0.8.6)\n-      activerecord (= 7.0.8.6)\n-      activestorage (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    rails (7.0.8.7)\n+      actioncable (= 7.0.8.7)\n+      actionmailbox (= 7.0.8.7)\n+      actionmailer (= 7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      actiontext (= 7.0.8.7)\n+      actionview (= 7.0.8.7)\n+      activejob (= 7.0.8.7)\n+      activemodel (= 7.0.8.7)\n+      activerecord (= 7.0.8.7)\n+      activestorage (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       bundler (>= 1.15.0)\n-      railties (= 7.0.8.6)\n+      railties (= 7.0.8.7)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -572,15 +572,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.7)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    railties (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       method_source\n       rake (>= 12.2)\n       thor (~> 1.0)\n@@ -743,7 +743,7 @@ GEM\n     test-prof (1.2.3)\n     thor (1.3.2)\n     tilt (2.2.0)\n-    timeout (0.4.2)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.0)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n@@ -800,7 +800,8 @@ GEM\n       railties (>= 5.2)\n       semantic_range (>= 2.3.0)\n     websocket (1.2.9)\n-    websocket-driver (0.7.6)\n+    websocket-driver (0.7.7)\n+      base64\n       websocket-extensions (>= 0.1.0)\n     websocket-extensions (0.1.5)\n     wisper (2.0.1)\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -16,6 +16,7 @@ def clean_unconfirmed_accounts!\n     User.where('confirmed_at is NULL AND confirmation_sent_at <= ?', 2.days.ago).reorder(nil).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.14\n+    image: ghcr.io/mastodon/mastodon:v4.2.15\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.14\n+    image: ghcr.io/mastodon/mastodon:v4.2.15\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.14\n+    image: ghcr.io/mastodon/mastodon:v4.2.15\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      14\n+      15\n     end\n \n     def default_prerelease\n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -18,8 +19,24 @@\n       confirmed_user.update!(confirmed_at: 1.day.ago)\n     end\n \n-    it 'deletes the old unconfirmed user' do\n-      expect { subject.perform }.to change { User.exists?(old_unconfirmed_user.id) }.from(true).to(false)\n+    it 'deletes the old unconfirmed user and metadata while preserving confirmed user and newer unconfirmed user' do\n+      expect { subject.perform }\n+        .to change { User.exists?(old_unconfirmed_user.id) }\n+        .from(true).to(false)\n+        .and change { Account.exists?(old_unconfirmed_user.account_id) }\n+        .from(true).to(false)\n+      expect { moderation_note.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n+      expect(User.exists?(new_unconfirmed_user.id))\n+        .to be true\n+      expect(User.exists?(confirmed_user.id))\n+        .to be true\n+      expect(Account.exists?(new_unconfirmed_user.account_id))\n+        .to be true\n+      expect(Account.exists?(confirmed_user.account_id))\n+        .to be true\n     end\n \n     it \"deletes the old unconfirmed user's account\" do\n---\nCHANGELOG.md\n@@ -3,7 +3,18 @@ Changelog\n \n All notable changes to this project will be documented in this file.\n \n-## [4.2.21] - 2024-12-03\n+## [4.1.22] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+\n+## [4.1.21] - 2024-12-03\n \n ### Fixed\n \n---\nDockerfile\n@@ -29,6 +29,7 @@ RUN apt-get update && \\\n         libgdbm-dev \\\n         libgmp-dev \\\n         libssl-dev \\\n+        libyaml-dev \\\n         libyaml-0-2 \\\n         ca-certificates \\\n         libreadline8 \\\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -16,6 +16,7 @@ def clean_unconfirmed_accounts!\n     User.where('confirmed_at is NULL AND confirmation_sent_at <= ?', 2.days.ago).reorder(nil).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.21\n+    image: ghcr.io/mastodon/mastodon:v4.1.22\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.21\n+    image: ghcr.io/mastodon/mastodon:v4.1.22\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.21\n+    image: ghcr.io/mastodon/mastodon:v4.1.22\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      21\n+      22\n     end\n \n     def flags\n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -7,6 +7,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -16,8 +17,24 @@\n       confirmed_user.update!(confirmed_at: 1.day.ago)\n     end\n \n-    it 'deletes the old unconfirmed user' do\n-      expect { subject.perform }.to change { User.exists?(old_unconfirmed_user.id) }.from(true).to(false)\n+    it 'deletes the old unconfirmed user and metadata while preserving confirmed user and newer unconfirmed user' do\n+      expect { subject.perform }\n+        .to change { User.exists?(old_unconfirmed_user.id) }\n+        .from(true).to(false)\n+        .and change { Account.exists?(old_unconfirmed_user.account_id) }\n+        .from(true).to(false)\n+      expect { moderation_note.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n+      expect(User.exists?(new_unconfirmed_user.id))\n+        .to be true\n+      expect(User.exists?(confirmed_user.id))\n+        .to be true\n+      expect(Account.exists?(new_unconfirmed_user.account_id))\n+        .to be true\n+      expect(Account.exists?(confirmed_user.account_id))\n+        .to be true\n     end\n \n     it \"deletes the old unconfirmed user's account\" do\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix missing value limits for `UserRole` position\n\nIssue Description:\nResolves https://github.com/mastodon/mastodon/issues/26256\r\n\r\nSimilar to existing https://github.com/mastodon/mastodon/blob/v4.3.2/app/models/webauthn_credential.rb#L18\r\n\r\nWhat is currently an app error becomes an utterly absurd validation error instead:\r\n\r\n<img width=\"353\" alt=\"Screenshot 2024-12-03 at 21 28 40\" src=\"https://github.com/user-attachments/assets/4971bbe6-fa94-46b4-a0a7-d71eb755ffec\">\r\n\r\nPossible followup...\r\n\r\n- I bet there are more of these where user-supplied values could exceed a column limit, could do audit on that\r\n- I could have sworn there was either a more framework-native way to do this, or a way to introspect into PG/Rails to get these values, but I can't find it\n\n---\n\nChoice A:\napp/javascript/styles/mastodon-light/diff.scss\n@@ -159,8 +159,8 @@\n .error-modal,\n .onboarding-modal,\n .compare-history-modal,\n-.report-modal__comment .setting-text__wrapper,\n-.report-modal__comment .setting-text,\n+.report-modal__comment,\n+.report-modal__comment,\n .announcements,\n .picture-in-picture__header,\n .picture-in-picture__footer,\n@@ -169,6 +169,11 @@\n   border: 1px solid var(--background-border-color);\n }\n \n+.setting-text__wrapper,\n+.setting-text {\n+  border: 1px solid var(--background-border-color);\n+}\n+\n .reactions-bar__item:hover,\n .reactions-bar__item:focus,\n .reactions-bar__item:active {\n@@ -198,14 +203,6 @@\n   color: $white;\n }\n \n-.report-modal__comment {\n-  border-right-color: lighten($ui-base-color, 8%);\n-}\n-\n-.report-modal__container {\n-  border-top-color: lighten($ui-base-color, 8%);\n-}\n-\n .column-settings__hashtags .column-select__option {\n   color: $white;\n }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -3911,7 +3911,7 @@ $ui-header-logo-wordmark-width: 99px;\n \n   &__wrapper {\n     background: $white;\n-    border: 1px solid $ui-secondary-color;\n+    border: 1px solid var(--background-border-color);\n     margin-bottom: 10px;\n     border-radius: 4px;\n \n@@ -6298,9 +6298,10 @@ a.status-card {\n .report-modal,\n .actions-modal,\n .compare-history-modal {\n-  background: lighten($ui-secondary-color, 8%);\n-  color: $inverted-text-color;\n-  border-radius: 8px;\n+  background: var(--background-color);\n+  color: $primary-text-color;\n+  border-radius: 4px;\n+  border: 1px solid var(--background-border-color);\n   overflow: hidden;\n   max-width: 90vw;\n   width: 480px;\n@@ -6344,6 +6345,7 @@ a.status-card {\n .report-modal {\n   width: 90vw;\n   max-width: 700px;\n+  border: 1px solid var(--background-border-color);\n }\n \n .report-dialog-modal {\n@@ -6567,7 +6569,7 @@ a.status-card {\n \n .report-modal__container {\n   display: flex;\n-  border-top: 1px solid $ui-secondary-color;\n+  border-top: 1px solid var(--background-border-color);\n \n   @media screen and (width <= 480px) {\n     flex-wrap: wrap;\n@@ -6625,7 +6627,7 @@ a.status-card {\n \n .report-modal__comment {\n   padding: 20px;\n-  border-inline-end: 1px solid $ui-secondary-color;\n+  border-inline-end: 1px solid var(--background-border-color);\n   max-width: 320px;\n \n   p {\n@@ -6636,7 +6638,7 @@ a.status-card {\n \n   .setting-text-label {\n     display: block;\n-    color: $inverted-text-color;\n+    color: $secondary-text-color;\n     font-size: 14px;\n     font-weight: 500;\n     margin-bottom: 10px;\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -10,21 +10,24 @@ The following changelog entries focus on changes visible to users, administrator\n \n - **Add confirmation interstitial instead of silently redirecting logged-out visitors to remote resources** (#27792, #28902, and #30651 by @ClearlyClaire and @Gargron)\\\n   This fixes a longstanding open redirect in Mastodon, at the cost of added friction when local links to remote resources are shared.\n+- Change `form-action` Content-Security-Policy directive to be more restrictive (#26897 by @ClearlyClaire)\n+- Update dependencies\n \n ### Added\n \n-- **Add experimental server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, and #31513 by @ClearlyClaire, @mgmn, and @renchap)\\\n+- **Add server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, #31513, #31592, #31594, #31638, #31746, #31652, #31709, #31725, #31745, #31613, #31657, #31840, #31610 and #31929 by @ClearlyClaire, @Gargron, @mgmn, and @renchap)\\\n   Group notifications of the same type for the same target, so that your notifications no longer get cluttered by boost and favorite notifications as soon as a couple of your posts get traction.\\\n   This is done server-side so that clients can efficiently get relevant groups without having to go through numerous pages of individual notifications.\\\n   As part of this, the visual design of the entire notifications feature has been revamped.\\\n   This feature is intended to eventually replace the existing notifications column, but for this first beta, users will have to enable it in the \u201cExperimental features\u201d section of the notifications column settings.\\\n   The API is not final yet, but it consists of:\n   - a new `group_key` attribute to `Notification` entities\n-  - `GET /api/v2_alpha/notifications`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-grouped\n-  - `GET /api/v2_alpha/notifications/:group_key`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-notification-group\n-  - `POST /api/v2_alpha/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/notifications_alpha/#dismiss-group\n-  - `GET /api/v2_alpha/notifications/:unread_count`: https://docs.joinmastodon.org/methods/notifications_alpha/#unread-group-count\n-- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, and #31541 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n+  - `GET /api/v2/notifications`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-grouped\n+  - `GET /api/v2/notifications/:group_key`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-notification-group\n+  - `GET /api/v2/notifications/:group_key/accounts`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-group-accounts\n+  - `POST /api/v2/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/grouped_notifications/#dismiss-group\n+  - `GET /api/v2/notifications/:unread_count`: https://docs.joinmastodon.org/methods/grouped_notifications/#unread-group-count\n+- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, #31541, and #31723 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n   The old \u201cBlock notifications from non-followers\u201d, \u201cBlock notifications from people you don't follow\u201d and \u201cBlock direct messages from people you don't follow\u201d notification settings have been replaced by a new set of settings found directly in the notification column.\\\n   You can now separately filter or drop notifications from people you don't follow, people who don't follow you, accounts created within the past 30 days, as well as unsolicited private mentions, and accounts limited by the moderation.\\\n   Instead of being outright dropped, notifications that you chose to filter are put in a separate \u201cFiltered notifications\u201d box that you can review separately without it clogging your main notifications.\\\n@@ -57,26 +60,31 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add timeline of public posts about a trending link** (#30381 and #30840 by @Gargron)\\\n   You can now see public posts mentioning currently-trending articles from people who have opted into discovery features.\\\n   This adds a new REST API endpoint: https://docs.joinmastodon.org/methods/timelines/#link\n-- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, and #30846 by @Gargron)\\\n+- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, #30846, #31819, and #31900 by @Gargron and @oneiros)\\\n   This adds a mechanism to [highlight the author of news articles](https://blog.joinmastodon.org/2024/07/highlighting-journalism-on-mastodon/) shared on Mastodon.\\\n   Articles hosted outside the fediverse can indicate a fediverse author with a meta tag:\n   ```html\n   <meta name=\"fediverse:creator\" content=\"username@domain\" />\n   ```\n   On the API side, this is represented by a new `authors` attribute to the `PreviewCard` entity: https://docs.joinmastodon.org/entities/PreviewCard/#authors\\\n-  Note that this feature is still work in progress and the tagging format and verification mechanisms may change in future releases.\n+  Users can allow arbitrary domains to use `fediverse:creator` to credit them by visiting `/settings/verification`.\\\n+  This is federated as a new `attributionDomains` property in the `http://joinmastodon.org/ns` namespace, containing an array of domain names: https://docs.joinmastodon.org/spec/activitypub/#properties-used-1\n - **Add in-app notifications for moderation actions and warnings** (#30065, #30082, and #30081 by @ClearlyClaire)\\\n   In addition to email notifications, also notify users of moderation actions or warnings against them directly within the app, so they are less likely to miss important communication from their moderators.\\\n   This adds the `moderation_warning` notification type to the REST API and streaming, with a new [`moderation_warning` attribute](https://docs.joinmastodon.org/entities/Notification/#moderation_warning).\n - **Add domain information to profiles in web UI** (#29602 by @Gargron)\\\n   Clicking the domain of a user in their profile will now open a tooltip with a short explanation about servers and federation.\n+- **Add support for Redis sentinel** (#31694, #31623, #31744, #31767, and #31768 by @ThisIsMissEm and @oneiros)\\\n+  See https://docs.joinmastodon.org/admin/scaling/#redis-sentinel\n - Add ability to reorder uploaded media before posting in web UI (#28456 by @Gargron)\n - Add moderation interface for searching hashtags (#30880 by @ThisIsMissEm)\n - Add ability for admins to configure instance favicon and logo (#30040, #30208, #30259, #30375, #30734, #31016, and #30205 by @ClearlyClaire, @FawazFarid, @JasonPunyon, @mgmn, and @renchap)\\\n   This is also exposed through the REST API: https://docs.joinmastodon.org/entities/Instance/#icon\n - Add `api_versions` to `/api/v2/instance` (#31354 by @ClearlyClaire)\\\n   Add API version number to make it easier for clients to detect compatible features going forward.\\\n   See API documentation at https://docs.joinmastodon.org/entities/Instance/#api-versions\n+- Add quick links to Administration and Moderation Reports from Web UI (#24838 by @ThisIsMissEm)\n+- Add link to `/admin/roles` in moderation interface when changing someone's role (#31791 by @ClearlyClaire)\n - Add recent audit log entries in federation moderation interface (#27386 by @ThisIsMissEm)\n - Add profile setup to onboarding in web UI (#27829, #27876, and #28453 by @Gargron)\n - Add prominent share/copy button on profiles in web UI (#27865 and #27889 by @ClearlyClaire and @Gargron)\n@@ -113,21 +121,24 @@ The following changelog entries focus on changes visible to users, administrator\n - Add support for multiple `redirect_uris` when creating OAuth 2.0 Applications (#29192 by @ThisIsMissEm)\n - Add Interlingue and Interlingua to interface languages (#28630 and #30828 by @Dhghomon and @renchap)\n - Add Kashubian, Pennsylvania Dutch, Vai, Jawi Malay, Mohawk and Low German to posting languages (#26024, #26634, #27136, #29098, #27115, and #27434 by @EngineerDali, @HelgeKrueger, and @gunchleoc)\n-- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n - Add option to use native Ruby driver for Redis through `REDIS_DRIVER=ruby` (#30717 by @vmstan)\n - Add support for libvips in addition to ImageMagick (#30090, #30590, #30597, #30632, #30857, #30869, and #30858 by @ClearlyClaire, @Gargron, and @mjankowski)\\\n   Server admins can now use libvips as a faster and lighter alternative to ImageMagick for processing user-uploaded images.\\\n   This requires libvips 8.13 or newer, and needs to be enabled with `MASTODON_USE_LIBVIPS=true`.\\\n   This is enabled by default in the official Docker images, and is intended to completely replace ImageMagick in the future.\n+- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n+- Add anchors to each authorized application in `/oauth/authorized_applications` (#31677 by @fowl2)\n - Add active animation to header settings button (#30221, #30307, and #30388 by @daudix)\n - Add OpenTelemetry instrumentation (#30130, #30322, #30353, and #30350 by @julianocosta89, @renchap, and @robbkidd)\\\n   See https://docs.joinmastodon.org/admin/config/#otel for documentation\n - Add API to get multiple accounts and statuses (#27871 and #30465 by @ClearlyClaire)\\\n   This adds `GET /api/v1/accounts` and `GET /api/v1/statuses` to the REST API, see https://docs.joinmastodon.org/methods/accounts/#index and https://docs.joinmastodon.org/methods/statuses/#index\n+- Add support for CORS to `POST /oauth/revoke` (#31743 by @ClearlyClaire)\n - Add redirection back to previous page after site upload deletion (#30141 by @FawazFarid)\n - Add RFC8414 OAuth 2.0 server metadata (#29191 by @ThisIsMissEm)\n - Add loading indicator and empty result message to advanced interface search (#30085 by @ClearlyClaire)\n - Add `profile` OAuth 2.0 scope, allowing more limited access to user data (#29087 and #30357 by @ThisIsMissEm)\n+- Add global Regexp timeout (#31928 by @ClearlyClaire)\n - Add the role ID to the badge component (#29707 by @renchap)\n - Add diagnostic message for failure during CLI search deploy (#29462 by @mjankowski)\n - Add pagination `Link` headers on API accounts/statuses when pinned true (#29442 by @mjankowski)\n@@ -156,34 +167,43 @@ The following changelog entries focus on changes visible to users, administrator\n - **Change icons throughout the web interface** (#27385, #27539, #27555, #27579, #27700, #27817, #28519, #28709, #28064, #28775, #28780, #27924, #29294, #29395, #29537, #29569, #29610, #29612, #29649, #29844, #27780, #30974, #30963, #30962, #30961, #31362, #31363, #31359, #31371, #31360, #31512, #31511, and #31525 by @ClearlyClaire, @Gargron, @arbolitoloco1, @mjankowski, @nclm, @renchap, @ronilaukkarinen, and @zunda)\\\n   This changes all the interface icons from FontAwesome to Material Symbols for a more modern look, consistent with the official Mastodon Android app.\\\n   In addition, better care is given to pixel alignment, and icon variants are used to better highlight active/inactive state.\n-- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, and #29659 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n+- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, #29659, and #31889 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n   The compose form has been completely redesigned for a more modern and consistent look, as well as spelling out the chosen privacy setting and language name at all times.\\\n   As part of this, the \u201cUnlisted\u201d privacy setting has been renamed to \u201cQuiet public\u201d.\n-- **Change design of confirmation modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, and #31399 by @ClearlyClaire, @Gargron, and @tribela)\\\n+- **Change design of modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, #31399, #31555, #31752, #31801, #31883, #31844, #31864, and #31943 by @ClearlyClaire, @Gargron, @tribela and @vmstan)\\\n   The mute, block, and domain block confirmation modals have been completely redesigned to be clearer and include more detailed information on the action to be performed.\\\n   They also have a more modern and consistent design, along with other confirmation modals in the application.\n - **Change colors throughout the web UI** (#29522, #29584, #29653, #29779, #29803, #29809, #29808, #29828, #31034, #31168, #31266, #31348, #31349, #31361, and #31510 by @ClearlyClaire, @Gargron, @renchap, and @vmstan)\n-- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878 and #29272 by @Gargron)\n+- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878, #29272, and #31912 by @Gargron)\n - **Change email templates** (#28416, #28755, #28814, #29064, #28883, #29470, #29607, #29761, #29760, and #29879 by @ClearlyClaire, @Gargron, @hteumeuleu, and @mjankowski)\\\n   All emails to end-users have been completely redesigned with a fresh new look, providing more information while making them easier to read and keeping maximum compatibility across mail clients.\n - **Change follow recommendations algorithm** (#28314, #28433, #29017, #29108, #29306, #29550, #29619, and #31474 by @ClearlyClaire, @Gargron, @kernal053, @mjankowski, and @wheatear-dev)\\\n   This replaces the \u201cpast interactions\u201d recommendation algorithm with a \u201cfriends of friends\u201d algorithm that suggests accounts followed by people you follow, and a \u201csimilar profiles\u201d algorithm that suggests accounts with a profile similar to your most recent follows.\\\n   In addition, the implementation has been significantly reworked, and all follow recommendations are now dismissable.\\\n   This change deprecates the `source` attribute in `Suggestion` entities in the REST API, and replaces it with the new [`sources` attribute](https://docs.joinmastodon.org/entities/Suggestion/#sources).\n - Change account search algorithm (#30803 by @Gargron)\n-- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, and #30795 by @TheEssem, @ThisIsMissEm, @jippi, @timetinytim, and @vmstan)\\\n+- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, #30795, #31612, and #31615 by @TheEssem, @ThisIsMissEm, @jippi, @renchap, @timetinytim, and @vmstan)\\\n   In order to reduce the amount of runtime dependencies, the streaming server has been moved into a separate package and Docker image.\\\n   The `mastodon` image does not contain the streaming server anymore, as it has been moved to its own `mastodon-streaming` image.\\\n   Administrators may need to update their setup accordingly.\n-- Change how content warnings and filters are displayed in web UI (#31365 by @Gargron)\n+- Change how content warnings and filters are displayed in web UI (#31365, and #31761 by @Gargron)\n+- Change preview card processing to ignore `undefined` as canonical url (#31882 by @oneiros)\n+- Change embedded posts to use web UI (#31766 by @Gargron)\n+- Change inner borders in media galleries in web UI (#31852 by @Gargron)\n+- Change design of hide media button in web UI (#31807 by @Gargron)\n+- Change labels on thread indicators in web UI (#31806 by @Gargron)\n+- Change report action buttons to be disabled when action has already been taken (#31773, #31822, and #31899 by @ClearlyClaire and @ThisIsMissEm)\n+- Change width of columns in advanced web UI (#31762 by @Gargron)\n+- Change design of unread conversations in web UI (#31763 by @Gargron)\n - Change Web UI to allow viewing and severing relationships with suspended accounts (#27667 by @ClearlyClaire)\\\n   This also adds a `with_suspended` parameter to `GET /api/v1/accounts/relationships` in the REST API.\n+- Change preview card image size limit from 2MB to 8MB when using libvips (#31904 by @ClearlyClaire)\n - Change avatars border radius (#31390 by @renchap)\n - Change counters to be displayed on profile timelines in web UI (#30525 by @Gargron)\n - Change disabled buttons color in light mode to make the difference more visible (#30998 by @renchap)\n - Change design of people tab on explore in web UI (#30059 by @Gargron)\n - Change sidebar text in web UI (#30696 by @Gargron)\n-- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452 and #28465 by @Gargron and @renchap)\n+- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452, #28465, and #31934 by @ClearlyClaire, @Gargron and @renchap)\n - Change media to be hidden/blurred by default in report modal (#28522 by @ClearlyClaire)\n - Change order of the \"muting\" and \"blocking\" list options in \u201cData Exports\u201d (#26088 by @fixermark)\n - Change admin and moderation notes character limit from 500 to 2000 characters (#30288 by @ThisIsMissEm)\n@@ -197,6 +217,7 @@ The following changelog entries focus on changes visible to users, administrator\n - Change dropdown menu icon to not be replaced by close icon when open in web UI (#29532 by @Gargron)\n - Change back button to always appear in advanced web UI (#29551 and #29669 by @Gargron)\n - Change border of active compose field search inputs (#29832 and #29839 by @vmstan)\n+- Change instances of Nokogiri HTML4 parsing to HTML5 (#31812, #31815, #31813, and #31814 by @flavorjones)\n - Change link detection to allow `@` at the end of an URL (#31124 by @adamniedzielski)\n - Change User-Agent to use Mastodon as the product, and http.rb as platform details (#31192 by @ClearlyClaire)\n - Change layout and wording of the Content Retention server settings page (#27733 by @vmstan)\n@@ -249,8 +270,17 @@ The following changelog entries focus on changes visible to users, administrator\n - Fix various issues when in link preview card generation (#28748, #30017, #30362, #30173, #30853, #30929, #30933, #30957, #30987, and #31144 by @adamniedzielski, @oneiros, @phocks, @timothyjrogers, and @tribela)\n - Fix handling of missing links in Webfinger responses (#31030 by @adamniedzielski)\n - Fix HTTP 500 error in `/api/v1/polls/:id/votes` when required `choices` parameter is missing (#25598 by @danielmbrasil)\n+- Fix security context sometimes not being added in LD-Signed activities (#31871 by @ClearlyClaire)\n - Fix cross-origin loading of `inert.css` polyfill (#30687 by @louis77)\n - Fix cutoff of instance name in sign-up form (#30598 by @oneiros)\n+- Fix invalid date searches returning 503 errors (#31526 by @notchairmk)\n+- Fix invalid `visibility` values in `POST /api/v1/statuses` returning 500 errors (#31571 by @c960657)\n+- Fix some components re-rendering spuriously in web UI (#31879 and #31881 by @ClearlyClaire and @Gargron)\n+- Fix sort order of moderation notes on Reports and Accounts (#31528 by @ThisIsMissEm)\n+- Fix email language when recipient has no selected locale (#31747 by @ClearlyClaire)\n+- Fix frequently-used languages not correctly updating in the web UI (#31386 by @c960657)\n+- Fix `POST /api/v1/statuses` silently ignoring invalid `media_ids` parameter (#31681 by @c960657)\n+- Fix handling of the `BIND` environment variable in the streaming server (#31624 by @ThisIsMissEm)\n - Fix empty `aria-hidden` attribute value in logo resources area (#30570 by @mjankowski)\n - Fix \u201cRedirect URI\u201d field not being marked as required in \u201cNew application\u201d form (#30311 by @ThisIsMissEm)\n - Fix right-to-left text in preview cards (#30930 by @ClearlyClaire)\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -17,7 +17,7 @@ def patch\n     end\n \n     def default_prerelease\n-      'beta.1'\n+      'beta.2'\n     end\n \n     def prerelease\n---\n\n\n---\n\nChoice C:\napp/models/user_role.rb\n@@ -41,7 +41,7 @@ class UserRole < ApplicationRecord\n   EVERYONE_ROLE_ID = -99\n   NOBODY_POSITION = -1\n \n-  POSITION_LIMIT = 2**31\n+  POSITION_LIMIT = (2**31) - 1\n \n   module Flags\n     NONE = 0\n@@ -91,7 +91,7 @@ module Flags\n \n   validates :name, presence: true, unless: :everyone?\n   validates :color, format: { with: /\\A#?(?:[A-F0-9]{3}){1,2}\\z/i }, unless: -> { color.blank? }\n-  validates :position, numericality: { greater_than_or_equal_to: -POSITION_LIMIT, less_than_or_equal_to: POSITION_LIMIT }\n+  validates :position, numericality: { in: (-POSITION_LIMIT..POSITION_LIMIT) }\n \n   validate :validate_permissions_elevation\n   validate :validate_position_elevation\n---\nspec/models/user_role_spec.rb\n@@ -21,11 +21,9 @@\n     describe 'position' do\n       subject { Fabricate.build :user_role }\n \n-      let(:excess) { 2**32 }\n-      let(:limit) { 2**31 }\n+      let(:limit) { described_class::POSITION_LIMIT }\n \n-      it { is_expected.to_not allow_values(-excess, excess).for(:position) }\n-      it { is_expected.to allow_values(-limit, limit).for(:position) }\n+      it { is_expected.to validate_numericality_of(:position).is_in(-limit..limit) }\n     end\n \n     describe 'color' do\n---\n\n\n---\n\nChoice D:\napp/models/follow_recommendation.rb\n@@ -18,5 +18,6 @@ class FollowRecommendation < ApplicationRecord\n   belongs_to :account_summary, foreign_key: :account_id, inverse_of: false\n   belongs_to :account\n \n-  scope :localized, ->(locale) { joins(:account_summary).merge(AccountSummary.localized(locale)) }\n+  scope :unsupressed, -> { where.not(FollowRecommendationSuppression.where(FollowRecommendationSuppression.arel_table[:account_id].eq(arel_table[:account_id])).select(1).arel.exists) }\n+  scope :localized, ->(locale) { unsupressed.joins(:account_summary).merge(AccountSummary.localized(locale)) }\n end\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix pushing hashtag-followed posts to feeds of inactive users\n\nIssue Description:\nFixes MAS-335\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -9288,6 +9288,7 @@ noscript {\n   border: 1px solid $highlight-text-color;\n   background: rgba($highlight-text-color, 0.15);\n   overflow: hidden;\n+  flex-shrink: 0;\n \n   &__background-image {\n     width: 125%;\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -10,21 +10,24 @@ The following changelog entries focus on changes visible to users, administrator\n \n - **Add confirmation interstitial instead of silently redirecting logged-out visitors to remote resources** (#27792, #28902, and #30651 by @ClearlyClaire and @Gargron)\\\n   This fixes a longstanding open redirect in Mastodon, at the cost of added friction when local links to remote resources are shared.\n+- Change `form-action` Content-Security-Policy directive to be more restrictive (#26897 by @ClearlyClaire)\n+- Update dependencies\n \n ### Added\n \n-- **Add experimental server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, and #31513 by @ClearlyClaire, @mgmn, and @renchap)\\\n+- **Add server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, #31513, #31592, #31594, #31638, #31746, #31652, #31709, #31725, #31745, #31613, #31657, #31840, #31610 and #31929 by @ClearlyClaire, @Gargron, @mgmn, and @renchap)\\\n   Group notifications of the same type for the same target, so that your notifications no longer get cluttered by boost and favorite notifications as soon as a couple of your posts get traction.\\\n   This is done server-side so that clients can efficiently get relevant groups without having to go through numerous pages of individual notifications.\\\n   As part of this, the visual design of the entire notifications feature has been revamped.\\\n   This feature is intended to eventually replace the existing notifications column, but for this first beta, users will have to enable it in the \u201cExperimental features\u201d section of the notifications column settings.\\\n   The API is not final yet, but it consists of:\n   - a new `group_key` attribute to `Notification` entities\n-  - `GET /api/v2_alpha/notifications`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-grouped\n-  - `GET /api/v2_alpha/notifications/:group_key`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-notification-group\n-  - `POST /api/v2_alpha/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/notifications_alpha/#dismiss-group\n-  - `GET /api/v2_alpha/notifications/:unread_count`: https://docs.joinmastodon.org/methods/notifications_alpha/#unread-group-count\n-- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, and #31541 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n+  - `GET /api/v2/notifications`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-grouped\n+  - `GET /api/v2/notifications/:group_key`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-notification-group\n+  - `GET /api/v2/notifications/:group_key/accounts`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-group-accounts\n+  - `POST /api/v2/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/grouped_notifications/#dismiss-group\n+  - `GET /api/v2/notifications/:unread_count`: https://docs.joinmastodon.org/methods/grouped_notifications/#unread-group-count\n+- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, #31541, and #31723 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n   The old \u201cBlock notifications from non-followers\u201d, \u201cBlock notifications from people you don't follow\u201d and \u201cBlock direct messages from people you don't follow\u201d notification settings have been replaced by a new set of settings found directly in the notification column.\\\n   You can now separately filter or drop notifications from people you don't follow, people who don't follow you, accounts created within the past 30 days, as well as unsolicited private mentions, and accounts limited by the moderation.\\\n   Instead of being outright dropped, notifications that you chose to filter are put in a separate \u201cFiltered notifications\u201d box that you can review separately without it clogging your main notifications.\\\n@@ -57,26 +60,31 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add timeline of public posts about a trending link** (#30381 and #30840 by @Gargron)\\\n   You can now see public posts mentioning currently-trending articles from people who have opted into discovery features.\\\n   This adds a new REST API endpoint: https://docs.joinmastodon.org/methods/timelines/#link\n-- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, and #30846 by @Gargron)\\\n+- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, #30846, #31819, and #31900 by @Gargron and @oneiros)\\\n   This adds a mechanism to [highlight the author of news articles](https://blog.joinmastodon.org/2024/07/highlighting-journalism-on-mastodon/) shared on Mastodon.\\\n   Articles hosted outside the fediverse can indicate a fediverse author with a meta tag:\n   ```html\n   <meta name=\"fediverse:creator\" content=\"username@domain\" />\n   ```\n   On the API side, this is represented by a new `authors` attribute to the `PreviewCard` entity: https://docs.joinmastodon.org/entities/PreviewCard/#authors\\\n-  Note that this feature is still work in progress and the tagging format and verification mechanisms may change in future releases.\n+  Users can allow arbitrary domains to use `fediverse:creator` to credit them by visiting `/settings/verification`.\\\n+  This is federated as a new `attributionDomains` property in the `http://joinmastodon.org/ns` namespace, containing an array of domain names: https://docs.joinmastodon.org/spec/activitypub/#properties-used-1\n - **Add in-app notifications for moderation actions and warnings** (#30065, #30082, and #30081 by @ClearlyClaire)\\\n   In addition to email notifications, also notify users of moderation actions or warnings against them directly within the app, so they are less likely to miss important communication from their moderators.\\\n   This adds the `moderation_warning` notification type to the REST API and streaming, with a new [`moderation_warning` attribute](https://docs.joinmastodon.org/entities/Notification/#moderation_warning).\n - **Add domain information to profiles in web UI** (#29602 by @Gargron)\\\n   Clicking the domain of a user in their profile will now open a tooltip with a short explanation about servers and federation.\n+- **Add support for Redis sentinel** (#31694, #31623, #31744, #31767, and #31768 by @ThisIsMissEm and @oneiros)\\\n+  See https://docs.joinmastodon.org/admin/scaling/#redis-sentinel\n - Add ability to reorder uploaded media before posting in web UI (#28456 by @Gargron)\n - Add moderation interface for searching hashtags (#30880 by @ThisIsMissEm)\n - Add ability for admins to configure instance favicon and logo (#30040, #30208, #30259, #30375, #30734, #31016, and #30205 by @ClearlyClaire, @FawazFarid, @JasonPunyon, @mgmn, and @renchap)\\\n   This is also exposed through the REST API: https://docs.joinmastodon.org/entities/Instance/#icon\n - Add `api_versions` to `/api/v2/instance` (#31354 by @ClearlyClaire)\\\n   Add API version number to make it easier for clients to detect compatible features going forward.\\\n   See API documentation at https://docs.joinmastodon.org/entities/Instance/#api-versions\n+- Add quick links to Administration and Moderation Reports from Web UI (#24838 by @ThisIsMissEm)\n+- Add link to `/admin/roles` in moderation interface when changing someone's role (#31791 by @ClearlyClaire)\n - Add recent audit log entries in federation moderation interface (#27386 by @ThisIsMissEm)\n - Add profile setup to onboarding in web UI (#27829, #27876, and #28453 by @Gargron)\n - Add prominent share/copy button on profiles in web UI (#27865 and #27889 by @ClearlyClaire and @Gargron)\n@@ -113,21 +121,24 @@ The following changelog entries focus on changes visible to users, administrator\n - Add support for multiple `redirect_uris` when creating OAuth 2.0 Applications (#29192 by @ThisIsMissEm)\n - Add Interlingue and Interlingua to interface languages (#28630 and #30828 by @Dhghomon and @renchap)\n - Add Kashubian, Pennsylvania Dutch, Vai, Jawi Malay, Mohawk and Low German to posting languages (#26024, #26634, #27136, #29098, #27115, and #27434 by @EngineerDali, @HelgeKrueger, and @gunchleoc)\n-- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n - Add option to use native Ruby driver for Redis through `REDIS_DRIVER=ruby` (#30717 by @vmstan)\n - Add support for libvips in addition to ImageMagick (#30090, #30590, #30597, #30632, #30857, #30869, and #30858 by @ClearlyClaire, @Gargron, and @mjankowski)\\\n   Server admins can now use libvips as a faster and lighter alternative to ImageMagick for processing user-uploaded images.\\\n   This requires libvips 8.13 or newer, and needs to be enabled with `MASTODON_USE_LIBVIPS=true`.\\\n   This is enabled by default in the official Docker images, and is intended to completely replace ImageMagick in the future.\n+- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n+- Add anchors to each authorized application in `/oauth/authorized_applications` (#31677 by @fowl2)\n - Add active animation to header settings button (#30221, #30307, and #30388 by @daudix)\n - Add OpenTelemetry instrumentation (#30130, #30322, #30353, and #30350 by @julianocosta89, @renchap, and @robbkidd)\\\n   See https://docs.joinmastodon.org/admin/config/#otel for documentation\n - Add API to get multiple accounts and statuses (#27871 and #30465 by @ClearlyClaire)\\\n   This adds `GET /api/v1/accounts` and `GET /api/v1/statuses` to the REST API, see https://docs.joinmastodon.org/methods/accounts/#index and https://docs.joinmastodon.org/methods/statuses/#index\n+- Add support for CORS to `POST /oauth/revoke` (#31743 by @ClearlyClaire)\n - Add redirection back to previous page after site upload deletion (#30141 by @FawazFarid)\n - Add RFC8414 OAuth 2.0 server metadata (#29191 by @ThisIsMissEm)\n - Add loading indicator and empty result message to advanced interface search (#30085 by @ClearlyClaire)\n - Add `profile` OAuth 2.0 scope, allowing more limited access to user data (#29087 and #30357 by @ThisIsMissEm)\n+- Add global Regexp timeout (#31928 by @ClearlyClaire)\n - Add the role ID to the badge component (#29707 by @renchap)\n - Add diagnostic message for failure during CLI search deploy (#29462 by @mjankowski)\n - Add pagination `Link` headers on API accounts/statuses when pinned true (#29442 by @mjankowski)\n@@ -156,34 +167,43 @@ The following changelog entries focus on changes visible to users, administrator\n - **Change icons throughout the web interface** (#27385, #27539, #27555, #27579, #27700, #27817, #28519, #28709, #28064, #28775, #28780, #27924, #29294, #29395, #29537, #29569, #29610, #29612, #29649, #29844, #27780, #30974, #30963, #30962, #30961, #31362, #31363, #31359, #31371, #31360, #31512, #31511, and #31525 by @ClearlyClaire, @Gargron, @arbolitoloco1, @mjankowski, @nclm, @renchap, @ronilaukkarinen, and @zunda)\\\n   This changes all the interface icons from FontAwesome to Material Symbols for a more modern look, consistent with the official Mastodon Android app.\\\n   In addition, better care is given to pixel alignment, and icon variants are used to better highlight active/inactive state.\n-- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, and #29659 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n+- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, #29659, and #31889 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n   The compose form has been completely redesigned for a more modern and consistent look, as well as spelling out the chosen privacy setting and language name at all times.\\\n   As part of this, the \u201cUnlisted\u201d privacy setting has been renamed to \u201cQuiet public\u201d.\n-- **Change design of confirmation modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, and #31399 by @ClearlyClaire, @Gargron, and @tribela)\\\n+- **Change design of modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, #31399, #31555, #31752, #31801, #31883, #31844, #31864, and #31943 by @ClearlyClaire, @Gargron, @tribela and @vmstan)\\\n   The mute, block, and domain block confirmation modals have been completely redesigned to be clearer and include more detailed information on the action to be performed.\\\n   They also have a more modern and consistent design, along with other confirmation modals in the application.\n - **Change colors throughout the web UI** (#29522, #29584, #29653, #29779, #29803, #29809, #29808, #29828, #31034, #31168, #31266, #31348, #31349, #31361, and #31510 by @ClearlyClaire, @Gargron, @renchap, and @vmstan)\n-- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878 and #29272 by @Gargron)\n+- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878, #29272, and #31912 by @Gargron)\n - **Change email templates** (#28416, #28755, #28814, #29064, #28883, #29470, #29607, #29761, #29760, and #29879 by @ClearlyClaire, @Gargron, @hteumeuleu, and @mjankowski)\\\n   All emails to end-users have been completely redesigned with a fresh new look, providing more information while making them easier to read and keeping maximum compatibility across mail clients.\n - **Change follow recommendations algorithm** (#28314, #28433, #29017, #29108, #29306, #29550, #29619, and #31474 by @ClearlyClaire, @Gargron, @kernal053, @mjankowski, and @wheatear-dev)\\\n   This replaces the \u201cpast interactions\u201d recommendation algorithm with a \u201cfriends of friends\u201d algorithm that suggests accounts followed by people you follow, and a \u201csimilar profiles\u201d algorithm that suggests accounts with a profile similar to your most recent follows.\\\n   In addition, the implementation has been significantly reworked, and all follow recommendations are now dismissable.\\\n   This change deprecates the `source` attribute in `Suggestion` entities in the REST API, and replaces it with the new [`sources` attribute](https://docs.joinmastodon.org/entities/Suggestion/#sources).\n - Change account search algorithm (#30803 by @Gargron)\n-- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, and #30795 by @TheEssem, @ThisIsMissEm, @jippi, @timetinytim, and @vmstan)\\\n+- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, #30795, #31612, and #31615 by @TheEssem, @ThisIsMissEm, @jippi, @renchap, @timetinytim, and @vmstan)\\\n   In order to reduce the amount of runtime dependencies, the streaming server has been moved into a separate package and Docker image.\\\n   The `mastodon` image does not contain the streaming server anymore, as it has been moved to its own `mastodon-streaming` image.\\\n   Administrators may need to update their setup accordingly.\n-- Change how content warnings and filters are displayed in web UI (#31365 by @Gargron)\n+- Change how content warnings and filters are displayed in web UI (#31365, and #31761 by @Gargron)\n+- Change preview card processing to ignore `undefined` as canonical url (#31882 by @oneiros)\n+- Change embedded posts to use web UI (#31766 by @Gargron)\n+- Change inner borders in media galleries in web UI (#31852 by @Gargron)\n+- Change design of hide media button in web UI (#31807 by @Gargron)\n+- Change labels on thread indicators in web UI (#31806 by @Gargron)\n+- Change report action buttons to be disabled when action has already been taken (#31773, #31822, and #31899 by @ClearlyClaire and @ThisIsMissEm)\n+- Change width of columns in advanced web UI (#31762 by @Gargron)\n+- Change design of unread conversations in web UI (#31763 by @Gargron)\n - Change Web UI to allow viewing and severing relationships with suspended accounts (#27667 by @ClearlyClaire)\\\n   This also adds a `with_suspended` parameter to `GET /api/v1/accounts/relationships` in the REST API.\n+- Change preview card image size limit from 2MB to 8MB when using libvips (#31904 by @ClearlyClaire)\n - Change avatars border radius (#31390 by @renchap)\n - Change counters to be displayed on profile timelines in web UI (#30525 by @Gargron)\n - Change disabled buttons color in light mode to make the difference more visible (#30998 by @renchap)\n - Change design of people tab on explore in web UI (#30059 by @Gargron)\n - Change sidebar text in web UI (#30696 by @Gargron)\n-- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452 and #28465 by @Gargron and @renchap)\n+- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452, #28465, and #31934 by @ClearlyClaire, @Gargron and @renchap)\n - Change media to be hidden/blurred by default in report modal (#28522 by @ClearlyClaire)\n - Change order of the \"muting\" and \"blocking\" list options in \u201cData Exports\u201d (#26088 by @fixermark)\n - Change admin and moderation notes character limit from 500 to 2000 characters (#30288 by @ThisIsMissEm)\n@@ -197,6 +217,7 @@ The following changelog entries focus on changes visible to users, administrator\n - Change dropdown menu icon to not be replaced by close icon when open in web UI (#29532 by @Gargron)\n - Change back button to always appear in advanced web UI (#29551 and #29669 by @Gargron)\n - Change border of active compose field search inputs (#29832 and #29839 by @vmstan)\n+- Change instances of Nokogiri HTML4 parsing to HTML5 (#31812, #31815, #31813, and #31814 by @flavorjones)\n - Change link detection to allow `@` at the end of an URL (#31124 by @adamniedzielski)\n - Change User-Agent to use Mastodon as the product, and http.rb as platform details (#31192 by @ClearlyClaire)\n - Change layout and wording of the Content Retention server settings page (#27733 by @vmstan)\n@@ -249,8 +270,17 @@ The following changelog entries focus on changes visible to users, administrator\n - Fix various issues when in link preview card generation (#28748, #30017, #30362, #30173, #30853, #30929, #30933, #30957, #30987, and #31144 by @adamniedzielski, @oneiros, @phocks, @timothyjrogers, and @tribela)\n - Fix handling of missing links in Webfinger responses (#31030 by @adamniedzielski)\n - Fix HTTP 500 error in `/api/v1/polls/:id/votes` when required `choices` parameter is missing (#25598 by @danielmbrasil)\n+- Fix security context sometimes not being added in LD-Signed activities (#31871 by @ClearlyClaire)\n - Fix cross-origin loading of `inert.css` polyfill (#30687 by @louis77)\n - Fix cutoff of instance name in sign-up form (#30598 by @oneiros)\n+- Fix invalid date searches returning 503 errors (#31526 by @notchairmk)\n+- Fix invalid `visibility` values in `POST /api/v1/statuses` returning 500 errors (#31571 by @c960657)\n+- Fix some components re-rendering spuriously in web UI (#31879 and #31881 by @ClearlyClaire and @Gargron)\n+- Fix sort order of moderation notes on Reports and Accounts (#31528 by @ThisIsMissEm)\n+- Fix email language when recipient has no selected locale (#31747 by @ClearlyClaire)\n+- Fix frequently-used languages not correctly updating in the web UI (#31386 by @c960657)\n+- Fix `POST /api/v1/statuses` silently ignoring invalid `media_ids` parameter (#31681 by @c960657)\n+- Fix handling of the `BIND` environment variable in the streaming server (#31624 by @ThisIsMissEm)\n - Fix empty `aria-hidden` attribute value in logo resources area (#30570 by @mjankowski)\n - Fix \u201cRedirect URI\u201d field not being marked as required in \u201cNew application\u201d form (#30311 by @ThisIsMissEm)\n - Fix right-to-left text in preview cards (#30930 by @ClearlyClaire)\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -17,7 +17,7 @@ def patch\n     end\n \n     def default_prerelease\n-      'beta.1'\n+      'beta.2'\n     end\n \n     def prerelease\n---\n\n\n---\n\nChoice C:\nlib/mastodon/cli/feeds.rb\n@@ -5,6 +5,7 @@\n module Mastodon::CLI\n   class Feeds < Base\n     include Redisable\n+    include DatabaseHelper\n \n     option :all, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n@@ -44,6 +45,38 @@ def clear\n       say('OK', :green)\n     end\n \n+    desc 'vacuum', 'Remove home feeds of inactive users from Redis'\n+    long_desc <<-LONG_DESC\n+      Running this task should not be needed in most cases, as Mastodon will\n+      automatically clean up feeds from inactive accounts every day.\n+\n+      However, this task is more aggressive in order to clean up feeds that\n+      may have been missed because of bugs or database mishaps.\n+    LONG_DESC\n+    def vacuum\n+      with_read_replica do\n+        say('Deleting orphaned home feeds\u2026')\n+        redis.scan_each(match: 'feed:home:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = User.confirmed.signed_in_recently.where(account_id: ids).pluck(:account_id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+\n+        say('Deleting orphaned list feeds\u2026')\n+        redis.scan_each(match: 'feed:list:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = List.where(account_id: User.confirmed.signed_in_recently.select(:account_id)).where(id: ids).pluck(:id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+      end\n+    end\n+\n     private\n \n     def active_user_accounts\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.jsx\n@@ -151,8 +151,13 @@ export const InlineFollowSuggestions = ({ hidden }) => {\n       return;\n     }\n \n-    setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n-    setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n+      setCanScrollLeft((bodyRef.current.clientWidth - bodyRef.current.scrollLeft) < bodyRef.current.scrollWidth);\n+      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n+    } else {\n+      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n+      setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    }\n   }, [setCanScrollRight, setCanScrollLeft, bodyRef]);\n \n   const handleDismiss = useCallback(() => {\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix notification polling showing a loading bar in web UI\n\nIssue Description:\nFix #32862\n\n---\n\nChoice A:\napp/javascript/mastodon/features/status/components/card.jsx\n@@ -141,7 +141,7 @@ export default class Card extends PureComponent {\n     const showAuthor  = !!card.getIn(['authors', 0, 'accountId']);\n \n     const description = (\n-      <div className='status-card__content'>\n+      <div className='status-card__content' dir='auto'>\n         <span className='status-card__host'>\n           <span lang={language}>{provider}</span>\n           {card.get('published_at') && <> \u00b7 <RelativeTimestamp timestamp={card.get('published_at')} /></>}\n---\n\n\n---\n\nChoice B:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice C:\napp/services/fetch_link_card_service.rb\n@@ -106,12 +106,11 @@ def skip_link?(anchor)\n   end\n \n   def attempt_oembed\n-    service         = FetchOEmbedService.new\n-    url_domain      = Addressable::URI.parse(@url).normalized_host\n-    cached_endpoint = Rails.cache.read(\"oembed_endpoint:#{url_domain}\")\n+    service = FetchOEmbedService.new\n \n-    embed   = service.call(@url, cached_endpoint: cached_endpoint) unless cached_endpoint.nil?\n+    embed   = service.call(@url, use_cached_endpoint: true)\n     embed ||= service.call(@url, html: html) unless html.nil?\n+    embed ||= service.call(@url, use_cached_endpoint: true) if @url != @original_url.to_s\n \n     return false if embed.nil?\n \n---\napp/services/fetch_oembed_service.rb\n@@ -10,7 +10,7 @@ def call(url, options = {})\n     @url     = url\n     @options = options\n \n-    if @options[:cached_endpoint]\n+    if @options[:use_cached_endpoint]\n       parse_cached_endpoint!\n     else\n       discover_endpoint!\n@@ -57,9 +57,9 @@ def discover_endpoint!\n   end\n \n   def parse_cached_endpoint!\n-    cached = @options[:cached_endpoint]\n+    cached = Rails.cache.read(cache_key)\n \n-    return if cached[:endpoint].nil? || cached[:format].nil?\n+    return if cached.nil? || cached[:endpoint].nil? || cached[:format].nil?\n \n     @endpoint_url = Addressable::Template.new(cached[:endpoint]).expand(url: @url).to_s\n     @format       = cached[:format]\n@@ -68,14 +68,16 @@ def parse_cached_endpoint!\n   def cache_endpoint!\n     return unless URL_REGEX.match?(@endpoint_url)\n \n-    url_domain = Addressable::URI.parse(@url).normalized_host\n-\n     endpoint_hash = {\n       endpoint: @endpoint_url.gsub(URL_REGEX, '={url}'),\n       format: @format,\n     }\n \n-    Rails.cache.write(\"oembed_endpoint:#{url_domain}\", endpoint_hash, expires_in: ENDPOINT_CACHE_EXPIRES_IN)\n+    Rails.cache.write(cache_key, endpoint_hash, expires_in: ENDPOINT_CACHE_EXPIRES_IN)\n+  end\n+\n+  def cache_key\n+    \"oembed_endpoint:#{Addressable::URI.parse(@url).normalized_host}\"\n   end\n \n   def fetch!\n---\nspec/services/fetch_link_card_service_spec.rb\n@@ -13,6 +13,7 @@\n     stub_request(:get, 'http://example.com/not-found').to_return(status: 404, headers: { 'Content-Type' => 'text/html' }, body: html)\n     stub_request(:get, 'http://example.com/text').to_return(status: 404, headers: { 'Content-Type' => 'text/plain' }, body: 'Hello')\n     stub_request(:get, 'http://example.com/redirect').to_return(status: 302, headers: { 'Location' => 'http://example.com/html' })\n+    stub_request(:get, 'http://example.net/redirect-to-other-domain').to_return(status: 302, headers: { 'Location' => 'http://example.com/html' })\n     stub_request(:get, 'http://example.com/redirect-to-404').to_return(status: 302, headers: { 'Location' => 'http://example.com/not-found' })\n     stub_request(:get, 'http://example.com/oembed?url=http://example.com/html').to_return(headers: { 'Content-Type' => 'application/json' }, body: '{ \"version\": \"1.0\", \"type\": \"link\", \"title\": \"oEmbed title\" }')\n     stub_request(:get, 'http://example.com/oembed?format=json&url=http://example.com/html').to_return(headers: { 'Content-Type' => 'application/json' }, body: '{ \"version\": \"1.0\", \"type\": \"link\", \"title\": \"oEmbed title\" }')\n@@ -264,6 +265,39 @@\n         end\n       end\n \n+      context 'when oEmbed endpoint cache populated with redirect target' do\n+        let(:status) { Fabricate(:status, text: 'http://example.net/redirect-to-other-domain') }\n+        let(:oembed_cache) { { endpoint: 'http://example.com/oembed?format=json&url={url}', format: :json } }\n+\n+        it 'uses the cached oEmbed response' do\n+          expect(a_request(:get, 'http://example.net/redirect-to-other-domain')).to have_been_made\n+          expect(a_request(:get, 'http://example.com/oembed?url=http://example.com/html')).to have_been_made\n+        end\n+\n+        it 'creates preview card' do\n+          expect(status.preview_card).to_not be_nil\n+          expect(status.preview_card.url).to eq 'http://example.com/html'\n+          expect(status.preview_card.title).to eq 'oEmbed title'\n+        end\n+      end\n+\n+      context 'when oEmbed endpoint cache populated with redirect target but page contains no oEmbed tags' do\n+        let(:status) { Fabricate(:status, text: 'http://example.net/redirect-to-other-domain') }\n+        let(:html) { 'Please fill out CAPTCHA' }\n+        let(:oembed_cache) { { endpoint: 'http://example.com/oembed?format=json&url={url}', format: :json } }\n+\n+        it 'uses the cached oEmbed response' do\n+          expect(a_request(:get, 'http://example.net/redirect-to-other-domain')).to have_been_made\n+          expect(a_request(:get, 'http://example.com/oembed?format=json&url=http://example.com/html')).to have_been_made\n+        end\n+\n+        it 'creates preview card' do\n+          expect(status.preview_card).to_not be_nil\n+          expect(status.preview_card.url).to eq 'http://example.com/html'\n+          expect(status.preview_card.title).to eq 'oEmbed title'\n+        end\n+      end\n+\n       # If the original HTML URL for whatever reason (e.g. DOS protection) redirects to\n       # an error page, we can still use the cached oEmbed but should not use the\n       # redirect URL on the card.\n---\nspec/services/fetch_oembed_service_spec.rb\n@@ -160,10 +160,12 @@\n           headers: { 'Content-Type': 'text/html' },\n           body: request_fixture('oembed_json_empty.html')\n         )\n+\n+        Rails.cache.write('oembed_endpoint:www.youtube.com', { endpoint: 'http://www.youtube.com/oembed?format=json&url={url}', format: :json })\n       end\n \n       it 'returns new provider without fetching original URL first' do\n-        subject.call('https://www.youtube.com/watch?v=dqwpQarrDwk', cached_endpoint: { endpoint: 'http://www.youtube.com/oembed?format=json&url={url}', format: :json })\n+        subject.call('https://www.youtube.com/watch?v=dqwpQarrDwk', use_cached_endpoint: true)\n         expect(a_request(:get, 'https://www.youtube.com/watch?v=dqwpQarrDwk')).to_not have_been_made\n         expect(subject.endpoint_url).to eq 'http://www.youtube.com/oembed?format=json&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DdqwpQarrDwk'\n         expect(subject.format).to eq :json\n---\napp/lib/link_details_extractor.rb\n@@ -225,7 +225,7 @@ def host_to_url(str)\n   end\n \n   def valid_url_or_nil(str, same_origin_only: false)\n-    return if str.blank? || str == 'null'\n+    return if str.blank? || str == 'null' || str == 'undefined'\n \n     url = @original_url + Addressable::URI.parse(str)\n \n---\nspec/lib/link_details_extractor_spec.rb\n@@ -33,6 +33,14 @@\n         expect(subject.canonical_url).to eq original_url\n       end\n     end\n+\n+    context 'when canonical URL is set to \"undefined\"' do\n+      let(:url) { 'undefined' }\n+\n+      it 'ignores the canonical URLs' do\n+        expect(subject.canonical_url).to eq original_url\n+      end\n+    end\n   end\n \n   context 'when only basic metadata is present' do\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/features/ui/components/block_modal.jsx\n@@ -99,7 +99,7 @@ export const BlockModal = ({ accountId, acct }) => {\n             <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n           </button>\n \n-          <Button onClick={handleClick}>\n+          <Button onClick={handleClick} autoFocus>\n             <FormattedMessage id='confirmations.block.confirm' defaultMessage='Block' />\n           </Button>\n         </div>\n---\napp/javascript/mastodon/features/ui/components/confirmation_modals/confirmation_modal.tsx\n@@ -71,7 +71,10 @@ export const ConfirmationModal: React.FC<\n             />\n           </button>\n \n-          <Button onClick={handleClick}>{confirm}</Button>\n+          {/* eslint-disable-next-line jsx-a11y/no-autofocus -- we are in a modal and thus autofocusing is justified */}\n+          <Button onClick={handleClick} autoFocus>\n+            {confirm}\n+          </Button>\n         </div>\n       </div>\n     </div>\n---\napp/javascript/mastodon/features/ui/components/domain_block_modal.jsx\n@@ -88,7 +88,7 @@ export const DomainBlockModal = ({ domain, accountId, acct }) => {\n             <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n           </button>\n \n-          <Button onClick={handleClick}>\n+          <Button onClick={handleClick} autoFocus>\n             <FormattedMessage id='domain_block_modal.block' defaultMessage='Block server' />\n           </Button>\n         </div>\n---\napp/javascript/mastodon/features/ui/components/mute_modal.jsx\n@@ -137,7 +137,7 @@ export const MuteModal = ({ accountId, acct }) => {\n             <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n           </button>\n \n-          <Button onClick={handleClick}>\n+          <Button onClick={handleClick} autoFocus>\n             <FormattedMessage id='confirmations.mute.confirm' defaultMessage='Mute' />\n           </Button>\n         </div>\n---\napp/javascript/mastodon/features/ui/components/boost_modal.tsx\n@@ -128,6 +128,8 @@ export const BoostModal: React.FC<{\n                 ? messages.cancel_reblog\n                 : messages.reblog,\n             )}\n+            /* eslint-disable-next-line jsx-a11y/no-autofocus -- We are in the modal */\n+            autoFocus\n           />\n         </div>\n       </div>\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Update deprecated `enum` style in older migrations\n\nIssue Description:\nThese run fine despite being deprecated now, but will error in Rails 8.\r\n\r\nExtracted from https://github.com/mastodon/mastodon/pull/32357\n\n---\n\nChoice A:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice B:\nGemfile\n@@ -6,7 +6,7 @@ ruby '>= 3.2.0'\n gem 'propshaft'\n gem 'puma', '~> 6.3'\n gem 'rack', '~> 2.2.7'\n-gem 'rails', '~> 7.2.0'\n+gem 'rails', '~> 8.0'\n gem 'thor', '~> 1.2'\n \n gem 'dotenv'\n@@ -73,7 +73,7 @@ gem 'public_suffix', '~> 6.0'\n gem 'pundit', '~> 2.3'\n gem 'rack-attack', '~> 6.6'\n gem 'rack-cors', '~> 2.0', require: 'rack/cors'\n-gem 'rails-i18n', '~> 7.0'\n+gem 'rails-i18n', '~> 8.0'\n gem 'redcarpet', '~> 3.6'\n gem 'redis', '~> 4.5', require: ['redis', 'redis/connection/hiredis']\n gem 'redis-namespace', '~> 1.10'\n---\nGemfile.lock\n@@ -10,46 +10,45 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actioncable (8.0.1)\n+      actionpack (= 8.0.1)\n+      activesupport (= 8.0.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activestorage (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionmailbox (8.0.1)\n+      actionpack (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activestorage (= 8.0.1)\n+      activesupport (= 8.0.1)\n       mail (>= 2.8.0)\n-    actionmailer (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      actionview (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionmailer (8.0.1)\n+      actionpack (= 8.0.1)\n+      actionview (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activesupport (= 8.0.1)\n       mail (>= 2.8.0)\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.2.2.1)\n-      actionview (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionpack (8.0.1)\n+      actionview (= 8.0.1)\n+      activesupport (= 8.0.1)\n       nokogiri (>= 1.8.5)\n-      racc\n-      rack (>= 2.2.4, < 3.2)\n+      rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n       useragent (~> 0.16)\n-    actiontext (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activestorage (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actiontext (8.0.1)\n+      actionpack (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activestorage (= 8.0.1)\n+      activesupport (= 8.0.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionview (8.0.1)\n+      activesupport (= 8.0.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -59,22 +58,22 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    activejob (8.0.1)\n+      activesupport (= 8.0.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.2.2.1)\n-      activesupport (= 7.2.2.1)\n-    activerecord (7.2.2.1)\n-      activemodel (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    activemodel (8.0.1)\n+      activesupport (= 8.0.1)\n+    activerecord (8.0.1)\n+      activemodel (= 8.0.1)\n+      activesupport (= 8.0.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    activestorage (8.0.1)\n+      actionpack (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activesupport (= 8.0.1)\n       marcel (~> 1.0)\n-    activesupport (7.2.2.1)\n+    activesupport (8.0.1)\n       base64\n       benchmark (>= 0.3)\n       bigdecimal\n@@ -86,6 +85,7 @@ GEM\n       minitest (>= 5.1)\n       securerandom (>= 0.3)\n       tzinfo (~> 2.0, >= 2.0.5)\n+      uri (>= 0.13.1)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n     aes_key_wrap (1.1.0)\n@@ -613,20 +613,20 @@ GEM\n     rackup (1.0.1)\n       rack (< 3)\n       webrick\n-    rails (7.2.2.1)\n-      actioncable (= 7.2.2.1)\n-      actionmailbox (= 7.2.2.1)\n-      actionmailer (= 7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      actiontext (= 7.2.2.1)\n-      actionview (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activemodel (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activestorage (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    rails (8.0.1)\n+      actioncable (= 8.0.1)\n+      actionmailbox (= 8.0.1)\n+      actionmailer (= 8.0.1)\n+      actionpack (= 8.0.1)\n+      actiontext (= 8.0.1)\n+      actionview (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activemodel (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activestorage (= 8.0.1)\n+      activesupport (= 8.0.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.2.2.1)\n+      railties (= 8.0.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -638,12 +638,12 @@ GEM\n     rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n       nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n-    rails-i18n (7.0.10)\n+    rails-i18n (8.0.1)\n       i18n (>= 0.7, < 2)\n-      railties (>= 6.0.0, < 8)\n-    railties (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+      railties (>= 8.0.0, < 9)\n+    railties (8.0.1)\n+      actionpack (= 8.0.1)\n+      activesupport (= 8.0.1)\n       irb (~> 1.13)\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -986,9 +986,9 @@ DEPENDENCIES\n   rack-attack (~> 6.6)\n   rack-cors (~> 2.0)\n   rack-test (~> 2.1)\n-  rails (~> 7.2.0)\n+  rails (~> 8.0)\n   rails-controller-testing (~> 1.0)\n-  rails-i18n (~> 7.0)\n+  rails-i18n (~> 8.0)\n   rdf-normalize (~> 0.5)\n   redcarpet (~> 3.6)\n   redis (~> 4.5)\n---\nconfig/application.rb\n@@ -59,7 +59,7 @@\n module Mastodon\n   class Application < Rails::Application\n     # Initialize configuration defaults for originally generated Rails version.\n-    config.load_defaults 7.2\n+    config.load_defaults 8.0\n \n     # Please, add to the `ignore` list any other `lib` subdirectories that do\n     # not contain `.rb` files, or that should not be reloaded or eager loaded.\n---\nconfig/initializers/filter_parameter_logging.rb\n@@ -6,5 +6,5 @@\n # Use this to limit dissemination of sensitive information.\n # See the ActiveSupport::ParameterFilter documentation for supported notations and behaviors.\n Rails.application.config.filter_parameters += [\n-  :passw, :email, :secret, :token, :_key, :crypt, :salt, :certificate, :otp, :ssn\n+  :passw, :email, :secret, :token, :_key, :crypt, :salt, :certificate, :otp, :ssn, :cvv, :cvc\n ]\n---\nlib/active_record/batches.rb\n@@ -13,7 +13,9 @@ def pluck_each(*column_names)\n \n       column_names.unshift(primary_key)\n \n-      relation = relation.reorder(build_batch_orders(order).to_h).limit(batch_limit)\n+      cursor = Array(primary_key)\n+\n+      relation = relation.reorder(build_batch_orders(cursor, order).to_h).limit(batch_limit)\n       relation.skip_query_cache!\n \n       batch_relation = relation\n---\nspec/rails_helper.rb\n@@ -119,6 +119,11 @@ def sign_in(resource, _deprecated = nil, scope: nil)\n   config.include CommandLineHelpers, type: :cli\n   config.include SystemHelpers, type: :system\n \n+  # TODO: Remove when Devise fixes https://github.com/heartcombo/devise/issues/5705\n+  config.before do\n+    Rails.application.reload_routes_unless_loaded\n+  end\n+\n   config.around(:each, use_transactional_tests: false) do |example|\n     self.use_transactional_tests = false\n     example.run\n---\n\n\n---\n\nChoice C:\nstreaming/redis.js\n@@ -50,9 +50,9 @@ function getSentinelConfiguration(env, commonOptions) {\n   return {\n     db: redisDatabase,\n     name: env.REDIS_SENTINEL_MASTER,\n-    username: env.REDIS_USERNAME,\n+    username: env.REDIS_USER,\n     password: env.REDIS_PASSWORD,\n-    sentinelUsername: env.REDIS_SENTINEL_USERNAME ?? env.REDIS_USERNAME,\n+    sentinelUsername: env.REDIS_SENTINEL_USERNAME ?? env.REDIS_USER,\n     sentinelPassword: env.REDIS_SENTINEL_PASSWORD ?? env.REDIS_PASSWORD,\n     sentinels,\n     ...commonOptions,\n@@ -104,7 +104,7 @@ export function configFromEnv(env) {\n     host: env.REDIS_HOST ?? '127.0.0.1',\n     port: redisPort,\n     db: redisDatabase,\n-    username: env.REDIS_USERNAME,\n+    username: env.REDIS_USER,\n     password: env.REDIS_PASSWORD,\n     ...commonOptions,\n   };\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/components/status.jsx\n@@ -397,6 +397,7 @@ class Status extends ImmutablePureComponent {\n     const connectUp = previousId && previousId === status.get('in_reply_to_id');\n     const connectToRoot = rootId && rootId === status.get('in_reply_to_id');\n     const connectReply = nextInReplyToId && nextInReplyToId === status.get('id');\n+    const matchedFilters = status.get('matched_filters');\n \n     if (featured) {\n       prepend = (\n@@ -432,7 +433,6 @@ class Status extends ImmutablePureComponent {\n       );\n     }\n \n-    const matchedFilters = status.get('matched_filters');\n     const expanded = (!matchedFilters || this.state.showDespiteFilter) && (!status.get('hidden') || status.get('spoiler_text').length === 0);\n \n     if (hidden) {\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix Content Warning and filter states not applying to boosted posts properly\n\nIssue Description:\nFixes #32870\r\n\r\nFixes a significant regression from #32778\n\n---\n\nChoice A:\napp/mailers/application_mailer.rb\n@@ -12,7 +12,7 @@ class ApplicationMailer < ActionMailer::Base\n   protected\n \n   def locale_for_account(account, &block)\n-    I18n.with_locale(account.user_locale || I18n.locale || I18n.default_locale, &block)\n+    I18n.with_locale(account.user_locale || I18n.default_locale, &block)\n   end\n \n   def set_autoreply_headers!\n---\napp/mailers/user_mailer.rb\n@@ -33,7 +33,7 @@ def reset_password_instructions(user, token, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -43,7 +43,7 @@ def password_change(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -53,7 +53,7 @@ def email_changed(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -63,7 +63,7 @@ def two_factor_enabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -73,7 +73,7 @@ def two_factor_disabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -83,7 +83,7 @@ def two_factor_recovery_codes_changed(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -93,7 +93,7 @@ def webauthn_enabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -103,7 +103,7 @@ def webauthn_disabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -114,7 +114,7 @@ def webauthn_credential_added(user, webauthn_credential)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: I18n.t('devise.mailer.webauthn_credential.added.subject')\n     end\n   end\n@@ -125,7 +125,7 @@ def webauthn_credential_deleted(user, webauthn_credential)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: I18n.t('devise.mailer.webauthn_credential.deleted.subject')\n     end\n   end\n@@ -219,7 +219,7 @@ def set_instance\n     @instance = Rails.configuration.x.local_domain\n   end\n \n-  def locale\n-    @resource.locale.presence || I18n.locale || I18n.default_locale\n+  def locale(use_current_locale: false)\n+    @resource.locale.presence || (use_current_locale && I18n.locale) || I18n.default_locale\n   end\n end\n---\n\n\n---\n\nChoice B:\napp/javascript/styles/mastodon/rtl.scss\n@@ -35,6 +35,10 @@ body.rtl {\n     direction: rtl;\n   }\n \n+  .column-back-button__icon {\n+    transform: scale(-1, 1);\n+  }\n+\n   .simple_form select {\n     background: $ui-base-color\n       url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 14.933 18.467' height='19.698' width='15.929'><path d='M3.467 14.967l-3.393-3.5H14.86l-3.392 3.5c-1.866 1.925-3.666 3.5-4 3.5-.335 0-2.135-1.575-4-3.5zm.266-11.234L7.467 0 11.2 3.733l3.733 3.734H0l3.733-3.734z' fill='#{hex-color(lighten($ui-base-color, 12%))}'/></svg>\")\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -7580,7 +7580,7 @@ a.status-card {\n   }\n }\n \n-.radio-button.checked::before {\n+.radio-button__input.checked::before {\n   position: absolute;\n   left: 2px;\n   top: 2px;\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/components/status.jsx\n@@ -397,6 +397,7 @@ class Status extends ImmutablePureComponent {\n     const connectUp = previousId && previousId === status.get('in_reply_to_id');\n     const connectToRoot = rootId && rootId === status.get('in_reply_to_id');\n     const connectReply = nextInReplyToId && nextInReplyToId === status.get('id');\n+    const matchedFilters = status.get('matched_filters');\n \n     if (featured) {\n       prepend = (\n@@ -432,7 +433,6 @@ class Status extends ImmutablePureComponent {\n       );\n     }\n \n-    const matchedFilters = status.get('matched_filters');\n     const expanded = (!matchedFilters || this.state.showDespiteFilter) && (!status.get('hidden') || status.get('spoiler_text').length === 0);\n \n     if (hidden) {\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix `min_id` and `max_id` causing error in search API\n\nIssue Description:\nFix #32731\n\n---\n\nChoice A:\napp/javascript/mastodon/features/notifications/requests.jsx\n@@ -217,7 +217,9 @@ export const NotificationRequests = ({ multiColumn }) => {\n         multiColumn={multiColumn}\n         showBackButton\n         appendContent={\n-          <SelectRow selectionMode={selectionMode} setSelectionMode={setSelectionMode} selectAllChecked={selectAllChecked} toggleSelectAll={toggleSelectAll} selectedItems={checkedRequestIds} />}\n+          notificationRequests.size > 0 && (\n+            <SelectRow selectionMode={selectionMode} setSelectionMode={setSelectionMode} selectAllChecked={selectAllChecked} toggleSelectAll={toggleSelectAll} selectedItems={checkedRequestIds} />\n+          )}\n       >\n         <ColumnSettings />\n       </ColumnHeader>\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -3611,6 +3611,7 @@ $ui-header-logo-wordmark-width: 99px;\n   overflow-y: auto;\n   width: 100%;\n   height: 100%;\n+  z-index: 0;\n }\n \n .drawer__inner__mastodon {\n---\n\n\n---\n\nChoice D:\nspec/lib/search_query_transformer_spec.rb\n@@ -16,6 +16,7 @@\n       ['\"2022-01-01\"', '2022-01-01'],\n       ['12345678', '12345678'],\n       ['\"12345678\"', '12345678'],\n+      ['\"2024-10-31T23:47:20Z\"', '2024-10-31T23:47:20Z'],\n     ].each do |value, parsed|\n       context \"with #{operator}:#{value}\" do\n         let(:query) { \"#{operator}:#{value}\" }\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix post rising to top of trends because of future date\n\nIssue Description:\nFix #32815\n\n---\n\nChoice A:\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\nChoice B:\napp/models/trends/statuses.rb\n@@ -106,7 +106,7 @@ def klass\n   private\n \n   def eligible?(status)\n-    status.public_visibility? && status.account.discoverable? && !status.account.silenced? && !status.account.sensitized? && status.spoiler_text.blank? && !status.sensitive? && !status.reply? && valid_locale?(status.language)\n+    status.created_at.past? && status.public_visibility? && status.account.discoverable? && !status.account.silenced? && !status.account.sensitized? && status.spoiler_text.blank? && !status.sensitive? && !status.reply? && valid_locale?(status.language)\n   end\n \n   def calculate_scores(statuses, at_time)\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/api_types/accounts.ts\n@@ -13,7 +13,7 @@ export interface ApiAccountRoleJSON {\n }\n \n // See app/serializers/rest/account_serializer.rb\n-export interface ApiAccountJSON {\n+export interface BaseApiAccountJSON {\n   acct: string;\n   avatar: string;\n   avatar_static: string;\n@@ -45,3 +45,12 @@ export interface ApiAccountJSON {\n   memorial?: boolean;\n   hide_collections: boolean;\n }\n+\n+// See app/serializers/rest/muted_account_serializer.rb\n+export interface ApiMutedAccountJSON extends BaseApiAccountJSON {\n+  mute_expires_at?: string | null;\n+}\n+\n+// For now, we have the same type representing both `Account` and `MutedAccount`\n+// objects, but we should refactor this in the future.\n+export type ApiAccountJSON = ApiMutedAccountJSON;\n---\napp/javascript/mastodon/models/account.ts\n@@ -95,6 +95,9 @@ export const accountDefaultValues: AccountShape = {\n   limited: false,\n   moved: null,\n   hide_collections: false,\n+  // This comes from `ApiMutedAccountJSON`, but we should eventually\n+  // store that in a different object.\n+  mute_expires_at: null,\n };\n \n const AccountFactory = ImmutableRecord<AccountShape>(accountDefaultValues);\n---\n\n\n---\n\nChoice D:\napp/models/account_pin.rb\n@@ -5,10 +5,10 @@\n # Table name: account_pins\n #\n #  id                :bigint(8)        not null, primary key\n-#  account_id        :bigint(8)\n-#  target_account_id :bigint(8)\n #  created_at        :datetime         not null\n #  updated_at        :datetime         not null\n+#  account_id        :bigint(8)        not null\n+#  target_account_id :bigint(8)        not null\n #\n \n class AccountPin < ApplicationRecord\n---\ndb/migrate/20241210140838_add_not_null_to_account_pin_account_columns.rb\n@@ -0,0 +1,23 @@\n+# frozen_string_literal: true\n+\n+class AddNotNullToAccountPinAccountColumns < ActiveRecord::Migration[7.2]\n+  def up\n+    connection.execute(<<~SQL.squish)\n+      DELETE FROM account_pins\n+      WHERE account_id IS NULL\n+      OR target_account_id IS NULL\n+    SQL\n+\n+    safety_assured do\n+      change_column_null :account_pins, :account_id, false\n+      change_column_null :account_pins, :target_account_id, false\n+    end\n+  end\n+\n+  def down\n+    safety_assured do\n+      change_column_null :account_pins, :account_id, true\n+      change_column_null :account_pins, :target_account_id, true\n+    end\n+  end\n+end\n---\ndb/schema.rb\n@@ -10,7 +10,7 @@\n #\n # It's strongly recommended that you check this file into your version control system.\n \n-ActiveRecord::Schema[7.2].define(version: 2024_12_05_163118) do\n+ActiveRecord::Schema[7.2].define(version: 2024_12_10_140838) do\n   # These are extensions that must be enabled in order to support this database\n   enable_extension \"plpgsql\"\n \n@@ -82,8 +82,8 @@\n   end\n \n   create_table \"account_pins\", force: :cascade do |t|\n-    t.bigint \"account_id\"\n-    t.bigint \"target_account_id\"\n+    t.bigint \"account_id\", null: false\n+    t.bigint \"target_account_id\", null: false\n     t.datetime \"created_at\", precision: nil, null: false\n     t.datetime \"updated_at\", precision: nil, null: false\n     t.index [\"account_id\", \"target_account_id\"], name: \"index_account_pins_on_account_id_and_target_account_id\", unique: true\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix IDs not being serialized as strings in annual reports API\n\nIssue Description:\nFollow-up to #28693. IDs not being serialized as strings leads to integer overflow in JavaScript.\n\n---\n\nChoice A:\napp/controllers/api/v1/annual_reports_controller.rb\n@@ -17,6 +17,17 @@ def index\n            relationships: @relationships\n   end\n \n+  def show\n+    with_read_replica do\n+      @presenter = AnnualReportsPresenter.new([@annual_report])\n+      @relationships = StatusRelationshipsPresenter.new(@presenter.statuses, current_account.id)\n+    end\n+\n+    render json: @presenter,\n+           serializer: REST::AnnualReportsSerializer,\n+           relationships: @relationships\n+  end\n+\n   def read\n     @annual_report.view!\n     render_empty\n---\napp/javascript/images/archetypes/booster.png\nNone\n---\napp/javascript/images/archetypes/lurker.png\nNone\n---\napp/javascript/images/archetypes/oracle.png\nNone\n---\napp/javascript/images/archetypes/pollster.png\nNone\n---\napp/javascript/images/archetypes/replier.png\nNone\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -20,6 +20,7 @@ export const allNotificationTypes = [\n   'admin.report',\n   'moderation_warning',\n   'severed_relationships',\n+  'annual_report',\n ];\n \n export type NotificationWithStatusType =\n@@ -37,7 +38,8 @@ export type NotificationType =\n   | 'moderation_warning'\n   | 'severed_relationships'\n   | 'admin.sign_up'\n-  | 'admin.report';\n+  | 'admin.report'\n+  | 'annual_report';\n \n export interface BaseNotificationJSON {\n   id: string;\n@@ -130,6 +132,15 @@ interface AccountRelationshipSeveranceNotificationJSON\n   event: ApiAccountRelationshipSeveranceEventJSON;\n }\n \n+export interface ApiAnnualReportEventJSON {\n+  year: string;\n+}\n+\n+interface AnnualReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n+  type: 'annual_report';\n+  annual_report: ApiAnnualReportEventJSON;\n+}\n+\n export type ApiNotificationJSON =\n   | SimpleNotificationJSON\n   | ReportNotificationJSON\n@@ -142,7 +153,8 @@ export type ApiNotificationGroupJSON =\n   | ReportNotificationGroupJSON\n   | AccountRelationshipSeveranceNotificationGroupJSON\n   | NotificationGroupWithStatusJSON\n-  | ModerationWarningNotificationGroupJSON;\n+  | ModerationWarningNotificationGroupJSON\n+  | AnnualReportNotificationGroupJSON;\n \n export interface ApiNotificationGroupsResultJSON {\n   accounts: ApiAccountJSON[];\n---\napp/javascript/mastodon/components/modal_root.jsx\n@@ -13,11 +13,14 @@ class ModalRoot extends PureComponent {\n   static propTypes = {\n     children: PropTypes.node,\n     onClose: PropTypes.func.isRequired,\n-    backgroundColor: PropTypes.shape({\n-      r: PropTypes.number,\n-      g: PropTypes.number,\n-      b: PropTypes.number,\n-    }),\n+    backgroundColor: PropTypes.oneOfType([\n+      PropTypes.string,\n+      PropTypes.shape({\n+        r: PropTypes.number,\n+        g: PropTypes.number,\n+        b: PropTypes.number,\n+      }),\n+    ]),\n     ignoreFocus: PropTypes.bool,\n     ...WithOptionalRouterPropTypes,\n   };\n@@ -141,14 +144,17 @@ class ModalRoot extends PureComponent {\n \n     let backgroundColor = null;\n \n-    if (this.props.backgroundColor) {\n-      backgroundColor = multiply({ ...this.props.backgroundColor, a: 1 }, { r: 0, g: 0, b: 0, a: 0.7 });\n+    if (this.props.backgroundColor && typeof this.props.backgroundColor === 'string') {\n+      backgroundColor = this.props.backgroundColor;\n+    } else if (this.props.backgroundColor) {\n+      const darkenedColor = multiply({ ...this.props.backgroundColor, a: 1 }, { r: 0, g: 0, b: 0, a: 0.7 });\n+      backgroundColor = `rgb(${darkenedColor.r}, ${darkenedColor.g}, ${darkenedColor.b})`;\n     }\n \n     return (\n       <div className='modal-root' ref={this.setRef}>\n         <div style={{ pointerEvents: visible ? 'auto' : 'none' }}>\n-          <div role='presentation' className='modal-root__overlay' onClick={onClose} style={{ backgroundColor: backgroundColor ? `rgba(${backgroundColor.r}, ${backgroundColor.g}, ${backgroundColor.b}, 0.9)` : null }} />\n+          <div role='presentation' className='modal-root__overlay' onClick={onClose} style={{ backgroundColor }} />\n           <div role='dialog' className='modal-root__container'>{children}</div>\n         </div>\n       </div>\n---\napp/javascript/mastodon/features/annual_report/archetype.tsx\n@@ -0,0 +1,69 @@\n+import { FormattedMessage } from 'react-intl';\n+\n+import booster from '@/images/archetypes/booster.png';\n+import lurker from '@/images/archetypes/lurker.png';\n+import oracle from '@/images/archetypes/oracle.png';\n+import pollster from '@/images/archetypes/pollster.png';\n+import replier from '@/images/archetypes/replier.png';\n+import type { Archetype as ArchetypeData } from 'mastodon/models/annual_report';\n+\n+export const Archetype: React.FC<{\n+  data: ArchetypeData;\n+}> = ({ data }) => {\n+  let illustration, label;\n+\n+  switch (data) {\n+    case 'booster':\n+      illustration = booster;\n+      label = (\n+        <FormattedMessage\n+          id='annual_report.summary.archetype.booster'\n+          defaultMessage='The cool-hunter'\n+        />\n+      );\n+      break;\n+    case 'replier':\n+      illustration = replier;\n+      label = (\n+        <FormattedMessage\n+          id='annual_report.summary.archetype.replier'\n+          defaultMessage='The social butterfly'\n+        />\n+      );\n+      break;\n+    case 'pollster':\n+      illustration = pollster;\n+      label = (\n+        <FormattedMessage\n+          id='annual_report.summary.archetype.pollster'\n+          defaultMessage='The pollster'\n+        />\n+      );\n+      break;\n+    case 'lurker':\n+      illustration = lurker;\n+      label = (\n+        <FormattedMessage\n+          id='annual_report.summary.archetype.lurker'\n+          defaultMessage='The lurker'\n+        />\n+      );\n+      break;\n+    case 'oracle':\n+      illustration = oracle;\n+      label = (\n+        <FormattedMessage\n+          id='annual_report.summary.archetype.oracle'\n+          defaultMessage='The oracle'\n+        />\n+      );\n+      break;\n+  }\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__archetype'>\n+      <div className='annual-report__summary__archetype__label'>{label}</div>\n+      <img src={illustration} alt='' />\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/followers.tsx\n@@ -0,0 +1,69 @@\n+import { FormattedMessage, FormattedNumber } from 'react-intl';\n+\n+import { Sparklines, SparklinesCurve } from 'react-sparklines';\n+\n+import { ShortNumber } from 'mastodon/components/short_number';\n+import type { TimeSeriesMonth } from 'mastodon/models/annual_report';\n+\n+export const Followers: React.FC<{\n+  data: TimeSeriesMonth[];\n+  total?: number;\n+}> = ({ data, total }) => {\n+  const change = data.reduce((sum, item) => sum + item.followers, 0);\n+\n+  const cumulativeGraph = data.reduce(\n+    (newData, item) => [\n+      ...newData,\n+      item.followers + (newData[newData.length - 1] ?? 0),\n+    ],\n+    [0],\n+  );\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__followers'>\n+      <Sparklines data={cumulativeGraph} margin={0}>\n+        <svg>\n+          <defs>\n+            <linearGradient id='gradient' x1='0%' y1='0%' x2='0%' y2='100%'>\n+              <stop\n+                offset='0%'\n+                stopColor='var(--sparkline-gradient-top)'\n+                stopOpacity='1'\n+              />\n+              <stop\n+                offset='100%'\n+                stopColor='var(--sparkline-gradient-bottom)'\n+                stopOpacity='0'\n+              />\n+            </linearGradient>\n+          </defs>\n+        </svg>\n+\n+        <SparklinesCurve style={{ fill: 'none' }} />\n+      </Sparklines>\n+\n+      <div className='annual-report__summary__followers__foreground'>\n+        <div className='annual-report__summary__followers__number'>\n+          {change > -1 ? '+' : '-'}\n+          <FormattedNumber value={change} />\n+        </div>\n+\n+        <div className='annual-report__summary__followers__label'>\n+          <span>\n+            <FormattedMessage\n+              id='annual_report.summary.followers.followers'\n+              defaultMessage='followers'\n+            />\n+          </span>\n+          <div className='annual-report__summary__followers__footnote'>\n+            <FormattedMessage\n+              id='annual_report.summary.followers.total'\n+              defaultMessage='{count} total'\n+              values={{ count: <ShortNumber value={total ?? 0} /> }}\n+            />\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/highlighted_post.tsx\n@@ -0,0 +1,105 @@\n+/* eslint-disable @typescript-eslint/no-unsafe-return,\n+                  @typescript-eslint/no-explicit-any,\n+                  @typescript-eslint/no-unsafe-assignment */\n+\n+import { useCallback } from 'react';\n+\n+import { FormattedMessage } from 'react-intl';\n+\n+import { toggleStatusSpoilers } from 'mastodon/actions/statuses';\n+import { DetailedStatus } from 'mastodon/features/status/components/detailed_status';\n+import { me } from 'mastodon/initial_state';\n+import type { TopStatuses } from 'mastodon/models/annual_report';\n+import { makeGetStatus, makeGetPictureInPicture } from 'mastodon/selectors';\n+import { useAppSelector, useAppDispatch } from 'mastodon/store';\n+\n+const getStatus = makeGetStatus() as unknown as (arg0: any, arg1: any) => any;\n+const getPictureInPicture = makeGetPictureInPicture() as unknown as (\n+  arg0: any,\n+  arg1: any,\n+) => any;\n+\n+export const HighlightedPost: React.FC<{\n+  data: TopStatuses;\n+}> = ({ data }) => {\n+  let statusId, label;\n+\n+  if (data.by_reblogs) {\n+    statusId = data.by_reblogs;\n+    label = (\n+      <FormattedMessage\n+        id='annual_report.summary.highlighted_post.by_reblogs'\n+        defaultMessage='most boosted post'\n+      />\n+    );\n+  } else if (data.by_favourites) {\n+    statusId = data.by_favourites;\n+    label = (\n+      <FormattedMessage\n+        id='annual_report.summary.highlighted_post.by_favourites'\n+        defaultMessage='most favourited post'\n+      />\n+    );\n+  } else {\n+    statusId = data.by_replies;\n+    label = (\n+      <FormattedMessage\n+        id='annual_report.summary.highlighted_post.by_replies'\n+        defaultMessage='post with the most replies'\n+      />\n+    );\n+  }\n+\n+  const dispatch = useAppDispatch();\n+  const domain = useAppSelector((state) => state.meta.get('domain'));\n+  const status = useAppSelector((state) =>\n+    statusId ? getStatus(state, { id: statusId }) : undefined,\n+  );\n+  const pictureInPicture = useAppSelector((state) =>\n+    statusId ? getPictureInPicture(state, { id: statusId }) : undefined,\n+  );\n+  const account = useAppSelector((state) =>\n+    me ? state.accounts.get(me) : undefined,\n+  );\n+\n+  const handleToggleHidden = useCallback(() => {\n+    dispatch(toggleStatusSpoilers(statusId));\n+  }, [dispatch, statusId]);\n+\n+  if (!status) {\n+    return (\n+      <div className='annual-report__bento__box annual-report__summary__most-boosted-post' />\n+    );\n+  }\n+\n+  const displayName = (\n+    <span className='display-name'>\n+      <strong className='display-name__html'>\n+        <FormattedMessage\n+          id='annual_report.summary.highlighted_post.possessive'\n+          defaultMessage=\"{name}'s\"\n+          values={{\n+            name: account && (\n+              <bdi\n+                dangerouslySetInnerHTML={{ __html: account.display_name_html }}\n+              />\n+            ),\n+          }}\n+        />\n+      </strong>\n+      <span className='display-name__account'>{label}</span>\n+    </span>\n+  );\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__most-boosted-post'>\n+      <DetailedStatus\n+        status={status}\n+        pictureInPicture={pictureInPicture}\n+        domain={domain}\n+        onToggleHidden={handleToggleHidden}\n+        overrideDisplayName={displayName}\n+      />\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/index.tsx\n@@ -0,0 +1,99 @@\n+import { useState, useEffect } from 'react';\n+\n+import { FormattedMessage } from 'react-intl';\n+\n+import {\n+  importFetchedStatuses,\n+  importFetchedAccounts,\n+} from 'mastodon/actions/importer';\n+import { apiRequestGet, apiRequestPost } from 'mastodon/api';\n+import { LoadingIndicator } from 'mastodon/components/loading_indicator';\n+import { me } from 'mastodon/initial_state';\n+import type { Account } from 'mastodon/models/account';\n+import type { AnnualReport as AnnualReportData } from 'mastodon/models/annual_report';\n+import type { Status } from 'mastodon/models/status';\n+import { useAppSelector, useAppDispatch } from 'mastodon/store';\n+\n+import { Archetype } from './archetype';\n+import { Followers } from './followers';\n+import { HighlightedPost } from './highlighted_post';\n+import { MostUsedHashtag } from './most_used_hashtag';\n+import { NewPosts } from './new_posts';\n+import { Percentile } from './percentile';\n+\n+interface AnnualReportResponse {\n+  annual_reports: AnnualReportData[];\n+  accounts: Account[];\n+  statuses: Status[];\n+}\n+\n+export const AnnualReport: React.FC<{\n+  year: string;\n+}> = ({ year }) => {\n+  const [response, setResponse] = useState<AnnualReportResponse | null>(null);\n+  const [loading, setLoading] = useState(false);\n+  const currentAccount = useAppSelector((state) =>\n+    me ? state.accounts.get(me) : undefined,\n+  );\n+  const dispatch = useAppDispatch();\n+\n+  useEffect(() => {\n+    setLoading(true);\n+\n+    apiRequestGet<AnnualReportResponse>(`v1/annual_reports/${year}`)\n+      .then((data) => {\n+        dispatch(importFetchedStatuses(data.statuses));\n+        dispatch(importFetchedAccounts(data.accounts));\n+\n+        setResponse(data);\n+        setLoading(false);\n+\n+        return apiRequestPost(`v1/annual_reports/${year}/read`);\n+      })\n+      .catch(() => {\n+        setLoading(false);\n+      });\n+  }, [dispatch, year, setResponse, setLoading]);\n+\n+  if (loading) {\n+    return <LoadingIndicator />;\n+  }\n+\n+  const report = response?.annual_reports[0];\n+\n+  if (!report) {\n+    return null;\n+  }\n+\n+  return (\n+    <div className='annual-report'>\n+      <div className='annual-report__header'>\n+        <h1>\n+          <FormattedMessage\n+            id='annual_report.summary.thanks'\n+            defaultMessage='Thanks for being part of Mastodon!'\n+          />\n+        </h1>\n+        <p>\n+          <FormattedMessage\n+            id='annual_report.summary.here_it_is'\n+            defaultMessage='Here is your {year} in review:'\n+            values={{ year: report.year }}\n+          />\n+        </p>\n+      </div>\n+\n+      <div className='annual-report__bento annual-report__summary'>\n+        <Archetype data={report.data.archetype} />\n+        <HighlightedPost data={report.data.top_statuses} />\n+        <Followers\n+          data={report.data.time_series}\n+          total={currentAccount?.followers_count}\n+        />\n+        <MostUsedHashtag data={report.data.top_hashtags} />\n+        <Percentile data={report.data.percentiles} />\n+        <NewPosts data={report.data.time_series} />\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/most_used_app.tsx\n@@ -0,0 +1,29 @@\n+import { FormattedMessage } from 'react-intl';\n+\n+import type { NameAndCount } from 'mastodon/models/annual_report';\n+\n+export const MostUsedApp: React.FC<{\n+  data: NameAndCount[];\n+}> = ({ data }) => {\n+  const app = data[0];\n+\n+  if (!app) {\n+    return (\n+      <div className='annual-report__bento__box annual-report__summary__most-used-app' />\n+    );\n+  }\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__most-used-app'>\n+      <div className='annual-report__summary__most-used-app__icon'>\n+        {app.name}\n+      </div>\n+      <div className='annual-report__summary__most-used-app__label'>\n+        <FormattedMessage\n+          id='annual_report.summary.most_used_app.most_used_app'\n+          defaultMessage='most used app'\n+        />\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/most_used_hashtag.tsx\n@@ -0,0 +1,29 @@\n+import { FormattedMessage } from 'react-intl';\n+\n+import type { NameAndCount } from 'mastodon/models/annual_report';\n+\n+export const MostUsedHashtag: React.FC<{\n+  data: NameAndCount[];\n+}> = ({ data }) => {\n+  const hashtag = data[0];\n+\n+  if (!hashtag) {\n+    return (\n+      <div className='annual-report__bento__box annual-report__summary__most-used-hashtag' />\n+    );\n+  }\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__most-used-hashtag'>\n+      <div className='annual-report__summary__most-used-hashtag__hashtag'>\n+        #{hashtag.name}\n+      </div>\n+      <div className='annual-report__summary__most-used-hashtag__label'>\n+        <FormattedMessage\n+          id='annual_report.summary.most_used_hashtag.most_used_hashtag'\n+          defaultMessage='most used hashtag'\n+        />\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/new_posts.tsx\n@@ -0,0 +1,53 @@\n+import { FormattedNumber, FormattedMessage } from 'react-intl';\n+\n+import ChatBubbleIcon from '@/material-icons/400-24px/chat_bubble.svg?react';\n+import type { TimeSeriesMonth } from 'mastodon/models/annual_report';\n+\n+export const NewPosts: React.FC<{\n+  data: TimeSeriesMonth[];\n+}> = ({ data }) => {\n+  const posts = data.reduce((sum, item) => sum + item.statuses, 0);\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__new-posts'>\n+      <svg width={500} height={500}>\n+        <defs>\n+          <pattern\n+            id='posts'\n+            x='0'\n+            y='0'\n+            width='32'\n+            height='35'\n+            patternUnits='userSpaceOnUse'\n+          >\n+            <circle cx='12' cy='12' r='12' fill='var(--lime)' />\n+            <ChatBubbleIcon\n+              fill='var(--indigo-1)'\n+              x='4'\n+              y='4'\n+              width='16'\n+              height='16'\n+            />\n+          </pattern>\n+        </defs>\n+\n+        <rect\n+          width={500}\n+          height={500}\n+          fill='url(#posts)'\n+          style={{ opacity: 0.2 }}\n+        />\n+      </svg>\n+\n+      <div className='annual-report__summary__new-posts__number'>\n+        <FormattedNumber value={posts} />\n+      </div>\n+      <div className='annual-report__summary__new-posts__label'>\n+        <FormattedMessage\n+          id='annual_report.summary.new_posts.new_posts'\n+          defaultMessage='new posts'\n+        />\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/percentile.tsx\n@@ -0,0 +1,53 @@\n+/* eslint-disable react/jsx-no-useless-fragment */\n+import { FormattedMessage, FormattedNumber } from 'react-intl';\n+\n+import type { Percentiles } from 'mastodon/models/annual_report';\n+\n+export const Percentile: React.FC<{\n+  data: Percentiles;\n+}> = ({ data }) => {\n+  const percentile = data.statuses;\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__percentile'>\n+      <FormattedMessage\n+        id='annual_report.summary.percentile.text'\n+        defaultMessage='<topLabel>That puts you in the top</topLabel><percentage></percentage><bottomLabel>of Mastodon users.</bottomLabel>'\n+        values={{\n+          topLabel: (str) => (\n+            <div className='annual-report__summary__percentile__label'>\n+              {str}\n+            </div>\n+          ),\n+          percentage: () => (\n+            <div className='annual-report__summary__percentile__number'>\n+              <FormattedNumber\n+                value={percentile / 100}\n+                style='percent'\n+                maximumFractionDigits={1}\n+              />\n+            </div>\n+          ),\n+          bottomLabel: (str) => (\n+            <div>\n+              <div className='annual-report__summary__percentile__label'>\n+                {str}\n+              </div>\n+\n+              {percentile < 6 && (\n+                <div className='annual-report__summary__percentile__footnote'>\n+                  <FormattedMessage\n+                    id='annual_report.summary.percentile.we_wont_tell_bernie'\n+                    defaultMessage=\"We won't tell Bernie.\"\n+                  />\n+                </div>\n+              )}\n+            </div>\n+          ),\n+        }}\n+      >\n+        {(message) => <>{message}</>}\n+      </FormattedMessage>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_annual_report.tsx\n@@ -0,0 +1,59 @@\n+import { useCallback } from 'react';\n+\n+import { FormattedMessage } from 'react-intl';\n+\n+import classNames from 'classnames';\n+\n+import CelebrationIcon from '@/material-icons/400-24px/celebration.svg?react';\n+import { openModal } from 'mastodon/actions/modal';\n+import { Icon } from 'mastodon/components/icon';\n+import type { NotificationGroupAnnualReport } from 'mastodon/models/notification_group';\n+import { useAppDispatch } from 'mastodon/store';\n+\n+export const NotificationAnnualReport: React.FC<{\n+  notification: NotificationGroupAnnualReport;\n+  unread: boolean;\n+}> = ({ notification: { annualReport }, unread }) => {\n+  const dispatch = useAppDispatch();\n+  const year = annualReport.year;\n+\n+  const handleClick = useCallback(() => {\n+    dispatch(\n+      openModal({\n+        modalType: 'ANNUAL_REPORT',\n+        modalProps: { year },\n+      }),\n+    );\n+  }, [dispatch, year]);\n+\n+  return (\n+    <div\n+      role='button'\n+      className={classNames(\n+        'notification-group notification-group--link notification-group--annual-report focusable',\n+        { 'notification-group--unread': unread },\n+      )}\n+      tabIndex={0}\n+    >\n+      <div className='notification-group__icon'>\n+        <Icon id='celebration' icon={CelebrationIcon} />\n+      </div>\n+\n+      <div className='notification-group__main'>\n+        <p>\n+          <FormattedMessage\n+            id='notification.annual_report.message'\n+            defaultMessage=\"Your {year} #Wrapstodon awaits! Unveil your year's highlights and memorable moments on Mastodon!\"\n+            values={{ year }}\n+          />\n+        </p>\n+        <button onClick={handleClick} className='link-button'>\n+          <FormattedMessage\n+            id='notification.annual_report.view'\n+            defaultMessage='View #Wrapstodon'\n+          />\n+        </button>\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_group.tsx\n@@ -9,6 +9,7 @@ import { useAppSelector, useAppDispatch } from 'mastodon/store';\n \n import { NotificationAdminReport } from './notification_admin_report';\n import { NotificationAdminSignUp } from './notification_admin_sign_up';\n+import { NotificationAnnualReport } from './notification_annual_report';\n import { NotificationFavourite } from './notification_favourite';\n import { NotificationFollow } from './notification_follow';\n import { NotificationFollowRequest } from './notification_follow_request';\n@@ -143,6 +144,14 @@ export const NotificationGroup: React.FC<{\n         />\n       );\n       break;\n+    case 'annual_report':\n+      content = (\n+        <NotificationAnnualReport\n+          unread={unread}\n+          notification={notificationGroup}\n+        />\n+      );\n+      break;\n     default:\n       return null;\n   }\n---\napp/javascript/mastodon/features/status/components/detailed_status.tsx\n@@ -49,6 +49,7 @@ export const DetailedStatus: React.FC<{\n   domain: string;\n   showMedia?: boolean;\n   withLogo?: boolean;\n+  overrideDisplayName?: React.ReactNode;\n   pictureInPicture: any;\n   onToggleHidden?: (status: any) => void;\n   onToggleMediaVisibility?: () => void;\n@@ -62,6 +63,7 @@ export const DetailedStatus: React.FC<{\n   domain,\n   showMedia,\n   withLogo,\n+  overrideDisplayName,\n   pictureInPicture,\n   onToggleMediaVisibility,\n   onToggleHidden,\n@@ -319,7 +321,11 @@ export const DetailedStatus: React.FC<{\n           <div className='detailed-status__display-avatar'>\n             <Avatar account={status.get('account')} size={46} />\n           </div>\n-          <DisplayName account={status.get('account')} localDomain={domain} />\n+\n+          {overrideDisplayName ?? (\n+            <DisplayName account={status.get('account')} localDomain={domain} />\n+          )}\n+\n           {withLogo && (\n             <>\n               <div className='spacer' />\n---\napp/javascript/mastodon/features/ui/components/annual_report_modal.tsx\n@@ -0,0 +1,21 @@\n+import { useEffect } from 'react';\n+\n+import { AnnualReport } from 'mastodon/features/annual_report';\n+\n+const AnnualReportModal: React.FC<{\n+  year: string;\n+  onChangeBackgroundColor: (arg0: string) => void;\n+}> = ({ year, onChangeBackgroundColor }) => {\n+  useEffect(() => {\n+    onChangeBackgroundColor('var(--indigo-1)');\n+  }, [onChangeBackgroundColor]);\n+\n+  return (\n+    <div className='modal-root__modal annual-report-modal'>\n+      <AnnualReport year={year} />\n+    </div>\n+  );\n+};\n+\n+// eslint-disable-next-line import/no-default-export\n+export default AnnualReportModal;\n---\napp/javascript/mastodon/features/ui/components/modal_root.jsx\n@@ -18,6 +18,7 @@ import {\n   SubscribedLanguagesModal,\n   ClosedRegistrationsModal,\n   IgnoreNotificationsModal,\n+  AnnualReportModal,\n } from 'mastodon/features/ui/util/async-components';\n import { getScrollbarWidth } from 'mastodon/utils/scrollbar';\n \n@@ -72,6 +73,7 @@ export const MODAL_COMPONENTS = {\n   'INTERACTION': InteractionModal,\n   'CLOSED_REGISTRATIONS': ClosedRegistrationsModal,\n   'IGNORE_NOTIFICATIONS': IgnoreNotificationsModal,\n+  'ANNUAL_REPORT': AnnualReportModal,\n };\n \n export default class ModalRoot extends PureComponent {\n---\napp/javascript/mastodon/features/ui/util/async-components.js\n@@ -217,3 +217,7 @@ export function NotificationRequest () {\n export function LinkTimeline () {\n   return import(/*webpackChunkName: \"features/link_timeline\" */'../../link_timeline');\n }\n+\n+export function AnnualReportModal () {\n+  return import(/*webpackChunkName: \"modals/annual_report_modal\" */'../components/annual_report_modal');\n+}\n---\napp/javascript/mastodon/locales/en.json\n@@ -87,6 +87,24 @@\n   \"alert.unexpected.title\": \"Oops!\",\n   \"alt_text_badge.title\": \"Alt text\",\n   \"announcement.announcement\": \"Announcement\",\n+  \"annual_report.summary.archetype.booster\": \"The cool-hunter\",\n+  \"annual_report.summary.archetype.lurker\": \"The lurker\",\n+  \"annual_report.summary.archetype.oracle\": \"The oracle\",\n+  \"annual_report.summary.archetype.pollster\": \"The pollster\",\n+  \"annual_report.summary.archetype.replier\": \"The social butterfly\",\n+  \"annual_report.summary.followers.followers\": \"followers\",\n+  \"annual_report.summary.followers.total\": \"{count} total\",\n+  \"annual_report.summary.here_it_is\": \"Here is your {year} in review:\",\n+  \"annual_report.summary.highlighted_post.by_favourites\": \"most favourited post\",\n+  \"annual_report.summary.highlighted_post.by_reblogs\": \"most boosted post\",\n+  \"annual_report.summary.highlighted_post.by_replies\": \"post with the most replies\",\n+  \"annual_report.summary.highlighted_post.possessive\": \"{name}'s\",\n+  \"annual_report.summary.most_used_app.most_used_app\": \"most used app\",\n+  \"annual_report.summary.most_used_hashtag.most_used_hashtag\": \"most used hashtag\",\n+  \"annual_report.summary.new_posts.new_posts\": \"new posts\",\n+  \"annual_report.summary.percentile.text\": \"<topLabel>That puts you in the top</topLabel><percentage></percentage><bottomLabel>of Mastodon users.</bottomLabel>\",\n+  \"annual_report.summary.percentile.we_wont_tell_bernie\": \"We won't tell Bernie.\",\n+  \"annual_report.summary.thanks\": \"Thanks for being part of Mastodon!\",\n   \"attachments_list.unprocessed\": \"(unprocessed)\",\n   \"audio.hide\": \"Hide audio\",\n   \"block_modal.remote_users_caveat\": \"We will ask the server {domain} to respect your decision. However, compliance is not guaranteed since some servers may handle blocks differently. Public posts may still be visible to non-logged-in users.\",\n@@ -508,6 +526,8 @@\n   \"notification.admin.report_statuses_other\": \"{name} reported {target}\",\n   \"notification.admin.sign_up\": \"{name} signed up\",\n   \"notification.admin.sign_up.name_and_others\": \"{name} and {count, plural, one {# other} other {# others}} signed up\",\n+  \"notification.annual_report.message\": \"Your {year} #Wrapstodon awaits! Unveil your year's highlights and memorable moments on Mastodon!\",\n+  \"notification.annual_report.view\": \"View #Wrapstodon\",\n   \"notification.favourite\": \"{name} favorited your post\",\n   \"notification.favourite.name_and_others_with_link\": \"{name} and <a>{count, plural, one {# other} other {# others}}</a> favorited your post\",\n   \"notification.follow\": \"{name} followed you\",\n---\napp/javascript/mastodon/models/annual_report.ts\n@@ -0,0 +1,44 @@\n+export interface Percentiles {\n+  followers: number;\n+  statuses: number;\n+}\n+\n+export interface NameAndCount {\n+  name: string;\n+  count: number;\n+}\n+\n+export interface TimeSeriesMonth {\n+  month: number;\n+  statuses: number;\n+  following: number;\n+  followers: number;\n+}\n+\n+export interface TopStatuses {\n+  by_reblogs: number;\n+  by_favourites: number;\n+  by_replies: number;\n+}\n+\n+export type Archetype =\n+  | 'lurker'\n+  | 'booster'\n+  | 'pollster'\n+  | 'replier'\n+  | 'oracle';\n+\n+interface AnnualReportV1 {\n+  most_used_apps: NameAndCount[];\n+  percentiles: Percentiles;\n+  top_hashtags: NameAndCount[];\n+  top_statuses: TopStatuses;\n+  time_series: TimeSeriesMonth[];\n+  archetype: Archetype;\n+}\n+\n+export interface AnnualReport {\n+  year: number;\n+  schema_version: number;\n+  data: AnnualReportV1;\n+}\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -1,6 +1,7 @@\n import type {\n   ApiAccountRelationshipSeveranceEventJSON,\n   ApiAccountWarningJSON,\n+  ApiAnnualReportEventJSON,\n   BaseNotificationGroupJSON,\n   ApiNotificationGroupJSON,\n   ApiNotificationJSON,\n@@ -65,6 +66,12 @@ export interface NotificationGroupSeveredRelationships\n   event: AccountRelationshipSeveranceEvent;\n }\n \n+type AnnualReportEvent = ApiAnnualReportEventJSON;\n+export interface NotificationGroupAnnualReport\n+  extends BaseNotification<'annual_report'> {\n+  annualReport: AnnualReportEvent;\n+}\n+\n interface Report extends Omit<ApiReportJSON, 'target_account'> {\n   targetAccountId: string;\n }\n@@ -86,7 +93,8 @@ export type NotificationGroup =\n   | NotificationGroupModerationWarning\n   | NotificationGroupSeveredRelationships\n   | NotificationGroupAdminSignUp\n-  | NotificationGroupAdminReport;\n+  | NotificationGroupAdminReport\n+  | NotificationGroupAnnualReport;\n \n function createReportFromJSON(reportJSON: ApiReportJSON): Report {\n   const { target_account, ...report } = reportJSON;\n@@ -112,6 +120,12 @@ function createAccountRelationshipSeveranceEventFromJSON(\n   return eventJson;\n }\n \n+function createAnnualReportEventFromJSON(\n+  eventJson: ApiAnnualReportEventJSON,\n+): AnnualReportEvent {\n+  return eventJson;\n+}\n+\n export function createNotificationGroupFromJSON(\n   groupJson: ApiNotificationGroupJSON,\n ): NotificationGroup {\n@@ -145,7 +159,6 @@ export function createNotificationGroupFromJSON(\n         event: createAccountRelationshipSeveranceEventFromJSON(group.event),\n         sampleAccountIds,\n       };\n-\n     case 'moderation_warning': {\n       const { moderation_warning, ...groupWithoutModerationWarning } = group;\n       return {\n@@ -154,6 +167,14 @@ export function createNotificationGroupFromJSON(\n         sampleAccountIds,\n       };\n     }\n+    case 'annual_report': {\n+      const { annual_report, ...groupWithoutAnnualReport } = group;\n+      return {\n+        ...groupWithoutAnnualReport,\n+        annualReport: createAnnualReportEventFromJSON(annual_report),\n+        sampleAccountIds,\n+      };\n+    }\n     default:\n       return {\n         sampleAccountIds,\n---\napp/javascript/material-icons/400-24px/celebration-fill.svg\n@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m80-80 200-560 360 360L80-80Zm502-378-42-42 224-224q32-32 77-32t77 32l24 24-42 42-24-24q-14-14-35-14t-35 14L582-458ZM422-618l-42-42 24-24q14-14 14-34t-14-34l-26-26 42-42 26 26q32 32 32 76t-32 76l-24 24Zm80 80-42-42 144-144q14-14 14-35t-14-35l-64-64 42-42 64 64q32 32 32 77t-32 77L502-538Zm160 160-42-42 64-64q32-32 77-32t77 32l64 64-42 42-64-64q-14-14-35-14t-35 14l-64 64Z\"/></svg>\n\\ No newline at end of file\n---\napp/javascript/material-icons/400-24px/celebration.svg\n@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m80-80 200-560 360 360L80-80Zm132-132 282-100-182-182-100 282Zm370-246-42-42 224-224q32-32 77-32t77 32l24 24-42 42-24-24q-14-14-35-14t-35 14L582-458ZM422-618l-42-42 24-24q14-14 14-34t-14-34l-26-26 42-42 26 26q32 32 32 76t-32 76l-24 24Zm80 80-42-42 144-144q14-14 14-35t-14-35l-64-64 42-42 64 64q32 32 32 77t-32 77L502-538Zm160 160-42-42 64-64q32-32 77-32t77 32l64 64-42 42-64-64q-14-14-35-14t-35 14l-64 64ZM212-212Z\"/></svg>\n\\ No newline at end of file\n---\napp/javascript/material-icons/400-24px/explore-fill.svg\n@@ -1 +1 @@\n-<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m260-260 300-140 140-300-300 140-140 300Zm220-180q-17 0-28.5-11.5T440-480q0-17 11.5-28.5T480-520q17 0 28.5 11.5T520-480q0 17-11.5 28.5T480-440Zm0 360q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Z\"/></svg>\n\\ No newline at end of file\n+<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m300-300 280-80 80-280-280 80-80 280Zm180-120q-25 0-42.5-17.5T420-480q0-25 17.5-42.5T480-540q25 0 42.5 17.5T540-480q0 25-17.5 42.5T480-420Zm0 340q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Z\"/></svg>\n\\ No newline at end of file\n---\napp/javascript/material-icons/400-24px/explore.svg\n@@ -1 +1 @@\n-<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m260-260 300-140 140-300-300 140-140 300Zm220-180q-17 0-28.5-11.5T440-480q0-17 11.5-28.5T480-520q17 0 28.5 11.5T520-480q0 17-11.5 28.5T480-440Zm0 360q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z\"/></svg>\n\\ No newline at end of file\n+<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m300-300 280-80 80-280-280 80-80 280Zm180-120q-25 0-42.5-17.5T420-480q0-25 17.5-42.5T480-540q25 0 42.5 17.5T540-480q0 25-17.5 42.5T480-420Zm0 340q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q133 0 226.5-93.5T800-480q0-133-93.5-226.5T480-800q-133 0-226.5 93.5T160-480q0 133 93.5 226.5T480-160Zm0-320Z\"/></svg>\n\\ No newline at end of file\n---\napp/javascript/styles/application.scss\n@@ -15,6 +15,7 @@\n @import 'mastodon/polls';\n @import 'mastodon/modal';\n @import 'mastodon/emoji_picker';\n+@import 'mastodon/annual_reports';\n @import 'mastodon/about';\n @import 'mastodon/tables';\n @import 'mastodon/admin';\n---\napp/javascript/styles/mastodon/annual_reports.scss\n@@ -0,0 +1,335 @@\n+:root {\n+  --indigo-1: #17063b;\n+  --indigo-2: #2f0c7a;\n+  --indigo-3: #562cfc;\n+  --indigo-5: #858afa;\n+  --indigo-6: #cccfff;\n+  --lime: #baff3b;\n+  --goldenrod-2: #ffc954;\n+}\n+\n+.annual-report {\n+  flex: 0 0 auto;\n+  background: var(--indigo-1);\n+  padding: 24px;\n+\n+  &__header {\n+    margin-bottom: 16px;\n+\n+    h1 {\n+      font-size: 25px;\n+      font-weight: 600;\n+      line-height: 30px;\n+      color: var(--lime);\n+      margin-bottom: 8px;\n+    }\n+\n+    p {\n+      font-size: 16px;\n+      font-weight: 600;\n+      line-height: 20px;\n+      color: var(--indigo-6);\n+    }\n+  }\n+\n+  &__bento {\n+    display: grid;\n+    gap: 8px;\n+    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);\n+    grid-template-rows: minmax(0, auto) minmax(0, 1fr) minmax(0, auto) minmax(\n+        0,\n+        auto\n+      );\n+\n+    &__box {\n+      padding: 16px;\n+      border-radius: 8px;\n+      background: var(--indigo-2);\n+      color: var(--indigo-5);\n+    }\n+  }\n+\n+  &__summary {\n+    &__most-boosted-post {\n+      grid-column: span 2;\n+      grid-row: span 2;\n+      padding: 0;\n+\n+      .status__content,\n+      .content-warning {\n+        color: var(--indigo-6);\n+      }\n+\n+      .detailed-status {\n+        border: 0;\n+      }\n+\n+      .content-warning {\n+        border: 0;\n+        background: var(--indigo-1);\n+\n+        .link-button {\n+          color: var(--indigo-5);\n+        }\n+      }\n+\n+      .detailed-status__meta__line {\n+        border-bottom-color: var(--indigo-3);\n+      }\n+\n+      .detailed-status__meta {\n+        text-overflow: ellipsis;\n+        overflow: hidden;\n+        white-space: nowrap;\n+      }\n+\n+      .detailed-status__meta,\n+      .poll__footer,\n+      .poll__link,\n+      .detailed-status .logo,\n+      .detailed-status__display-name {\n+        color: var(--indigo-5);\n+      }\n+\n+      .detailed-status__meta .animated-number,\n+      .detailed-status__display-name strong {\n+        color: var(--indigo-6);\n+      }\n+\n+      .poll__chart {\n+        background-color: var(--indigo-3);\n+\n+        &.leading {\n+          background-color: var(--goldenrod-2);\n+        }\n+      }\n+    }\n+\n+    &__followers {\n+      grid-column: span 1;\n+      text-align: center;\n+      position: relative;\n+      overflow: hidden;\n+      padding-block-start: 24px;\n+      padding-block-end: 24px;\n+\n+      --sparkline-gradient-top: rgba(86, 44, 252, 50%);\n+      --sparkline-gradient-bottom: rgba(86, 44, 252, 0%);\n+\n+      &__foreground {\n+        width: 100%;\n+        height: 100%;\n+        display: flex;\n+        flex-direction: column;\n+        align-items: center;\n+        justify-content: center;\n+        gap: 8px;\n+        position: relative;\n+        z-index: 1;\n+      }\n+\n+      &__number {\n+        font-size: 31px;\n+        font-weight: 600;\n+        line-height: 37px;\n+        color: var(--lime);\n+      }\n+\n+      &__label {\n+        font-size: 14px;\n+        font-weight: 600;\n+        line-height: 17px;\n+        color: var(--indigo-6);\n+      }\n+\n+      &__footnote {\n+        display: block;\n+        font-weight: 400;\n+        opacity: 0.5;\n+      }\n+\n+      svg {\n+        position: absolute;\n+        bottom: 0;\n+        inset-inline-end: 0;\n+        pointer-events: none;\n+        z-index: 0;\n+        height: 70%;\n+        width: auto;\n+\n+        path:first-child {\n+          fill: url('#gradient') !important;\n+          fill-opacity: 1 !important;\n+        }\n+\n+        path:last-child {\n+          stroke: var(--indigo-3) !important;\n+          fill: none !important;\n+        }\n+      }\n+    }\n+\n+    &__archetype {\n+      grid-column: span 1;\n+      display: flex;\n+      flex-direction: column;\n+      align-items: center;\n+      justify-content: center;\n+      text-align: center;\n+      gap: 8px;\n+      padding: 0;\n+\n+      img {\n+        display: block;\n+        width: 100%;\n+        height: auto;\n+        border-radius: 8px;\n+      }\n+\n+      &__label {\n+        padding: 16px;\n+        padding-bottom: 8px;\n+        font-size: 14px;\n+        line-height: 17px;\n+        font-weight: 600;\n+        color: var(--lime);\n+      }\n+    }\n+\n+    &__most-used-app {\n+      grid-column: span 1;\n+      text-align: center;\n+      display: flex;\n+      flex-direction: column;\n+      align-items: center;\n+      justify-content: center;\n+      gap: 8px;\n+      box-sizing: border-box;\n+\n+      &__label {\n+        font-size: 14px;\n+        line-height: 17px;\n+        font-weight: 600;\n+        color: var(--indigo-6);\n+      }\n+\n+      &__icon {\n+        font-size: 14px;\n+        line-height: 17px;\n+        font-weight: 600;\n+        color: var(--goldenrod-2);\n+      }\n+    }\n+\n+    &__percentile {\n+      grid-row: span 2;\n+      display: flex;\n+      flex-direction: column;\n+      align-items: center;\n+      justify-content: space-between;\n+      text-align: center;\n+      text-wrap: balance;\n+      padding: 16px 8px;\n+\n+      &__label {\n+        font-size: 14px;\n+        line-height: 17px;\n+      }\n+\n+      &__number {\n+        font-size: 61px;\n+        font-weight: 600;\n+        line-height: 73px;\n+        color: var(--goldenrod-2);\n+      }\n+\n+      &__footnote {\n+        font-size: 11px;\n+        line-height: 14px;\n+        opacity: 0.5;\n+      }\n+    }\n+\n+    &__new-posts {\n+      grid-column: span 2;\n+      text-align: center;\n+      position: relative;\n+      overflow: hidden;\n+\n+      &__label {\n+        font-size: 20px;\n+        font-weight: 600;\n+        line-height: 24px;\n+        color: var(--indigo-6);\n+        z-index: 1;\n+        position: relative;\n+      }\n+\n+      &__number {\n+        font-size: 76px;\n+        font-weight: 600;\n+        line-height: 91px;\n+        color: var(--goldenrod-2);\n+        z-index: 1;\n+        position: relative;\n+      }\n+\n+      svg {\n+        position: absolute;\n+        inset-inline-start: -7px;\n+        top: -4px;\n+        z-index: 0;\n+      }\n+    }\n+\n+    &__most-used-hashtag {\n+      grid-column: span 2;\n+      text-align: center;\n+      overflow: hidden;\n+\n+      &__hashtag {\n+        font-size: 42px;\n+        font-weight: 600;\n+        line-height: 58px;\n+        color: var(--indigo-6);\n+        margin-inline-start: -100%;\n+        margin-inline-end: -100%;\n+      }\n+\n+      &__label {\n+        font-size: 14px;\n+        font-weight: 600;\n+        line-height: 17px;\n+      }\n+    }\n+  }\n+}\n+\n+.annual-report-modal {\n+  max-width: 480px;\n+  background: var(--indigo-1);\n+  border-radius: 16px;\n+  display: flex;\n+  flex-direction: column;\n+  overflow-y: auto;\n+\n+  .loading-indicator .circular-progress {\n+    color: var(--lime);\n+  }\n+\n+  @media screen and (max-width: $no-columns-breakpoint) {\n+    border-bottom: 0;\n+    border-radius: 16px 16px 0 0;\n+  }\n+}\n+\n+.notification-group--annual-report {\n+  .notification-group__icon {\n+    color: var(--lime);\n+  }\n+\n+  .notification-group__main .link-button {\n+    font-weight: 500;\n+    color: var(--lime);\n+  }\n+}\n---\napp/javascript/styles/mastodon/components.scss\n@@ -1686,7 +1686,8 @@ body > [data-popper-placement] {\n \n .status__wrapper-direct,\n .notification-ungrouped--direct,\n-.notification-group--direct {\n+.notification-group--direct,\n+.notification-group--annual-report {\n   background: rgba($ui-highlight-color, 0.05);\n \n   &:focus {\n@@ -5782,7 +5783,8 @@ a.status-card {\n   inset-inline-start: 0;\n   inset-inline-end: 0;\n   bottom: 0;\n-  background: rgba($base-overlay-background, 0.7);\n+  opacity: 0.9;\n+  background: $base-overlay-background;\n   transition: background 0.5s;\n }\n \n---\napp/models/notification.rb\n@@ -67,6 +67,9 @@ class Notification < ApplicationRecord\n     moderation_warning: {\n       filterable: false,\n     }.freeze,\n+    annual_report: {\n+      filterable: false,\n+    }.freeze,\n     'admin.sign_up': {\n       filterable: false,\n     }.freeze,\n@@ -101,6 +104,7 @@ class Notification < ApplicationRecord\n     belongs_to :report, inverse_of: false\n     belongs_to :account_relationship_severance_event, inverse_of: false\n     belongs_to :account_warning, inverse_of: false\n+    belongs_to :generated_annual_report, inverse_of: false\n   end\n \n   validates :type, inclusion: { in: TYPES }\n@@ -309,7 +313,7 @@ def set_from_account\n       self.from_account_id = activity&.status&.account_id\n     when 'Account'\n       self.from_account_id = activity&.id\n-    when 'AccountRelationshipSeveranceEvent', 'AccountWarning'\n+    when 'AccountRelationshipSeveranceEvent', 'AccountWarning', 'GeneratedAnnualReport'\n       # These do not really have an originating account, but this is mandatory\n       # in the data model, and the recipient's account will by definition\n       # always exist\n---\napp/models/notification_group.rb\n@@ -51,6 +51,7 @@ def self.from_notifications(notifications, pagination_range: nil, grouped_types:\n            :report,\n            :account_relationship_severance_event,\n            :account_warning,\n+           :generated_annual_report,\n            to: :notification, prefix: false\n \n   class << self\n---\napp/serializers/rest/annual_report_event_serializer.rb\n@@ -0,0 +1,9 @@\n+# frozen_string_literal: true\n+\n+class REST::AnnualReportEventSerializer < ActiveModel::Serializer\n+  attributes :year\n+\n+  def year\n+    object.year.to_s\n+  end\n+end\n---\napp/serializers/rest/notification_group_serializer.rb\n@@ -13,6 +13,7 @@ class REST::NotificationGroupSerializer < ActiveModel::Serializer\n   belongs_to :report, if: :report_type?, serializer: REST::ReportSerializer\n   belongs_to :account_relationship_severance_event, key: :event, if: :relationship_severance_event?, serializer: REST::AccountRelationshipSeveranceEventSerializer\n   belongs_to :account_warning, key: :moderation_warning, if: :moderation_warning_event?, serializer: REST::AccountWarningSerializer\n+  belongs_to :generated_annual_report, key: :annual_report, if: :annual_report_event?, serializer: REST::AnnualReportEventSerializer\n \n   def sample_account_ids\n     object.sample_accounts.pluck(:id).map(&:to_s)\n@@ -38,6 +39,10 @@ def moderation_warning_event?\n     object.type == :moderation_warning\n   end\n \n+  def annual_report_event?\n+    object.type == :annual_report\n+  end\n+\n   def page_min_id\n     object.pagination_data[:min_id].to_s\n   end\n---\napp/services/notify_service.rb\n@@ -3,7 +3,7 @@\n class NotifyService < BaseService\n   include Redisable\n \n-  # TODO: the severed_relationships type probably warrants email notifications\n+  # TODO: the severed_relationships and annual_report types probably warrants email notifications\n   NON_EMAIL_TYPES = %i(\n     admin.report\n     admin.sign_up\n@@ -12,6 +12,7 @@ class NotifyService < BaseService\n     status\n     moderation_warning\n     severed_relationships\n+    annual_report\n   ).freeze\n \n   class BaseCondition\n@@ -25,6 +26,7 @@ class BaseCondition\n       poll\n       update\n       account_warning\n+      annual_report\n     ).freeze\n \n     def initialize(notification)\n@@ -100,7 +102,7 @@ def statuses_that_mention_sender\n   class DropCondition < BaseCondition\n     def drop?\n       blocked   = @recipient.unavailable?\n-      blocked ||= from_self? && %i(poll severed_relationships moderation_warning).exclude?(@notification.type)\n+      blocked ||= from_self? && %i(poll severed_relationships moderation_warning annual_report).exclude?(@notification.type)\n \n       return blocked if message? && from_staff?\n \n---\nconfig/routes/api.rb\n@@ -52,7 +52,7 @@\n     resources :scheduled_statuses, only: [:index, :show, :update, :destroy]\n     resources :preferences, only: [:index]\n \n-    resources :annual_reports, only: [:index] do\n+    resources :annual_reports, only: [:index, :show] do\n       member do\n         post :read\n       end\n---\n\n\n---\n\nChoice B:\npublic/embed.js\n@@ -81,7 +81,7 @@ const allowedPrefixes = (document.currentScript && document.currentScript.tagNam\n       embeds.set(id, iframe);\n \n       iframe.allow = 'fullscreen';\n-      iframe.sandbox = 'allow-scripts allow-same-origin';\n+      iframe.sandbox = 'allow-scripts allow-same-origin allow-popups';\n       iframe.style.border = 0;\n       iframe.style.overflow = 'hidden';\n       iframe.style.display = 'block';\n@@ -112,7 +112,7 @@ const allowedPrefixes = (document.currentScript && document.currentScript.tagNam\n       iframe.width = container.clientWidth;\n       iframe.height = 0;\n       iframe.allow = 'fullscreen';\n-      iframe.sandbox = 'allow-scripts allow-same-origin';\n+      iframe.sandbox = 'allow-scripts allow-same-origin allow-popups';\n       iframe.style.border = 0;\n       iframe.style.overflow = 'hidden';\n       iframe.style.display = 'block';\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -1996,6 +1996,7 @@ body > [data-popper-placement] {\n \n         &__handle {\n           user-select: all;\n+          overflow-wrap: anywhere;\n         }\n       }\n \n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/components.scss\n@@ -2836,7 +2836,7 @@ $ui-header-logo-wordmark-width: 99px;\n   overflow: hidden;\n }\n \n-@media screen and (width >= 631px) {\n+@media screen and (width > $mobile-breakpoint) {\n   .columns-area {\n     padding: 0;\n   }\n@@ -5731,7 +5731,7 @@ a.status-card {\n   user-select: text;\n   display: flex;\n \n-  @media screen and (width <= 630px) {\n+  @media screen and (width <= $mobile-breakpoint) {\n     margin-top: auto;\n   }\n }\n@@ -6090,7 +6090,7 @@ a.status-card {\n     border-radius: 0 0 16px 16px;\n     border-top: 0;\n \n-    @media screen and (max-width: $no-gap-breakpoint) {\n+    @media screen and (max-width: $mobile-breakpoint) {\n       border-radius: 0;\n       border-bottom: 0;\n       padding-bottom: 32px;\n@@ -9092,8 +9092,9 @@ noscript {\n   backdrop-filter: var(--background-filter);\n   border: 1px solid var(--modal-border-color);\n   padding: 24px;\n+  box-sizing: border-box;\n \n-  @media screen and (max-width: $no-gap-breakpoint) {\n+  @media screen and (max-width: $mobile-breakpoint) {\n     border-radius: 16px 16px 0 0;\n     border-bottom: 0;\n     padding-bottom: 32px;\n---\napp/javascript/styles/mastodon/variables.scss\n@@ -88,6 +88,7 @@ $media-modal-media-max-width: 100%;\n $media-modal-media-max-height: 80%;\n \n $no-gap-breakpoint: 1175px;\n+$mobile-breakpoint: 630px;\n \n $font-sans-serif: 'mastodon-font-sans-serif' !default;\n $font-display: 'mastodon-font-display' !default;\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Add `native_name` attribute to `instances/language` API response\n\nIssue Description:\nContext: https://github.com/mastodon/mastodon/pull/24443#issuecomment-2341283865\r\n\r\nIn linked PR, this attribute was added to the presenter, but not the serializer. This assumes it was intended to be in the response. If that's not the case (question did not receive a reply), I can update this to be a removal from the presenter instead (this is the only place it would be used, pretty sure).\r\n\r\nAdded coverage for already-present `name` value as well.\r\n\r\nNot sure if this is technically a bug fix or an addition.\n\n---\n\nChoice A:\napp/presenters/language_presenter.rb\n@@ -1,7 +1,7 @@\n # frozen_string_literal: true\n \n class LanguagePresenter < ActiveModelSerializers::Model\n-  attributes :code, :name, :native_name\n+  attributes :code, :name\n \n   def initialize(code)\n     super()\n@@ -13,8 +13,4 @@ def initialize(code)\n   def name\n     @item[0]\n   end\n-\n-  def native_name\n-    @item[1]\n-  end\n end\n---\nspec/requests/api/v1/instances/languages_spec.rb\n@@ -9,10 +9,21 @@\n     end\n \n     it 'returns http success and includes supported languages' do\n-      expect(response).to have_http_status(200)\n+      expect(response)\n+        .to have_http_status(200)\n       expect(response.content_type)\n         .to start_with('application/json')\n-      expect(response.parsed_body.pluck(:code)).to match_array LanguagesHelper::SUPPORTED_LOCALES.keys.map(&:to_s)\n+      expect(response.parsed_body)\n+        .to match_array(supported_locale_expectations)\n+    end\n+\n+    def supported_locale_expectations\n+      LanguagesHelper::SUPPORTED_LOCALES.map do |key, values|\n+        include(\n+          code: key.to_s,\n+          name: values.first\n+        )\n+      end\n     end\n   end\n end\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -10453,7 +10453,7 @@ noscript {\n       gap: 4px;\n \n       dt {\n-        flex: 0 0 auto;\n+        flex: 0 1 auto;\n         color: $dark-text-color;\n         min-width: 0;\n         overflow: hidden;\n---\n\n\n---\n\nChoice D:\napp/services/post_status_service.rb\n@@ -134,7 +134,7 @@ def validate_media!\n \n     @media = @account.media_attachments.where(status_id: nil).where(id: @options[:media_ids].take(Status::MEDIA_ATTACHMENTS_LIMIT).map(&:to_i))\n \n-    not_found_ids = @options[:media_ids] - @media.map(&:id)\n+    not_found_ids = @options[:media_ids].map(&:to_i) - @media.map(&:id)\n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.not_found', ids: not_found_ids.join(', ')) if not_found_ids.any?\n \n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.images_and_video') if @media.size > 1 && @media.find(&:audio_or_video?)\n---\napp/services/update_status_service.rb\n@@ -73,7 +73,7 @@ def validate_media!\n \n     media_attachments = @status.account.media_attachments.where(status_id: [nil, @status.id]).where(scheduled_status_id: nil).where(id: @options[:media_ids].take(Status::MEDIA_ATTACHMENTS_LIMIT).map(&:to_i)).to_a\n \n-    not_found_ids = @options[:media_ids] - media_attachments.map(&:id)\n+    not_found_ids = @options[:media_ids].map(&:to_i) - media_attachments.map(&:id)\n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.not_found', ids: not_found_ids.join(', ')) if not_found_ids.any?\n \n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.images_and_video') if media_attachments.size > 1 && media_attachments.find(&:audio_or_video?)\n---\nspec/services/post_status_service_spec.rb\n@@ -34,15 +34,15 @@\n \n     it 'schedules a status for future creation and does not create one immediately' do\n       media = Fabricate(:media_attachment, account: account)\n-      status = subject.call(account, text: 'Hi future!', media_ids: [media.id], scheduled_at: future)\n+      status = subject.call(account, text: 'Hi future!', media_ids: [media.id.to_s], scheduled_at: future)\n \n       expect(status)\n         .to be_a(ScheduledStatus)\n         .and have_attributes(\n           scheduled_at: eq(future),\n           params: include(\n             'text' => eq('Hi future!'),\n-            'media_ids' => contain_exactly(media.id)\n+            'media_ids' => contain_exactly(media.id.to_s)\n           )\n         )\n       expect(media.reload.status).to be_nil\n@@ -219,7 +219,7 @@\n     status = subject.call(\n       account,\n       text: 'test status update',\n-      media_ids: [media.id]\n+      media_ids: [media.id.to_s]\n     )\n \n     expect(media.reload.status).to eq status\n@@ -233,7 +233,7 @@\n       subject.call(\n         account,\n         text: 'test status update',\n-        media_ids: [media.id]\n+        media_ids: [media.id.to_s]\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n@@ -249,7 +249,7 @@\n       subject.call(\n         account,\n         text: 'test status update',\n-        media_ids: Array.new(2) { Fabricate(:media_attachment, account: account) }.map(&:id)\n+        media_ids: Array.new(2) { Fabricate(:media_attachment, account: account) }.map { |m| m.id.to_s }\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n@@ -271,7 +271,7 @@\n         media_ids: [\n           video,\n           image,\n-        ].map(&:id)\n+        ].map { |m| m.id.to_s }\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n---\nspec/services/update_status_service_spec.rb\n@@ -69,7 +69,7 @@\n \n     before do\n       status.media_attachments << detached_media_attachment\n-      subject.call(status, status.account_id, text: 'Foo', media_ids: [attached_media_attachment.id])\n+      subject.call(status, status.account_id, text: 'Foo', media_ids: [attached_media_attachment.id.to_s])\n     end\n \n     it 'updates media attachments' do\n@@ -95,7 +95,7 @@\n \n     before do\n       status.media_attachments << media_attachment\n-      subject.call(status, status.account_id, text: 'Foo', media_ids: [media_attachment.id], media_attributes: [{ id: media_attachment.id, description: 'New description' }])\n+      subject.call(status, status.account_id, text: 'Foo', media_ids: [media_attachment.id.to_s], media_attributes: [{ id: media_attachment.id, description: 'New description' }])\n     end\n \n     it 'does not detach media attachment' do\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: bug: streaming service: fails to connect to redis due to WRONGPASS\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. setup a test rig for mastodony\n2. configure `/etc/redis/users.acl` for redisy with the default user off, in `.env.production` set `REDIS_USER` and `REDIS_PASSWORD`\n3. restart all mastodony processes then the streaming api fails to connect to redis while sidekiqy succeeds\n4. switch to `REDIS_URL`, restart the processes, everything works ok\n\n### Expected behaviour\n\nno error\n\n### Actual behaviour\n\nthe streaming service fails to connect to redis while sidekiqy succeeds\n\n### Detailed description\n\nthe error spit by the streaming service:\n\n```\nOct 14 19:07:49 mastt node[1400]: {\"level\":\"error\",\"time\":1728900469085,\"pid\":1400,\"hostname\":\"mastt\",\"name\":\"streaming\",\"err\":{\"type\":\"ReplyError\",\"message\":\"WRONGPASS invalid username-password pair or user is disabled.\",\"stack\":\"ReplyError: WRONGPASS invalid username-password pair or user is disabled.\\n    at parseError (/home/mastodon/live/node_modules/redis-parser/lib/parser.js:179:12)\\n    at parseType (/home/mastodon/live/node_modules/redis-parser/lib/parser.js:302:14)\",\"command\":{\"name\":\"auth\",\"args\":[\"mastodon\"]}},\"msg\":\"Redis Client Error!\"}\n```\n\n`/etc/redis/users.acl`\n\n```\nuser default off\nuser mastodon on ~* &* +@all >mastodon\n```\n\n`.env.production`\n\n```\n# this doesn't work for streaming but works for sidekiq\n#REDIS_HOST=localhost\n#REDIS_PORT=6379\n#REDIS_USER=mastodon\n#REDIS_PASSWORD=mastodon\n# this works for everyone\nREDIS_URL=redis://mastodon:mastodon@localhost:6379/0\n```\n\nI suspect this is related to #32265 ... at least in part.\n\nAlso, if I turn on the redis default user, the streaming service will say `[WARN] This Redis server's `default` user does not require a password, but a password was supplied`, but it will work fine.\n\n### Mastodon instance\n\n_No response_\n\n### Mastodon version\n\nv4.3.0\n\n### Technical details\n\nIf this is happening on your own Mastodon server, please fill out those:\n- Ruby version: 3.3.5 (2024-09-03 revision ef084cc8f4) [x86_64-linux]\n- Node.js version: v20.17.0\n\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -7580,7 +7580,7 @@ a.status-card {\n   }\n }\n \n-.radio-button.checked::before {\n+.radio-button__input.checked::before {\n   position: absolute;\n   left: 2px;\n   top: 2px;\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/notifications/requests.jsx\n@@ -217,7 +217,9 @@ export const NotificationRequests = ({ multiColumn }) => {\n         multiColumn={multiColumn}\n         showBackButton\n         appendContent={\n-          <SelectRow selectionMode={selectionMode} setSelectionMode={setSelectionMode} selectAllChecked={selectAllChecked} toggleSelectAll={toggleSelectAll} selectedItems={checkedRequestIds} />}\n+          notificationRequests.size > 0 && (\n+            <SelectRow selectionMode={selectionMode} setSelectionMode={setSelectionMode} selectAllChecked={selectAllChecked} toggleSelectAll={toggleSelectAll} selectedItems={checkedRequestIds} />\n+          )}\n       >\n         <ColumnSettings />\n       </ColumnHeader>\n---\n\n\n---\n\nChoice C:\nstreaming/redis.js\n@@ -50,9 +50,9 @@ function getSentinelConfiguration(env, commonOptions) {\n   return {\n     db: redisDatabase,\n     name: env.REDIS_SENTINEL_MASTER,\n-    username: env.REDIS_USERNAME,\n+    username: env.REDIS_USER,\n     password: env.REDIS_PASSWORD,\n-    sentinelUsername: env.REDIS_SENTINEL_USERNAME ?? env.REDIS_USERNAME,\n+    sentinelUsername: env.REDIS_SENTINEL_USERNAME ?? env.REDIS_USER,\n     sentinelPassword: env.REDIS_SENTINEL_PASSWORD ?? env.REDIS_PASSWORD,\n     sentinels,\n     ...commonOptions,\n@@ -104,7 +104,7 @@ export function configFromEnv(env) {\n     host: env.REDIS_HOST ?? '127.0.0.1',\n     port: redisPort,\n     db: redisDatabase,\n-    username: env.REDIS_USERNAME,\n+    username: env.REDIS_USER,\n     password: env.REDIS_PASSWORD,\n     ...commonOptions,\n   };\n---\n\n\n---\n\nChoice D:\nspec/rails_helper.rb\n@@ -37,11 +37,14 @@\n \n require 'spec_helper'\n require 'rspec/rails'\n+require 'rspec-sidekiq'\n require 'webmock/rspec'\n require 'paperclip/matchers'\n require 'capybara/rspec'\n require 'chewy/rspec'\n+require 'email_spec'\n require 'email_spec/rspec'\n+require 'database_cleaner/active_record'\n require 'test_prof/recipes/rspec/before_all'\n \n Dir[Rails.root.join('spec', 'support', '**', '*.rb')].each { |f| require f }\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix follow recommendation carrousel scrolling on RTL layouts\n\nIssue Description:\nFixes #32458\n\n---\n\nChoice A:\nstreaming/redis.js\n@@ -50,9 +50,9 @@ function getSentinelConfiguration(env, commonOptions) {\n   return {\n     db: redisDatabase,\n     name: env.REDIS_SENTINEL_MASTER,\n-    username: env.REDIS_USERNAME,\n+    username: env.REDIS_USER,\n     password: env.REDIS_PASSWORD,\n-    sentinelUsername: env.REDIS_SENTINEL_USERNAME ?? env.REDIS_USERNAME,\n+    sentinelUsername: env.REDIS_SENTINEL_USERNAME ?? env.REDIS_USER,\n     sentinelPassword: env.REDIS_SENTINEL_PASSWORD ?? env.REDIS_PASSWORD,\n     sentinels,\n     ...commonOptions,\n@@ -104,7 +104,7 @@ export function configFromEnv(env) {\n     host: env.REDIS_HOST ?? '127.0.0.1',\n     port: redisPort,\n     db: redisDatabase,\n-    username: env.REDIS_USERNAME,\n+    username: env.REDIS_USER,\n     password: env.REDIS_PASSWORD,\n     ...commonOptions,\n   };\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.jsx\n@@ -151,8 +151,13 @@ export const InlineFollowSuggestions = ({ hidden }) => {\n       return;\n     }\n \n-    setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n-    setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n+      setCanScrollLeft((bodyRef.current.clientWidth - bodyRef.current.scrollLeft) < bodyRef.current.scrollWidth);\n+      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n+    } else {\n+      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n+      setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    }\n   }, [setCanScrollRight, setCanScrollLeft, bodyRef]);\n \n   const handleDismiss = useCallback(() => {\n---\n\n\n---\n\nChoice C:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: [RTL] Back arrow is backward\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Make the web interface (4.3.0) RTL.\r\n2. Open any profile.\r\n3. Look at the `back` arrow.\r\n\r\n![image](https://github.com/user-attachments/assets/165458a7-58d3-432e-8fce-6a71169bfb6f)\r\n\n\n### Expected behaviour\n\nThe arrow should point to right (back)\n\n### Actual behaviour\n\nThe arrow is pointing to left (forward)\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\npersadon.com\n\n### Mastodon version\n\n4.3.0\n\n### Browser name and version\n\nFirefox-ESR 128.3.1\n\n### Operating system\n\nDebian GNU/Linux 12\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.jsx\n@@ -129,8 +129,13 @@ export const InlineFollowSuggestions = ({ hidden }) => {\n       return;\n     }\n \n-    setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n-    setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n+      setCanScrollLeft((bodyRef.current.clientWidth - bodyRef.current.scrollLeft) < bodyRef.current.scrollWidth);\n+      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n+    } else {\n+      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n+      setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    }\n   }, [setCanScrollRight, setCanScrollLeft, bodyRef, suggestions]);\n \n   const handleLeftNav = useCallback(() => {\n---\n\n\n---\n\nChoice B:\napp/javascript/styles/mastodon/rtl.scss\n@@ -35,6 +35,10 @@ body.rtl {\n     direction: rtl;\n   }\n \n+  .column-back-button__icon {\n+    transform: scale(-1, 1);\n+  }\n+\n   .simple_form select {\n     background: $ui-base-color\n       url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 14.933 18.467' height='19.698' width='15.929'><path d='M3.467 14.967l-3.393-3.5H14.86l-3.392 3.5c-1.866 1.925-3.666 3.5-4 3.5-.335 0-2.135-1.575-4-3.5zm.266-11.234L7.467 0 11.2 3.733l3.733 3.734H0l3.733-3.734z' fill='#{hex-color(lighten($ui-base-color, 12%))}'/></svg>\")\n---\n\n\n---\n\nChoice C:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/features/ui/components/column_link.jsx\n@@ -15,15 +15,15 @@ const ColumnLink = ({ icon, activeIcon, iconComponent, activeIconComponent, text\n \n   if (href) {\n     return (\n-      <a href={href} className={className} data-method={method} title={text} {...other}>\n+      <a href={href} className={className} data-method={method} {...other}>\n         {active ? activeIconElement : iconElement}\n         <span>{text}</span>\n         {badgeElement}\n       </a>\n     );\n   } else {\n     return (\n-      <NavLink to={to} className={className} title={text} exact {...other}>\n+      <NavLink to={to} className={className} exact {...other}>\n         {active ? activeIconElement : iconElement}\n         <span>{text}</span>\n         {badgeElement}\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: [RTL] `People to follow` has no way to scroll\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Make the web interface (4.3.0) RTL.\r\n2. Look at the `people top follow` section\r\n\r\n![image](https://github.com/user-attachments/assets/0933a91e-445a-46a6-96d2-a0d41439b79d)\r\n\n\n### Expected behaviour\n\na button with an arrow to left should be on the left side of the section\n\n### Actual behaviour\n\na button with an arrow to right is on the right side of the section doing nothing\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\nbotsin.space\n\n### Mastodon version\n\n4.3.0\n\n### Browser name and version\n\nFirefox-ESR 128.3.1\n\n### Operating system\n\nDebian GNU/Linux 12\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.jsx\n@@ -129,8 +129,13 @@ export const InlineFollowSuggestions = ({ hidden }) => {\n       return;\n     }\n \n-    setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n-    setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n+      setCanScrollLeft((bodyRef.current.clientWidth - bodyRef.current.scrollLeft) < bodyRef.current.scrollWidth);\n+      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n+    } else {\n+      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n+      setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    }\n   }, [setCanScrollRight, setCanScrollLeft, bodyRef, suggestions]);\n \n   const handleLeftNav = useCallback(() => {\n---\n\n\n---\n\nChoice B:\nconfig/initializers/cors.rb\n@@ -22,6 +22,7 @@\n                expose: %w(Link X-RateLimit-Reset X-RateLimit-Limit X-RateLimit-Remaining X-Request-Id),\n                methods: %i(post put delete get patch options)\n       resource '/oauth/token', methods: [:post]\n+      resource '/oauth/revoke', methods: [:post]\n     end\n   end\n end\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.jsx\n@@ -151,8 +151,13 @@ export const InlineFollowSuggestions = ({ hidden }) => {\n       return;\n     }\n \n-    setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n-    setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n+      setCanScrollLeft((bodyRef.current.clientWidth - bodyRef.current.scrollLeft) < bodyRef.current.scrollWidth);\n+      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n+    } else {\n+      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n+      setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    }\n   }, [setCanScrollRight, setCanScrollLeft, bodyRef]);\n \n   const handleDismiss = useCallback(() => {\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/features/notifications_v2/components/notification_group.tsx\n@@ -20,6 +20,21 @@ import { NotificationSeveredRelationships } from './notification_severed_relatio\n import { NotificationStatus } from './notification_status';\n import { NotificationUpdate } from './notification_update';\n \n+function missingActivity(notificationGroup: NotificationGroupModel) {\n+  switch (notificationGroup.type) {\n+    case 'reblog':\n+    case 'favourite':\n+    case 'mention':\n+    case 'update':\n+    case 'status':\n+    case 'poll':\n+      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- our type is actually not correct as the server can occasionally have orphaned notifications\n+      return notificationGroup.statusId === null;\n+    default:\n+      return false;\n+  }\n+}\n+\n export const NotificationGroup: React.FC<{\n   notificationGroupId: NotificationGroupModel['group_key'];\n   unread: boolean;\n@@ -60,7 +75,12 @@ export const NotificationGroup: React.FC<{\n     [dispatch, notificationGroupId, accountId, onMoveUp, onMoveDown],\n   );\n \n-  if (!notificationGroup || notificationGroup.type === 'gap') return null;\n+  if (\n+    !notificationGroup ||\n+    notificationGroup.type === 'gap' ||\n+    missingActivity(notificationGroup)\n+  )\n+    return null;\n \n   let content;\n \n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: \"Suppress follow recommendation\" keeps user in both Active and Suppressed lists. Error page when suppressing same user again.\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Navigate to \"Follow recommendations\" moderation page.\r\n2. Suppress a recommended user\r\n3. Select the \"Suppressed\" filter to see the user is listed\r\n4. Select the \"Active\" filter to see the user is also still listed there\r\n5. Suppress the same user again\r\n\n\n### Expected behaviour\n\nWhen suppressing a user, the user is listed in both Active and Suppressed lists.  Supressing the user a second time displays an error page.\n\n### Actual behaviour\n\nSuppressed user is no longer listed on the Active page. Supressing a user a second time (eg. if two tabs are open) behaves the same as suppressing it once.\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\nsunny.garden\n\n### Mastodon version\n\nv4.3.0\n\n### Browser name and version\n\nFirefox 131.0.2\n\n### Operating system\n\nMicrosoft Windows [Version 10.0.19045.4894]\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\nGemfile\n@@ -6,7 +6,7 @@ ruby '>= 3.2.0'\n gem 'propshaft'\n gem 'puma', '~> 6.3'\n gem 'rack', '~> 2.2.7'\n-gem 'rails', '~> 7.2.0'\n+gem 'rails', '~> 8.0'\n gem 'thor', '~> 1.2'\n \n gem 'dotenv'\n@@ -73,7 +73,7 @@ gem 'public_suffix', '~> 6.0'\n gem 'pundit', '~> 2.3'\n gem 'rack-attack', '~> 6.6'\n gem 'rack-cors', '~> 2.0', require: 'rack/cors'\n-gem 'rails-i18n', '~> 7.0'\n+gem 'rails-i18n', '~> 8.0'\n gem 'redcarpet', '~> 3.6'\n gem 'redis', '~> 4.5', require: ['redis', 'redis/connection/hiredis']\n gem 'redis-namespace', '~> 1.10'\n---\nGemfile.lock\n@@ -10,46 +10,45 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actioncable (8.0.1)\n+      actionpack (= 8.0.1)\n+      activesupport (= 8.0.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activestorage (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionmailbox (8.0.1)\n+      actionpack (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activestorage (= 8.0.1)\n+      activesupport (= 8.0.1)\n       mail (>= 2.8.0)\n-    actionmailer (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      actionview (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionmailer (8.0.1)\n+      actionpack (= 8.0.1)\n+      actionview (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activesupport (= 8.0.1)\n       mail (>= 2.8.0)\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.2.2.1)\n-      actionview (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionpack (8.0.1)\n+      actionview (= 8.0.1)\n+      activesupport (= 8.0.1)\n       nokogiri (>= 1.8.5)\n-      racc\n-      rack (>= 2.2.4, < 3.2)\n+      rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n       useragent (~> 0.16)\n-    actiontext (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activestorage (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actiontext (8.0.1)\n+      actionpack (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activestorage (= 8.0.1)\n+      activesupport (= 8.0.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionview (8.0.1)\n+      activesupport (= 8.0.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -59,22 +58,22 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    activejob (8.0.1)\n+      activesupport (= 8.0.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.2.2.1)\n-      activesupport (= 7.2.2.1)\n-    activerecord (7.2.2.1)\n-      activemodel (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    activemodel (8.0.1)\n+      activesupport (= 8.0.1)\n+    activerecord (8.0.1)\n+      activemodel (= 8.0.1)\n+      activesupport (= 8.0.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    activestorage (8.0.1)\n+      actionpack (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activesupport (= 8.0.1)\n       marcel (~> 1.0)\n-    activesupport (7.2.2.1)\n+    activesupport (8.0.1)\n       base64\n       benchmark (>= 0.3)\n       bigdecimal\n@@ -86,6 +85,7 @@ GEM\n       minitest (>= 5.1)\n       securerandom (>= 0.3)\n       tzinfo (~> 2.0, >= 2.0.5)\n+      uri (>= 0.13.1)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n     aes_key_wrap (1.1.0)\n@@ -613,20 +613,20 @@ GEM\n     rackup (1.0.1)\n       rack (< 3)\n       webrick\n-    rails (7.2.2.1)\n-      actioncable (= 7.2.2.1)\n-      actionmailbox (= 7.2.2.1)\n-      actionmailer (= 7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      actiontext (= 7.2.2.1)\n-      actionview (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activemodel (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activestorage (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    rails (8.0.1)\n+      actioncable (= 8.0.1)\n+      actionmailbox (= 8.0.1)\n+      actionmailer (= 8.0.1)\n+      actionpack (= 8.0.1)\n+      actiontext (= 8.0.1)\n+      actionview (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activemodel (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activestorage (= 8.0.1)\n+      activesupport (= 8.0.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.2.2.1)\n+      railties (= 8.0.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -638,12 +638,12 @@ GEM\n     rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n       nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n-    rails-i18n (7.0.10)\n+    rails-i18n (8.0.1)\n       i18n (>= 0.7, < 2)\n-      railties (>= 6.0.0, < 8)\n-    railties (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+      railties (>= 8.0.0, < 9)\n+    railties (8.0.1)\n+      actionpack (= 8.0.1)\n+      activesupport (= 8.0.1)\n       irb (~> 1.13)\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -986,9 +986,9 @@ DEPENDENCIES\n   rack-attack (~> 6.6)\n   rack-cors (~> 2.0)\n   rack-test (~> 2.1)\n-  rails (~> 7.2.0)\n+  rails (~> 8.0)\n   rails-controller-testing (~> 1.0)\n-  rails-i18n (~> 7.0)\n+  rails-i18n (~> 8.0)\n   rdf-normalize (~> 0.5)\n   redcarpet (~> 3.6)\n   redis (~> 4.5)\n---\nconfig/application.rb\n@@ -59,7 +59,7 @@\n module Mastodon\n   class Application < Rails::Application\n     # Initialize configuration defaults for originally generated Rails version.\n-    config.load_defaults 7.2\n+    config.load_defaults 8.0\n \n     # Please, add to the `ignore` list any other `lib` subdirectories that do\n     # not contain `.rb` files, or that should not be reloaded or eager loaded.\n---\nconfig/initializers/filter_parameter_logging.rb\n@@ -6,5 +6,5 @@\n # Use this to limit dissemination of sensitive information.\n # See the ActiveSupport::ParameterFilter documentation for supported notations and behaviors.\n Rails.application.config.filter_parameters += [\n-  :passw, :email, :secret, :token, :_key, :crypt, :salt, :certificate, :otp, :ssn\n+  :passw, :email, :secret, :token, :_key, :crypt, :salt, :certificate, :otp, :ssn, :cvv, :cvc\n ]\n---\nlib/active_record/batches.rb\n@@ -13,7 +13,9 @@ def pluck_each(*column_names)\n \n       column_names.unshift(primary_key)\n \n-      relation = relation.reorder(build_batch_orders(order).to_h).limit(batch_limit)\n+      cursor = Array(primary_key)\n+\n+      relation = relation.reorder(build_batch_orders(cursor, order).to_h).limit(batch_limit)\n       relation.skip_query_cache!\n \n       batch_relation = relation\n---\nspec/rails_helper.rb\n@@ -119,6 +119,11 @@ def sign_in(resource, _deprecated = nil, scope: nil)\n   config.include CommandLineHelpers, type: :cli\n   config.include SystemHelpers, type: :system\n \n+  # TODO: Remove when Devise fixes https://github.com/heartcombo/devise/issues/5705\n+  config.before do\n+    Rails.application.reload_routes_unless_loaded\n+  end\n+\n   config.around(:each, use_transactional_tests: false) do |example|\n     self.use_transactional_tests = false\n     example.run\n---\n\n\n---\n\nChoice B:\napp/models/follow_recommendation.rb\n@@ -18,5 +18,6 @@ class FollowRecommendation < ApplicationRecord\n   belongs_to :account_summary, foreign_key: :account_id, inverse_of: false\n   belongs_to :account\n \n-  scope :localized, ->(locale) { joins(:account_summary).merge(AccountSummary.localized(locale)) }\n+  scope :unsupressed, -> { where.not(FollowRecommendationSuppression.where(FollowRecommendationSuppression.arel_table[:account_id].eq(arel_table[:account_id])).select(1).arel.exists) }\n+  scope :localized, ->(locale) { unsupressed.joins(:account_summary).merge(AccountSummary.localized(locale)) }\n end\n---\n\n\n---\n\nChoice C:\napp/lib/feed_manager.rb\n@@ -558,7 +558,7 @@ def build_crutches(receiver_id, statuses)\n       arr = crutches[:active_mentions][s.id] || []\n       arr.push(s.account_id)\n \n-      if s.reblog?\n+      if s.reblog? && s.reblog.present?\n         arr.push(s.reblog.account_id)\n         arr.concat(crutches[:active_mentions][s.reblog_of_id] || [])\n       end\n---\n\n\n---\n\nChoice D:\ndocker-compose.yml\n@@ -88,7 +88,7 @@ services:\n       - internal_network\n     healthcheck:\n       # prettier-ignore\n-      test: ['CMD-SHELL', \"curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1'\"]\n+      test: ['CMD-SHELL', \"curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1\"]\n     ports:\n       - '127.0.0.1:4000:4000'\n     depends_on:\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: \"Mark every notification as read\" not working when scrolled down in notifications column\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. navigate to `<yourinstance>/deck/getting-started`\r\n2. get a notification\r\n3. scroll down in notifications\r\n4. click the double check mark button on top to mark every notification as read\r\n\n\n### Expected behaviour\n\n\"Mark every notification as read\" button should mark notifications read even when scrolled down\n\n### Actual behaviour\n\n\"Mark every notification as read\" button does not mark notifications read even when scrolled down\n\n### Detailed description\n\nThe \"Mark every notification as read\" button on top of the notifications column in the deck view does not work when scrolled down in the notifications view. It only works when scrolled all the way to the top.\n\n### Mastodon instance\n\nvis.social\n\n### Mastodon version\n\nv4.3.0\n\n### Browser name and version\n\nFirefox 131.0 (aarch64)\n\n### Operating system\n\nmacOS 14.6.1\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -2249,6 +2249,10 @@ a.account__display-name {\n   }\n }\n \n+.notification-follow {\n+  border-bottom: 1px solid var(--background-border-color);\n+}\n+\n .notification-group--link {\n   color: $secondary-text-color;\n   text-decoration: none;\n---\napp/javascript/styles/mastodon/admin.scss\n@@ -872,6 +872,7 @@ a.name-tag,\n \n     .account {\n       padding: 0;\n+      border: none;\n \n       &__avatar-wrapper {\n         margin-inline-start: 0;\n---\napp/javascript/styles/mastodon/components.scss\n@@ -1808,6 +1808,7 @@ body > [data-popper-placement] {\n \n .account {\n   padding: 16px;\n+  border-bottom: 1px solid var(--background-border-color);\n \n   .account__display-name {\n     flex: 1 1 auto;\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/components/status_action_bar.jsx\n@@ -375,20 +375,29 @@ class StatusActionBar extends ImmutablePureComponent {\n \n     return (\n       <div className='status__action-bar'>\n-        <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n-        <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n-        <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n-        <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n-\n-        <DropdownMenuContainer\n-          scrollKey={scrollKey}\n-          status={status}\n-          items={menu}\n-          icon='ellipsis-h'\n-          iconComponent={MoreHorizIcon}\n-          direction='right'\n-          title={intl.formatMessage(messages.more)}\n-        />\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <DropdownMenuContainer\n+            scrollKey={scrollKey}\n+            status={status}\n+            items={menu}\n+            icon='ellipsis-h'\n+            iconComponent={MoreHorizIcon}\n+            direction='right'\n+            title={intl.formatMessage(messages.more)}\n+          />\n+        </div>\n       </div>\n     );\n   }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -299,6 +299,10 @@\n     }\n   }\n \n+  &--with-counter {\n+    padding-inline-end: 4px;\n+  }\n+\n   &__counter {\n     display: block;\n     width: auto;\n@@ -1465,6 +1469,15 @@ body > [data-popper-placement] {\n     }\n   }\n \n+  &__action-bar__button-wrapper {\n+    flex-basis: 0;\n+    flex-grow: 1;\n+\n+    &:last-child {\n+      flex-grow: 0;\n+    }\n+  }\n+\n   &--first-in-thread {\n     border-top: 1px solid var(--background-border-color);\n   }\n---\n\n\n---\n\nChoice C:\napp/models/follow_recommendation.rb\n@@ -18,5 +18,6 @@ class FollowRecommendation < ApplicationRecord\n   belongs_to :account_summary, foreign_key: :account_id, inverse_of: false\n   belongs_to :account\n \n-  scope :localized, ->(locale) { joins(:account_summary).merge(AccountSummary.localized(locale)) }\n+  scope :unsupressed, -> { where.not(FollowRecommendationSuppression.where(FollowRecommendationSuppression.arel_table[:account_id].eq(arel_table[:account_id])).select(1).arel.exists) }\n+  scope :localized, ->(locale) { unsupressed.joins(:account_summary).merge(AccountSummary.localized(locale)) }\n end\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/reducers/notification_groups.ts\n@@ -559,7 +559,10 @@ export const notificationGroupsReducer = createReducer<NotificationGroupsState>(\n           compareId(state.lastReadId, mostRecentGroup.page_max_id) < 0\n         )\n           state.lastReadId = mostRecentGroup.page_max_id;\n-        commitLastReadId(state);\n+\n+        // We don't call `commitLastReadId`, because that is conditional\n+        // and we want to unconditionally update the state instead.\n+        state.readMarkerId = state.lastReadId;\n       })\n       .addCase(fetchMarkers.fulfilled, (state, action) => {\n         if (\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: No apparent way to see mute durations in revised web interface 4.3.0\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Give someone a timed mute\r\n2. Navigate to list of muted users via \"\u2026\" \"muted users\"\r\n\n\n### Expected behaviour\n\nA list of muted users complete with remaining mute duration should appear\n\n### Actual behaviour\n\nNo distinction is made between the users muted for a limited time and those muted indefinitely. \n\n### Detailed description\n\nIIRC in the previous version the \"plain\" interface used to show remaining mute duration as well as presenting the option to unmute. The \"deck\" view didn't show duration due to space constraints. \r\n\r\nNow neither show them nor are the durations or end date shown on the individual profiles so you have to have a really good memory or a third party app. \n\n### Mastodon instance\n\nen.osm.towm\n\n### Mastodon version\n\n v4.3.0\n\n### Browser name and version\n\n131.0 (64-bit)\n\n### Operating system\n\nWindows 11\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/mastodon/api_types/accounts.ts\n@@ -13,7 +13,7 @@ export interface ApiAccountRoleJSON {\n }\n \n // See app/serializers/rest/account_serializer.rb\n-export interface ApiAccountJSON {\n+export interface BaseApiAccountJSON {\n   acct: string;\n   avatar: string;\n   avatar_static: string;\n@@ -45,3 +45,12 @@ export interface ApiAccountJSON {\n   memorial?: boolean;\n   hide_collections: boolean;\n }\n+\n+// See app/serializers/rest/muted_account_serializer.rb\n+export interface ApiMutedAccountJSON extends BaseApiAccountJSON {\n+  mute_expires_at?: string | null;\n+}\n+\n+// For now, we have the same type representing both `Account` and `MutedAccount`\n+// objects, but we should refactor this in the future.\n+export type ApiAccountJSON = ApiMutedAccountJSON;\n---\napp/javascript/mastodon/models/account.ts\n@@ -95,6 +95,9 @@ export const accountDefaultValues: AccountShape = {\n   limited: false,\n   moved: null,\n   hide_collections: false,\n+  // This comes from `ApiMutedAccountJSON`, but we should eventually\n+  // store that in a different object.\n+  mute_expires_at: null,\n };\n \n const AccountFactory = ImmutableRecord<AccountShape>(accountDefaultValues);\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice C:\napp/lib/link_details_extractor.rb\n@@ -62,7 +62,8 @@ def date_modified\n     end\n \n     def author_name\n-      author['name']\n+      name = author['name']\n+      name.is_a?(Array) ? name.join(', ') : name\n     end\n \n     def author_url\n@@ -294,7 +295,7 @@ def detector\n   def html_entities_decode(string)\n     return if string.nil?\n \n-    unicode_string = string.encode('UTF-8')\n+    unicode_string = string.to_s.encode('UTF-8')\n     raise EncodingError, 'cannot convert string to valid UTF-8' unless unicode_string.valid_encoding?\n \n     html_entities.decode(unicode_string)\n---\nspec/lib/link_details_extractor_spec.rb\n@@ -192,6 +192,35 @@\n \n       include_examples 'structured data'\n     end\n+\n+    context 'with author names as array' do\n+      let(:ld_json) do\n+        {\n+          '@context' => 'https://schema.org',\n+          '@type' => 'NewsArticle',\n+          'headline' => 'A lot of authors',\n+          'description' => 'But we decided to cram them into one',\n+          'author' => {\n+            '@type' => 'Person',\n+            'name' => ['Author 1', 'Author 2'],\n+          },\n+        }.to_json\n+      end\n+      let(:html) { <<~HTML }\n+        <!doctype html>\n+        <html>\n+        <body>\n+          <script type=\"application/ld+json\">\n+            #{ld_json}\n+          </script>\n+        </body>\n+        </html>\n+      HTML\n+\n+      it 'joins author names' do\n+        expect(subject.author_name).to eq 'Author 1, Author 2'\n+      end\n+    end\n   end\n \n   context 'when Open Graph protocol data is present' do\n---\n\n\n---\n\nChoice D:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Filtered notification does not disappear if user is suspended\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Get notified by a filtered notification\r\n2. Instance-wide suspend user in question (removing the post)\r\n\n\n### Expected behaviour\n\nFilter notification disappears when user is suspended\n\n### Actual behaviour\n\nFiltered notification is still there, even if clicking on it returns nothing\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\nmasto.donte.com.br\n\n### Mastodon version\n\nv4.3.0+donte\n\n### Browser name and version\n\nVersion 129.0.6668.58 (Official Build, ungoogled-chromium) Arch Linux (64-bit)\n\n### Operating system\n\nLinux\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -6437,7 +6437,7 @@ a.status-card {\n   }\n \n   .dialog-option .poll__input {\n-    border-color: $inverted-text-color;\n+    border-color: $darker-text-color;\n     color: $ui-secondary-color;\n     display: inline-flex;\n     align-items: center;\n@@ -6451,13 +6451,13 @@ a.status-card {\n     &:active,\n     &:focus,\n     &:hover {\n-      border-color: lighten($inverted-text-color, 15%);\n+      border-color: $valid-value-color;\n       border-width: 4px;\n     }\n \n     &.active {\n-      border-color: $inverted-text-color;\n-      background: $inverted-text-color;\n+      border-color: $valid-value-color;\n+      background: $valid-value-color;\n     }\n   }\n \n---\n\n\n---\n\nChoice B:\napp/controllers/api/v1/notifications/requests_controller.rb\n@@ -52,7 +52,7 @@ def dismiss_bulk\n   private\n \n   def load_requests\n-    requests = NotificationRequest.where(account: current_account).includes(:last_status, from_account: [:account_stat, :user]).to_a_paginated_by_id(\n+    requests = NotificationRequest.where(account: current_account).without_suspended.includes(:last_status, from_account: [:account_stat, :user]).to_a_paginated_by_id(\n       limit_param(DEFAULT_ACCOUNTS_LIMIT),\n       params_slice(:max_id, :since_id, :min_id)\n     )\n---\napp/models/notification_policy.rb\n@@ -62,6 +62,6 @@ def filter_private_mentions=(value)\n   private\n \n   def pending_notification_requests\n-    @pending_notification_requests ||= notification_requests.limit(MAX_MEANINGFUL_COUNT).pick(Arel.sql('count(*), coalesce(sum(notifications_count), 0)::bigint'))\n+    @pending_notification_requests ||= notification_requests.without_suspended.limit(MAX_MEANINGFUL_COUNT).pick(Arel.sql('count(*), coalesce(sum(notifications_count), 0)::bigint'))\n   end\n end\n---\napp/models/notification_request.rb\n@@ -26,6 +26,8 @@ class NotificationRequest < ApplicationRecord\n \n   before_save :prepare_notifications_count\n \n+  scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+\n   def self.preload_cache_collection(requests)\n     cached_statuses_by_id = yield(requests.filter_map(&:last_status)).index_by(&:id) # Call cache_collection in block\n \n---\nspec/models/notification_policy_spec.rb\n@@ -7,19 +7,25 @@\n     subject { Fabricate(:notification_policy) }\n \n     let(:sender) { Fabricate(:account) }\n+    let(:suspended_sender) { Fabricate(:account) }\n \n     before do\n       Fabricate.times(2, :notification, account: subject.account, activity: Fabricate(:status, account: sender), filtered: true, type: :mention)\n       Fabricate(:notification_request, account: subject.account, from_account: sender)\n-      subject.summarize!\n-    end\n \n-    it 'sets pending_requests_count' do\n-      expect(subject.pending_requests_count).to eq 1\n+      Fabricate(:notification, account: subject.account, activity: Fabricate(:status, account: suspended_sender), filtered: true, type: :mention)\n+      Fabricate(:notification_request, account: subject.account, from_account: suspended_sender)\n+\n+      suspended_sender.suspend!\n+\n+      subject.summarize!\n     end\n \n-    it 'sets pending_notifications_count' do\n-      expect(subject.pending_notifications_count).to eq 2\n+    it 'sets pending_requests_count and pending_notifications_count' do\n+      expect(subject).to have_attributes(\n+        pending_requests_count: 1,\n+        pending_notifications_count: 2\n+      )\n     end\n   end\n end\n---\n\n\n---\n\nChoice C:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice D:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Hide completely checkbox in filters doesn't hide completely in notifications\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Make a filter, check hide completely.\r\n2. Check your Notifications\r\n\r\n![Screenshot 2024-10-09 160133](https://github.com/user-attachments/assets/b349ceed-09cc-4946-adc8-666db41b98c3)\r\n\r\n\n\n### Expected behaviour\n\nThey should be hidden completely\n\n### Actual behaviour\n\nA container with @ Mention shows up\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\nmasto.byrd.ws\n\n### Mastodon version\n\nv4.3\n\n### Browser name and version\n\nFirefox 132\n\n### Operating system\n\nWindows 11\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json.fetch('links', []).index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/resolve_account_service.rb\n@@ -106,8 +106,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -122,12 +120,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -33,7 +33,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -51,7 +51,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -72,7 +72,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -95,7 +95,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -111,7 +111,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -33,7 +33,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -51,7 +51,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -72,7 +72,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -95,7 +95,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -111,7 +111,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -215,7 +215,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\n\n\n---\n\nChoice B:\napp/models/trends/statuses.rb\n@@ -106,7 +106,7 @@ def klass\n   private\n \n   def eligible?(status)\n-    status.public_visibility? && status.account.discoverable? && !status.account.silenced? && !status.account.sensitized? && status.spoiler_text.blank? && !status.sensitive? && !status.reply? && valid_locale?(status.language)\n+    status.created_at.past? && status.public_visibility? && status.account.discoverable? && !status.account.silenced? && !status.account.sensitized? && status.spoiler_text.blank? && !status.sensitive? && !status.reply? && valid_locale?(status.language)\n   end\n \n   def calculate_scores(statuses, at_time)\n---\n\n\n---\n\nChoice C:\napp/lib/link_details_extractor.rb\n@@ -62,7 +62,8 @@ def date_modified\n     end\n \n     def author_name\n-      author['name']\n+      name = author['name']\n+      name.is_a?(Array) ? name.join(', ') : name\n     end\n \n     def author_url\n@@ -294,7 +295,7 @@ def detector\n   def html_entities_decode(string)\n     return if string.nil?\n \n-    unicode_string = string.encode('UTF-8')\n+    unicode_string = string.to_s.encode('UTF-8')\n     raise EncodingError, 'cannot convert string to valid UTF-8' unless unicode_string.valid_encoding?\n \n     html_entities.decode(unicode_string)\n---\nspec/lib/link_details_extractor_spec.rb\n@@ -192,6 +192,35 @@\n \n       include_examples 'structured data'\n     end\n+\n+    context 'with author names as array' do\n+      let(:ld_json) do\n+        {\n+          '@context' => 'https://schema.org',\n+          '@type' => 'NewsArticle',\n+          'headline' => 'A lot of authors',\n+          'description' => 'But we decided to cram them into one',\n+          'author' => {\n+            '@type' => 'Person',\n+            'name' => ['Author 1', 'Author 2'],\n+          },\n+        }.to_json\n+      end\n+      let(:html) { <<~HTML }\n+        <!doctype html>\n+        <html>\n+        <body>\n+          <script type=\"application/ld+json\">\n+            #{ld_json}\n+          </script>\n+        </body>\n+        </html>\n+      HTML\n+\n+      it 'joins author names' do\n+        expect(subject.author_name).to eq 'Author 1, Author 2'\n+      end\n+    end\n   end\n \n   context 'when Open Graph protocol data is present' do\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -13,6 +13,7 @@ import {\n import type { IconProp } from 'mastodon/components/icon';\n import { Icon } from 'mastodon/components/icon';\n import Status from 'mastodon/containers/status_container';\n+import { getStatusHidden } from 'mastodon/selectors/filters';\n import { useAppSelector, useAppDispatch } from 'mastodon/store';\n \n import { DisplayedName } from './displayed_name';\n@@ -48,6 +49,12 @@ export const NotificationWithStatus: React.FC<{\n     (state) => state.statuses.getIn([statusId, 'visibility']) === 'direct',\n   );\n \n+  const isFiltered = useAppSelector(\n+    (state) =>\n+      statusId &&\n+      getStatusHidden(state, { id: statusId, contextType: 'notifications' }),\n+  );\n+\n   const handlers = useMemo(\n     () => ({\n       open: () => {\n@@ -73,7 +80,7 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n-  if (!statusId) return null;\n+  if (!statusId || isFiltered) return null;\n \n   return (\n     <HotKeys handlers={handlers}>\n---\napp/javascript/mastodon/selectors/filters.ts\n@@ -0,0 +1,50 @@\n+import { createSelector } from '@reduxjs/toolkit';\n+\n+import type { RootState } from 'mastodon/store';\n+import { toServerSideType } from 'mastodon/utils/filters';\n+\n+// TODO: move to `app/javascript/mastodon/models` and use more globally\n+type Filter = Immutable.Map<string, unknown>;\n+\n+// TODO: move to `app/javascript/mastodon/models` and use more globally\n+type FilterResult = Immutable.Map<string, unknown>;\n+\n+export const getFilters = createSelector(\n+  [\n+    (state: RootState) => state.filters as Immutable.Map<string, Filter>,\n+    (_, { contextType }: { contextType: string }) => contextType,\n+  ],\n+  (filters, contextType) => {\n+    if (!contextType) {\n+      return null;\n+    }\n+\n+    const now = new Date();\n+    const serverSideType = toServerSideType(contextType);\n+\n+    return filters.filter((filter) => {\n+      const context = filter.get('context') as Immutable.List<string>;\n+      const expiration = filter.get('expires_at') as Date | null;\n+      return (\n+        context.includes(serverSideType) &&\n+        (expiration === null || expiration > now)\n+      );\n+    });\n+  },\n+);\n+\n+export const getStatusHidden = (\n+  state: RootState,\n+  { id, contextType }: { id: string; contextType: string },\n+) => {\n+  const filters = getFilters(state, { contextType });\n+  if (filters === null) return false;\n+\n+  const filtered = state.statuses.getIn([id, 'filtered']) as\n+    | Immutable.List<FilterResult>\n+    | undefined;\n+  return filtered?.some(\n+    (result) =>\n+      filters.getIn([result.get('filter'), 'filter_action']) === 'hide',\n+  );\n+};\n---\napp/javascript/mastodon/selectors/index.js\n@@ -1,22 +1,11 @@\n import { createSelector } from '@reduxjs/toolkit';\n import { List as ImmutableList, Map as ImmutableMap } from 'immutable';\n \n-import { toServerSideType } from 'mastodon/utils/filters';\n-\n import { me } from '../initial_state';\n \n-export { makeGetAccount } from \"./accounts\";\n-\n-const getFilters = createSelector([state => state.get('filters'), (_, { contextType }) => contextType], (filters, contextType) => {\n-  if (!contextType) {\n-    return null;\n-  }\n+import { getFilters } from './filters';\n \n-  const now = new Date();\n-  const serverSideType = toServerSideType(contextType);\n-\n-  return filters.filter(filter => filter.get('context').includes(serverSideType) && (filter.get('expires_at') === null || filter.get('expires_at') > now));\n-});\n+export { makeGetAccount } from \"./accounts\";\n \n export const makeGetStatus = () => {\n   return createSelector(\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: All Push Notifications in English \n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Using Mastodon Social instance.\r\n2. Device and Instance both set in Spanish \r\n3. The official app has been sending all push notifications in English and not Spanish as usual (since five days).\r\n...\r\n\n\n### Expected behaviour\n\nAll push notifications (phone notifications) should be in Spanish as usual \n\n### Actual behaviour\n\nAll push notifications (phone notifications) are being all received in English since five days.\n\n### Detailed description\n\nAbout five days ago push notifications (phone notifications) (using Mastodon official app) are all being received in English. If instance and device are both set in Spanish, and if it has never been any issue, that means that something weird should be happening on someone's side.\r\n\r\nIt's good to say that this is an issue with mastodon.social . It's not that way to other instances.\n\n### Mastodon instance\n\nmastodon.social\n\n### Mastodon version\n\nThe latest version \n\n### Browser name and version\n\nChrome for Android last Playstore versi\u00f3n.\n\n### Operating system\n\nAndroid 11\n\n### Technical details\n\nIt's been happening using Mastodon Official app for Android.\r\nHave no log.\r\n\n\n---\n\nChoice A:\napp/workers/web/push_notification_worker.rb\n@@ -55,12 +55,8 @@ def web_push_request\n   end\n \n   def push_notification_json\n-    Oj.dump(serialized_notification_in_subscription_locale.as_json)\n-  end\n-\n-  def serialized_notification_in_subscription_locale\n     I18n.with_locale(@subscription.locale.presence || I18n.default_locale) do\n-      serialized_notification\n+      Oj.dump(serialized_notification.as_json)\n     end\n   end\n \n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\nCHANGELOG.md\n@@ -2,6 +2,18 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.2.15] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+\n ## [4.2.14] - 2024-02-03\n \n ### Added\n---\nDockerfile\n@@ -28,6 +28,7 @@ RUN apt-get update && \\\n         libgdbm-dev \\\n         libgmp-dev \\\n         libssl-dev \\\n+        libyaml-dev \\\n         libyaml-0-2 \\\n         ca-certificates \\\n         libreadline8 \\\n---\nGemfile.lock\n@@ -28,47 +28,47 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actioncable (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n-    actionmailbox (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      activejob (= 7.0.8.6)\n-      activerecord (= 7.0.8.6)\n-      activestorage (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actionmailbox (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      activejob (= 7.0.8.7)\n+      activerecord (= 7.0.8.7)\n+      activestorage (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      actionview (= 7.0.8.6)\n-      activejob (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actionmailer (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      actionview (= 7.0.8.7)\n+      activejob (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.0)\n-    actionpack (7.0.8.6)\n-      actionview (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actionpack (7.0.8.7)\n+      actionview (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       rack (~> 2.0, >= 2.2.4)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.0)\n       rails-html-sanitizer (~> 1.0, >= 1.2.0)\n-    actiontext (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      activerecord (= 7.0.8.6)\n-      activestorage (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actiontext (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      activerecord (= 7.0.8.7)\n+      activestorage (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    actionview (7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       builder (~> 3.1)\n       erubi (~> 1.4)\n       rails-dom-testing (~> 2.0)\n@@ -78,22 +78,22 @@ GEM\n       activemodel (>= 4.1, < 7.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    activejob (7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       globalid (>= 0.3.6)\n-    activemodel (7.0.8.6)\n-      activesupport (= 7.0.8.6)\n-    activerecord (7.0.8.6)\n-      activemodel (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n-    activestorage (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      activejob (= 7.0.8.6)\n-      activerecord (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    activemodel (7.0.8.7)\n+      activesupport (= 7.0.8.7)\n+    activerecord (7.0.8.7)\n+      activemodel (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n+    activestorage (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      activejob (= 7.0.8.7)\n+      activerecord (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       marcel (~> 1.0)\n       mini_mime (>= 1.1.0)\n-    activesupport (7.0.8.6)\n+    activesupport (7.0.8.7)\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       i18n (>= 1.6, < 2)\n       minitest (>= 5.1)\n@@ -469,7 +469,7 @@ GEM\n       net-protocol\n     net-ssh (7.1.0)\n     nio4r (2.7.4)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     nsa (0.3.0)\n@@ -550,20 +550,20 @@ GEM\n       rack\n     rack-test (2.1.0)\n       rack (>= 1.3)\n-    rails (7.0.8.6)\n-      actioncable (= 7.0.8.6)\n-      actionmailbox (= 7.0.8.6)\n-      actionmailer (= 7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      actiontext (= 7.0.8.6)\n-      actionview (= 7.0.8.6)\n-      activejob (= 7.0.8.6)\n-      activemodel (= 7.0.8.6)\n-      activerecord (= 7.0.8.6)\n-      activestorage (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    rails (7.0.8.7)\n+      actioncable (= 7.0.8.7)\n+      actionmailbox (= 7.0.8.7)\n+      actionmailer (= 7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      actiontext (= 7.0.8.7)\n+      actionview (= 7.0.8.7)\n+      activejob (= 7.0.8.7)\n+      activemodel (= 7.0.8.7)\n+      activerecord (= 7.0.8.7)\n+      activestorage (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       bundler (>= 1.15.0)\n-      railties (= 7.0.8.6)\n+      railties (= 7.0.8.7)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -572,15 +572,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.7)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.0.8.6)\n-      actionpack (= 7.0.8.6)\n-      activesupport (= 7.0.8.6)\n+    railties (7.0.8.7)\n+      actionpack (= 7.0.8.7)\n+      activesupport (= 7.0.8.7)\n       method_source\n       rake (>= 12.2)\n       thor (~> 1.0)\n@@ -743,7 +743,7 @@ GEM\n     test-prof (1.2.3)\n     thor (1.3.2)\n     tilt (2.2.0)\n-    timeout (0.4.2)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.0)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n@@ -800,7 +800,8 @@ GEM\n       railties (>= 5.2)\n       semantic_range (>= 2.3.0)\n     websocket (1.2.9)\n-    websocket-driver (0.7.6)\n+    websocket-driver (0.7.7)\n+      base64\n       websocket-extensions (>= 0.1.0)\n     websocket-extensions (0.1.5)\n     wisper (2.0.1)\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -16,6 +16,7 @@ def clean_unconfirmed_accounts!\n     User.where('confirmed_at is NULL AND confirmation_sent_at <= ?', 2.days.ago).reorder(nil).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.14\n+    image: ghcr.io/mastodon/mastodon:v4.2.15\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.14\n+    image: ghcr.io/mastodon/mastodon:v4.2.15\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.14\n+    image: ghcr.io/mastodon/mastodon:v4.2.15\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      14\n+      15\n     end\n \n     def default_prerelease\n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -18,8 +19,24 @@\n       confirmed_user.update!(confirmed_at: 1.day.ago)\n     end\n \n-    it 'deletes the old unconfirmed user' do\n-      expect { subject.perform }.to change { User.exists?(old_unconfirmed_user.id) }.from(true).to(false)\n+    it 'deletes the old unconfirmed user and metadata while preserving confirmed user and newer unconfirmed user' do\n+      expect { subject.perform }\n+        .to change { User.exists?(old_unconfirmed_user.id) }\n+        .from(true).to(false)\n+        .and change { Account.exists?(old_unconfirmed_user.account_id) }\n+        .from(true).to(false)\n+      expect { moderation_note.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n+      expect(User.exists?(new_unconfirmed_user.id))\n+        .to be true\n+      expect(User.exists?(confirmed_user.id))\n+        .to be true\n+      expect(Account.exists?(new_unconfirmed_user.account_id))\n+        .to be true\n+      expect(Account.exists?(confirmed_user.account_id))\n+        .to be true\n     end\n \n     it \"deletes the old unconfirmed user's account\" do\n---\nCHANGELOG.md\n@@ -3,7 +3,18 @@ Changelog\n \n All notable changes to this project will be documented in this file.\n \n-## [4.2.21] - 2024-12-03\n+## [4.1.22] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+\n+## [4.1.21] - 2024-12-03\n \n ### Fixed\n \n---\nDockerfile\n@@ -29,6 +29,7 @@ RUN apt-get update && \\\n         libgdbm-dev \\\n         libgmp-dev \\\n         libssl-dev \\\n+        libyaml-dev \\\n         libyaml-0-2 \\\n         ca-certificates \\\n         libreadline8 \\\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -16,6 +16,7 @@ def clean_unconfirmed_accounts!\n     User.where('confirmed_at is NULL AND confirmation_sent_at <= ?', 2.days.ago).reorder(nil).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.21\n+    image: ghcr.io/mastodon/mastodon:v4.1.22\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.21\n+    image: ghcr.io/mastodon/mastodon:v4.1.22\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.21\n+    image: ghcr.io/mastodon/mastodon:v4.1.22\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      21\n+      22\n     end\n \n     def flags\n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -7,6 +7,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -16,8 +17,24 @@\n       confirmed_user.update!(confirmed_at: 1.day.ago)\n     end\n \n-    it 'deletes the old unconfirmed user' do\n-      expect { subject.perform }.to change { User.exists?(old_unconfirmed_user.id) }.from(true).to(false)\n+    it 'deletes the old unconfirmed user and metadata while preserving confirmed user and newer unconfirmed user' do\n+      expect { subject.perform }\n+        .to change { User.exists?(old_unconfirmed_user.id) }\n+        .from(true).to(false)\n+        .and change { Account.exists?(old_unconfirmed_user.account_id) }\n+        .from(true).to(false)\n+      expect { moderation_note.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n+      expect(User.exists?(new_unconfirmed_user.id))\n+        .to be true\n+      expect(User.exists?(confirmed_user.id))\n+        .to be true\n+      expect(Account.exists?(new_unconfirmed_user.account_id))\n+        .to be true\n+      expect(Account.exists?(confirmed_user.account_id))\n+        .to be true\n     end\n \n     it \"deletes the old unconfirmed user's account\" do\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon-light/diff.scss\n@@ -159,8 +159,8 @@\n .error-modal,\n .onboarding-modal,\n .compare-history-modal,\n-.report-modal__comment .setting-text__wrapper,\n-.report-modal__comment .setting-text,\n+.report-modal__comment,\n+.report-modal__comment,\n .announcements,\n .picture-in-picture__header,\n .picture-in-picture__footer,\n@@ -169,6 +169,11 @@\n   border: 1px solid var(--background-border-color);\n }\n \n+.setting-text__wrapper,\n+.setting-text {\n+  border: 1px solid var(--background-border-color);\n+}\n+\n .reactions-bar__item:hover,\n .reactions-bar__item:focus,\n .reactions-bar__item:active {\n@@ -198,14 +203,6 @@\n   color: $white;\n }\n \n-.report-modal__comment {\n-  border-right-color: lighten($ui-base-color, 8%);\n-}\n-\n-.report-modal__container {\n-  border-top-color: lighten($ui-base-color, 8%);\n-}\n-\n .column-settings__hashtags .column-select__option {\n   color: $white;\n }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -3911,7 +3911,7 @@ $ui-header-logo-wordmark-width: 99px;\n \n   &__wrapper {\n     background: $white;\n-    border: 1px solid $ui-secondary-color;\n+    border: 1px solid var(--background-border-color);\n     margin-bottom: 10px;\n     border-radius: 4px;\n \n@@ -6298,9 +6298,10 @@ a.status-card {\n .report-modal,\n .actions-modal,\n .compare-history-modal {\n-  background: lighten($ui-secondary-color, 8%);\n-  color: $inverted-text-color;\n-  border-radius: 8px;\n+  background: var(--background-color);\n+  color: $primary-text-color;\n+  border-radius: 4px;\n+  border: 1px solid var(--background-border-color);\n   overflow: hidden;\n   max-width: 90vw;\n   width: 480px;\n@@ -6344,6 +6345,7 @@ a.status-card {\n .report-modal {\n   width: 90vw;\n   max-width: 700px;\n+  border: 1px solid var(--background-border-color);\n }\n \n .report-dialog-modal {\n@@ -6567,7 +6569,7 @@ a.status-card {\n \n .report-modal__container {\n   display: flex;\n-  border-top: 1px solid $ui-secondary-color;\n+  border-top: 1px solid var(--background-border-color);\n \n   @media screen and (width <= 480px) {\n     flex-wrap: wrap;\n@@ -6625,7 +6627,7 @@ a.status-card {\n \n .report-modal__comment {\n   padding: 20px;\n-  border-inline-end: 1px solid $ui-secondary-color;\n+  border-inline-end: 1px solid var(--background-border-color);\n   max-width: 320px;\n \n   p {\n@@ -6636,7 +6638,7 @@ a.status-card {\n \n   .setting-text-label {\n     display: block;\n-    color: $inverted-text-color;\n+    color: $secondary-text-color;\n     font-size: 14px;\n     font-weight: 500;\n     margin-bottom: 10px;\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix recently-broken admin interface buttons\n\nIssue Description:\nReverts #32199 and #32154\n\n---\n\nChoice A:\nCHANGELOG.md\n@@ -2,6 +2,29 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.7] - 2025-04-02\n+\n+### Add\n+\n+- Add delay to profile updates to debounce them (#34137 by @ClearlyClaire)\n+- Add support for paginating partial collections in `SynchronizeFollowersService` (#34272 and #34277 by @ClearlyClaire)\n+\n+### Changed\n+\n+- Change account suspensions to be federated to recently-followed accounts as well (#34294 by @ClearlyClaire)\n+- Change `AccountReachFinder` to consider statuses based on suspension date (#32805 and #34291 by @ClearlyClaire and @mjankowski)\n+- Change user archive signed URL TTL from 10 seconds to 1 hour (#34254 by @ClearlyClaire)\n+\n+### Fixed\n+\n+- Fix static version of animated PNG emojis not being properly extracted (#34337 by @ClearlyClaire)\n+- Fix filters not applying in detailed view, favourites and bookmarks (#34259 and #34260 by @ClearlyClaire)\n+- Fix handling of malformed/unusual HTML (#34201 by @ClearlyClaire)\n+- Fix `CacheBuster` being queued for missing media attachments (#34253 by @ClearlyClaire)\n+- Fix incorrect URL being used when cache busting (#34189 by @ClearlyClaire)\n+- Fix streaming server refusing unix socket path in `DATABASE_URL` (#34091 by @ClearlyClaire)\n+- Fix \u201cx\u201d hotkey not working on boosted filtered posts (#33758 by @ClearlyClaire)\n+\n ## [4.3.6] - 2025-03-13\n \n ### Security\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.6\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -102,7 +102,7 @@ services:\n   sidekiq:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      6\n+      7\n     end\n \n     def default_prerelease\n---\n\n\n---\n\nChoice B:\napp/lib/link_details_extractor.rb\n@@ -62,7 +62,8 @@ def date_modified\n     end\n \n     def author_name\n-      author['name']\n+      name = author['name']\n+      name.is_a?(Array) ? name.join(', ') : name\n     end\n \n     def author_url\n@@ -294,7 +295,7 @@ def detector\n   def html_entities_decode(string)\n     return if string.nil?\n \n-    unicode_string = string.encode('UTF-8')\n+    unicode_string = string.to_s.encode('UTF-8')\n     raise EncodingError, 'cannot convert string to valid UTF-8' unless unicode_string.valid_encoding?\n \n     html_entities.decode(unicode_string)\n---\nspec/lib/link_details_extractor_spec.rb\n@@ -192,6 +192,35 @@\n \n       include_examples 'structured data'\n     end\n+\n+    context 'with author names as array' do\n+      let(:ld_json) do\n+        {\n+          '@context' => 'https://schema.org',\n+          '@type' => 'NewsArticle',\n+          'headline' => 'A lot of authors',\n+          'description' => 'But we decided to cram them into one',\n+          'author' => {\n+            '@type' => 'Person',\n+            'name' => ['Author 1', 'Author 2'],\n+          },\n+        }.to_json\n+      end\n+      let(:html) { <<~HTML }\n+        <!doctype html>\n+        <html>\n+        <body>\n+          <script type=\"application/ld+json\">\n+            #{ld_json}\n+          </script>\n+        </body>\n+        </html>\n+      HTML\n+\n+      it 'joins author names' do\n+        expect(subject.author_name).to eq 'Author 1, Author 2'\n+      end\n+    end\n   end\n \n   context 'when Open Graph protocol data is present' do\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/forms.scss\n@@ -19,6 +19,10 @@ code {\n   margin-bottom: 24px;\n }\n \n+form.button_to {\n+  display: inline-block;\n+}\n+\n .fade-out-top {\n   position: relative;\n   overflow: hidden;\n---\napp/views/admin/accounts/_buttons.html.haml\n@@ -4,8 +4,8 @@\n     %p.muted-hint= deletion_request.present? ? t('admin.accounts.remote_suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.remote_suspension_irreversible')\n   - else\n     %p.muted-hint= deletion_request.present? ? t('admin.accounts.suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.suspension_irreversible')\n-  = link_to t('admin.accounts.undo_suspension'), unsuspend_admin_account_path(account.id), method: :post, class: 'button' if can?(:unsuspend, account)\n-  = link_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), method: :post, class: 'button' if can?(:redownload, account) && account.suspension_origin_remote?\n+  = button_to t('admin.accounts.undo_suspension'), unsuspend_admin_account_path(account.id), class: :button if can?(:unsuspend, account)\n+  = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button if can?(:redownload, account) && account.suspension_origin_remote?\n   - if deletion_request.present? && can?(:destroy, account)\n     = link_to t('admin.accounts.delete'), admin_account_path(account.id), method: :delete, class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure') }\n - else\n@@ -14,28 +14,28 @@\n       - if account.local? && account.user_approved?\n         = link_to t('admin.accounts.warn'), new_admin_account_action_path(account.id, type: 'none'), class: 'button' if can?(:warn, account)\n         - if account.user_disabled?\n-          = link_to t('admin.accounts.enable'), enable_admin_account_path(account.id), method: :post, class: 'button' if can?(:enable, account.user)\n+          = button_to t('admin.accounts.enable'), enable_admin_account_path(account.id), class: :button if can?(:enable, account.user)\n         - elsif can?(:disable, account.user)\n           = link_to t('admin.accounts.disable'), new_admin_account_action_path(account.id, type: 'disable'), class: 'button'\n       - if account.sensitized?\n-        = link_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), method: :post, class: 'button' if can?(:unsensitive, account)\n+        = button_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), class: :button if can?(:unsensitive, account)\n       - elsif !account.local? || account.user_approved?\n         = link_to t('admin.accounts.sensitive'), new_admin_account_action_path(account.id, type: 'sensitive'), class: 'button' if can?(:sensitive, account)\n       - if account.silenced?\n-        = link_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), method: :post, class: 'button' if can?(:unsilence, account)\n+        = button_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), class: :button if can?(:unsilence, account)\n       - elsif !account.local? || account.user_approved?\n         = link_to t('admin.accounts.silence'), new_admin_account_action_path(account.id, type: 'silence'), class: 'button' if can?(:silence, account)\n       - if account.local?\n         - if account.user_pending?\n-          = link_to t('admin.accounts.approve'), approve_admin_account_path(account.id), method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button' if can?(:approve, account.user)\n-          = link_to t('admin.accounts.reject'), reject_admin_account_path(account.id), method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive' if can?(:reject, account.user)\n+          = button_to t('admin.accounts.approve'), approve_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: :button if can?(:approve, account.user)\n+          = button_to t('admin.accounts.reject'), reject_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive' if can?(:reject, account.user)\n         - if !account.user_confirmed? && can?(:confirm, account.user)\n-          = link_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), method: :post, class: 'button'\n+          = button_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), class: :button\n       - if (!account.local? || account.user_approved?) && can?(:suspend, account)\n         = link_to t('admin.accounts.perform_full_suspension'), new_admin_account_action_path(account.id, type: 'suspend'), class: 'button'\n     %div\n       - if account.local?\n         - if !account.memorial? && account.user_approved? && can?(:memorialize, account)\n-          = link_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive'\n+          = button_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive'\n       - elsif can?(:redownload, account)\n-        = link_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), method: :post, class: 'button'\n+        = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button\n---\napp/views/admin/accounts/show.html.haml\n@@ -30,7 +30,7 @@\n = render 'admin/accounts/counters', account: @account\n \n - if @account.local? && @account.user.nil?\n-  = link_to t('admin.accounts.unblock_email'), unblock_email_admin_account_path(@account.id), method: :post, class: 'button' if can?(:unblock_email, @account) && CanonicalEmailBlock.exists?(reference_account_id: @account.id)\n+  = button_to t('admin.accounts.unblock_email'), unblock_email_admin_account_path(@account.id), class: :button if can?(:unblock_email, @account) && CanonicalEmailBlock.exists?(reference_account_id: @account.id)\n - else\n   .table-wrapper\n     %table.table.inline-table\n---\napp/views/admin/instances/show.html.haml\n@@ -21,7 +21,7 @@\n   - if @instance.domain_allow\n     = link_to t('admin.domain_allows.undo'), admin_domain_allow_path(@instance.domain_allow), class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }\n   - else\n-    = link_to t('admin.domain_allows.add_new'), admin_domain_allows_path(domain_allow: { domain: @instance.domain }), class: 'button', method: :post\n+    = button_to t('admin.domain_allows.add_new'), admin_domain_allows_path(domain_allow: { domain: @instance.domain }), class: :button\n - else\n   %p= t('admin.instances.content_policies.description_html')\n \n@@ -40,7 +40,7 @@\n             %td= @instance.domain_block.policies.map { |policy| t(policy, scope: 'admin.instances.content_policies.policies') }.join(' \u00b7 ')\n \n     = link_to t('admin.domain_blocks.edit'), edit_admin_domain_block_path(@instance.domain_block), class: 'button'\n-    = link_to t('admin.domain_blocks.undo'), admin_domain_block_path(@instance.domain_block), class: 'button', data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }\n+    = button_to t('admin.domain_blocks.undo'), admin_domain_block_path(@instance.domain_block), class: :button, data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }\n   - else\n     = link_to t('admin.domain_blocks.add_new'), new_admin_domain_block_path(_domain: @instance.domain), class: 'button'\n \n@@ -70,16 +70,16 @@\n       - if @instance.unavailable?\n         %span.negative-hint\n           = t('admin.instances.availability.failure_threshold_reached', date: l(@instance.unavailable_domain.created_at.to_date))\n-          = link_to t('admin.instances.delivery.restart'), restart_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }\n+          = button_to t('admin.instances.delivery.restart'), restart_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') }\n       - elsif @instance.exhausted_deliveries_days.empty?\n         %span.positive-hint\n           = t('admin.instances.availability.no_failures_recorded')\n-          = link_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }\n+          = button_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') }\n       - else\n         %span.negative-hint\n           = t('admin.instances.availability.failures_recorded', count: @instance.delivery_failure_tracker.days)\n-          %span= link_to t('admin.instances.delivery.clear'), clear_delivery_errors_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post } unless @instance.exhausted_deliveries_days.empty?\n-          %span= link_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }\n+          %span= button_to t('admin.instances.delivery.clear'), clear_delivery_errors_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') } unless @instance.exhausted_deliveries_days.empty?\n+          %span= button_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure') }\n \n   - if @instance.purgeable?\n     %p= t('admin.instances.purge_description_html')\n---\napp/views/admin/invites/index.html.haml\n@@ -34,4 +34,4 @@\n = paginate @invites\n \n - if policy(:invite).deactivate_all?\n-  = link_to t('admin.invites.deactivate_all'), deactivate_all_admin_invites_path, method: :post, data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button'\n+  = button_to t('admin.invites.deactivate_all'), deactivate_all_admin_invites_path, data: { confirm: t('admin.accounts.are_you_sure') }, class: :button\n---\napp/views/admin/reports/show.html.haml\n@@ -3,9 +3,9 @@\n \n - content_for :heading_actions do\n   - if @report.unresolved?\n-    = link_to t('admin.reports.mark_as_resolved'), resolve_admin_report_path(@report), method: :post, class: 'button'\n+    = button_to t('admin.reports.mark_as_resolved'), resolve_admin_report_path(@report), class: :button\n   - else\n-    = link_to t('admin.reports.mark_as_unresolved'), reopen_admin_report_path(@report), method: :post, class: 'button'\n+    = button_to t('admin.reports.mark_as_unresolved'), reopen_admin_report_path(@report), class: :button\n \n - unless @report.account.local? || @report.target_account.local?\n   .flash-message= t('admin.reports.forwarded_replies_explanation')\n---\napp/views/disputes/strikes/show.html.haml\n@@ -3,8 +3,8 @@\n \n - content_for :heading_actions do\n   - if @appeal.persisted?\n-    = link_to t('disputes.strikes.approve_appeal'), approve_admin_disputes_appeal_path(@appeal), method: :post, class: 'button' if can?(:approve, @appeal)\n-    = link_to t('disputes.strikes.reject_appeal'), reject_admin_disputes_appeal_path(@appeal), method: :post, class: 'button button--destructive' if can?(:reject, @appeal)\n+    = button_to t('disputes.strikes.approve_appeal'), approve_admin_disputes_appeal_path(@appeal), class: :button if can?(:approve, @appeal)\n+    = button_to t('disputes.strikes.reject_appeal'), reject_admin_disputes_appeal_path(@appeal), class: 'button button--destructive' if can?(:reject, @appeal)\n \n - if @strike.overruled?\n   %p.hint\n---\napp/views/settings/exports/show.html.haml\n@@ -46,7 +46,7 @@\n %p.muted-hint= t('exports.archive_takeout.hint_html')\n \n - if policy(:backup).create?\n-  %p= link_to t('exports.archive_takeout.request'), settings_export_path, class: 'button', method: :post\n+  %p= button_to t('exports.archive_takeout.request'), settings_export_path, class: :button\n \n - unless @backups.empty?\n   %hr.spacer/\n---\napp/views/settings/two_factor_authentication/otp_authentication/show.html.haml\n@@ -6,4 +6,4 @@\n \n   %hr.spacer/\n \n-  = link_to t('otp_authentication.setup'), settings_otp_authentication_path, data: { method: :post }, class: 'block-button'\n+  = button_to t('otp_authentication.setup'), settings_otp_authentication_path, class: 'block-button'\n---\napp/views/settings/two_factor_authentication_methods/index.html.haml\n@@ -2,7 +2,7 @@\n   = t('settings.two_factor_authentication')\n \n - content_for :heading_actions do\n-  = link_to t('two_factor_authentication.disable'), disable_settings_two_factor_authentication_methods_path, class: 'button button--destructive', method: :post\n+  = button_to t('two_factor_authentication.disable'), disable_settings_two_factor_authentication_methods_path, class: 'button button--destructive'\n \n %p.hint\n   %span.positive-hint\n@@ -38,4 +38,4 @@\n %hr.spacer/\n \n .simple_form\n-  = link_to t('two_factor_authentication.generate_recovery_codes'), settings_two_factor_authentication_recovery_codes_path, data: { method: :post }, class: 'block-button'\n+  = button_to t('two_factor_authentication.generate_recovery_codes'), settings_two_factor_authentication_recovery_codes_path, class: 'block-button'\n---\napp/helpers/admin/accounts_helper.rb\n@@ -11,8 +11,28 @@ def admin_accounts_moderation_options\n     ]\n   end\n \n+  def remote_suspension_hint(deletion_request)\n+    if deletion_request.present?\n+      t('admin.accounts.remote_suspension_reversible_hint_html', date: due_date_for_hint(deletion_request))\n+    else\n+      t('admin.accounts.remote_suspension_irreversible')\n+    end\n+  end\n+\n+  def suspension_hint(deletion_request)\n+    if deletion_request.present?\n+      t('admin.accounts.suspension_reversible_hint_html', date: due_date_for_hint(deletion_request))\n+    else\n+      t('admin.accounts.suspension_irreversible')\n+    end\n+  end\n+\n   private\n \n+  def due_date_for_hint(deletion_request)\n+    tag.strong(l(deletion_request.due_at.to_date))\n+  end\n+\n   def pending_user_count_label\n     number_with_delimiter User.pending.count\n   end\n---\napp/views/admin/accounts/_buttons.html.haml\n@@ -1,41 +1,31 @@\n-- if account.suspended?\n-  %hr.spacer/\n-  - if account.suspension_origin_remote?\n-    %p.muted-hint= deletion_request.present? ? t('admin.accounts.remote_suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.remote_suspension_irreversible')\n-  - else\n-    %p.muted-hint= deletion_request.present? ? t('admin.accounts.suspension_reversible_hint_html', date: content_tag(:strong, l(deletion_request.due_at.to_date))) : t('admin.accounts.suspension_irreversible')\n-  = button_to t('admin.accounts.undo_suspension'), unsuspend_admin_account_path(account.id), class: :button if can?(:unsuspend, account)\n-  = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button if can?(:redownload, account) && account.suspension_origin_remote?\n-  - if deletion_request.present? && can?(:destroy, account)\n-    = link_to t('admin.accounts.delete'), admin_account_path(account.id), method: :delete, class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure') }\n-- else\n-  .action-buttons\n-    %div\n-      - if account.local? && account.user_approved?\n-        = link_to t('admin.accounts.warn'), new_admin_account_action_path(account.id, type: 'none'), class: 'button' if can?(:warn, account)\n-        - if account.user_disabled?\n-          = button_to t('admin.accounts.enable'), enable_admin_account_path(account.id), class: :button if can?(:enable, account.user)\n-        - elsif can?(:disable, account.user)\n-          = link_to t('admin.accounts.disable'), new_admin_account_action_path(account.id, type: 'disable'), class: 'button'\n-      - if account.sensitized?\n-        = button_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), class: :button if can?(:unsensitive, account)\n-      - elsif !account.local? || account.user_approved?\n-        = link_to t('admin.accounts.sensitive'), new_admin_account_action_path(account.id, type: 'sensitive'), class: 'button' if can?(:sensitive, account)\n-      - if account.silenced?\n-        = button_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), class: :button if can?(:unsilence, account)\n-      - elsif !account.local? || account.user_approved?\n-        = link_to t('admin.accounts.silence'), new_admin_account_action_path(account.id, type: 'silence'), class: 'button' if can?(:silence, account)\n-      - if account.local?\n-        - if account.user_pending?\n-          = button_to t('admin.accounts.approve'), approve_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: :button if can?(:approve, account.user)\n-          = button_to t('admin.accounts.reject'), reject_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive' if can?(:reject, account.user)\n-        - if !account.user_confirmed? && can?(:confirm, account.user)\n-          = button_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), class: :button\n-      - if (!account.local? || account.user_approved?) && can?(:suspend, account)\n-        = link_to t('admin.accounts.perform_full_suspension'), new_admin_account_action_path(account.id, type: 'suspend'), class: 'button'\n-    %div\n-      - if account.local?\n-        - if !account.memorial? && account.user_approved? && can?(:memorialize, account)\n-          = button_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: 'button button--destructive'\n-      - elsif can?(:redownload, account)\n-        = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button\n+-# locals: (account:)\n+.action-buttons\n+  %div\n+    - if account.local? && account.user_approved?\n+      = link_to t('admin.accounts.warn'), new_admin_account_action_path(account.id, type: :none), class: :button if can?(:warn, account)\n+      - if account.user_disabled?\n+        = button_to t('admin.accounts.enable'), enable_admin_account_path(account.id), class: :button if can?(:enable, account.user)\n+      - elsif can?(:disable, account.user)\n+        = link_to t('admin.accounts.disable'), new_admin_account_action_path(account.id, type: :disable), class: :button\n+    - if account.sensitized?\n+      = button_to t('admin.accounts.undo_sensitized'), unsensitive_admin_account_path(account.id), class: :button if can?(:unsensitive, account)\n+    - elsif !account.local? || account.user_approved?\n+      = link_to t('admin.accounts.sensitive'), new_admin_account_action_path(account.id, type: :sensitive), class: :button if can?(:sensitive, account)\n+    - if account.silenced?\n+      = button_to t('admin.accounts.undo_silenced'), unsilence_admin_account_path(account.id), class: :button if can?(:unsilence, account)\n+    - elsif !account.local? || account.user_approved?\n+      = link_to t('admin.accounts.silence'), new_admin_account_action_path(account.id, type: :silence), class: :button if can?(:silence, account)\n+    - if account.local?\n+      - if account.user_pending?\n+        = button_to t('admin.accounts.approve'), approve_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: :button if can?(:approve, account.user)\n+        = button_to t('admin.accounts.reject'), reject_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: [:button, 'button--destructive'] if can?(:reject, account.user)\n+      - if !account.user_confirmed? && can?(:confirm, account.user)\n+        = button_to t('admin.accounts.confirm'), admin_account_confirmation_path(account.id), class: :button\n+    - if (!account.local? || account.user_approved?) && can?(:suspend, account)\n+      = link_to t('admin.accounts.perform_full_suspension'), new_admin_account_action_path(account.id, type: :suspend), class: :button\n+  %div\n+    - if account.local?\n+      - if !account.memorial? && account.user_approved? && can?(:memorialize, account)\n+        = button_to t('admin.accounts.memorialize'), memorialize_admin_account_path(account.id), data: { confirm: t('admin.accounts.are_you_sure') }, class: [:button, 'button--destructive']\n+    - elsif can?(:redownload, account)\n+      = button_to t('admin.accounts.redownload'), redownload_admin_account_path(account.id), class: :button\n---\napp/views/admin/accounts/_suspended_buttons.html.haml\n@@ -0,0 +1,25 @@\n+-# locals: (account:, deletion_request:)\n+%hr.spacer/\n+\n+%p.muted-hint\n+  - if account.suspension_origin_remote?\n+    = remote_suspension_hint(deletion_request)\n+  - else\n+    = suspension_hint(deletion_request)\n+\n+- if can?(:unsuspend, account)\n+  = button_to t('admin.accounts.undo_suspension'),\n+              unsuspend_admin_account_path(account.id),\n+              class: :button\n+\n+- if can?(:redownload, account) && account.suspension_origin_remote?\n+  = button_to t('admin.accounts.redownload'),\n+              redownload_admin_account_path(account.id),\n+              class: :button\n+\n+- if deletion_request.present? && can?(:destroy, account)\n+  = link_to t('admin.accounts.delete'),\n+            admin_account_path(account.id),\n+            class: [:button, 'button--destructive'],\n+            data: { confirm: t('admin.accounts.are_you_sure') },\n+            method: :delete\n---\napp/views/admin/accounts/show.html.haml\n@@ -40,7 +40,13 @@\n         - else\n           = render 'admin/accounts/remote_account', account: @account, domain_block: @domain_block\n \n-  = render 'admin/accounts/buttons', account: @account, deletion_request: @deletion_request\n+  - if @account.suspended?\n+    = render 'admin/accounts/suspended_buttons',\n+             account: @account,\n+             deletion_request: @deletion_request\n+  - else\n+    = render 'admin/accounts/buttons',\n+             account: @account\n \n   %hr.spacer/\n \n---\n\n\n---\n\nChoice D:\nconfig/templates/terms-of-service.md\n@@ -1,7 +1,7 @@\n ## Introduction\n \n-These terms of service (the \"Terms\") cover your access and use of\u00a0Server\n-Operator\u2019s\u00a0(\"Administrator\",\u00a0\"we\", or \"us\") instance, located at\u00a0%{domain}\u00a0(the\n+These terms of service (the \"Terms\") cover your access and use of Server\n+Operator's (\"Administrator\", \"we\", or \"us\") instance, located at %{domain} (the\n \"Instance\"). These Terms apply solely to your use of the Instance as operated\n by the Administrator. Please note that we have no affiliation with Mastodon\n gGmbH (\u201cMastodon\u201d) and these Terms do not contain any representations or\n@@ -23,8 +23,8 @@ are old enough to access the Instance in your country, but are not old enough to\n have the legal authority to consent to our Terms, please ask your parent or\n legal guardian to read these Terms with you, as they must agree to the Terms on\n your behalf. If you are a parent or legal guardian who has accepted these terms\n-on your child\u2019s behalf, these terms apply to you and you are responsible for\n-your child\u2019s activities on the Instance.\n+on your child's behalf, these terms apply to you and you are responsible for\n+your child's activities on the Instance.\n \n ## Prohibited Uses\n \n@@ -36,14 +36,14 @@ and local laws and regulations in connection with your use of the Instance. You\n also agree not to use the Instance to engage in any prohibited conduct, or to\n assist any other person or entity in engaging in any prohibited conduct.\n \n-We reserve the right (but do not have the obligation)\u00a0in our sole discretion\u00a0to:\n+We reserve the right (but do not have the obligation) in our sole discretion to:\n (1) monitor the Instance for violations of these Terms; (2) take appropriate\n-legal action against anyone who\u00a0uses or accesses the Instance in a manner that\n-we believe\u00a0violates the law or these Terms, including without limitation,\n-reporting such user to law enforcement authorities;\u00a0(3)\u00a0deny access to the\n+legal action against anyone who uses or accesses the Instance in a manner that\n+we believe violates the law or these Terms, including without limitation,\n+reporting such user to law enforcement authorities; (3) deny access to the\n Instance or any features of the Instance to anyone who violates these Terms or\n-who\u00a0we believe\u00a0interferes with the ability of others to enjoy our Instance or\n-infringes the rights of others; and\u00a0(4) otherwise manage the Instance in a\n+who we believe interferes with the ability of others to enjoy our Instance or\n+infringes the rights of others; and (4) otherwise manage the Instance in a\n manner designed to protect our rights and property and to facilitate the proper\n functioning of the Instance.\n \n@@ -53,16 +53,16 @@ attempt to):\n \n - Violate these Terms or other policies and terms posted on, or otherwise\n - applicable to, the Instance; Upload any material, program, or software that\n-- contains any\u00a0virus, worm, spyware, Trojan horse or other program or code\n+- contains any virus, worm, spyware, Trojan horse or other program or code\n - designed to interrupt, destroy or limit the functionality of the Instance,\n-- launch a denial of service attack, or in any other way attempt\u00a0to interfere\n+- launch a denial of service attack, or in any other way attempt to interfere\n - with the functioning and availability of the Instance; Except as may be the\n - result of standard search engine or Internet browser usage, use, launch,\n - develop, or distribute any automated system, including without limitation, any\n - spider, robot, cheat utility, scraper, offline reader, or any data mining or\n-- similar data gathering extraction tools to\u00a0access the Instance, or use\u00a0or\n+- similar data gathering extraction tools to access the Instance, or use or\n - launch any unauthorized script or other software; Interfere with, disable,\n-- vandalize\u00a0or disrupt the Instance or servers or networks connected to the\n+- vandalize or disrupt the Instance or servers or networks connected to the\n - Instance; Hack into, penetrate, disable, or otherwise circumvent the security\n - measures of the Instance or servers or networks connected to the Instance; or\n - otherwise use the Instance in any way that violates any applicable national,\n@@ -90,11 +90,11 @@ the Content on the Instance.\n ## DMCA Copyright Infringement Notice\n \n We have implemented the procedures described in the Digital Millennium Copyright\n-Act of 1998 (\"DMCA\"),\u00a017 U.S.C. \u00a7 512\u00a0, regarding the reporting of alleged\n+Act of 1998 (\"DMCA\"), 17 U.S.C. \u00a7 512 , regarding the reporting of alleged\n copyright infringement and the removal of or disabling access to infringing\n-material. If you have a good faith belief that copyrighted material\u00a0on\u00a0the\n-Instance\u00a0is being used in a way that infringes a copyright over which you are\n-authorized\u00a0to act, you may make a Notice of Infringing Material.\u00a0If you have a\n+material. If you have a good faith belief that copyrighted material on the\n+Instance is being used in a way that infringes a copyright over which you are\n+authorized to act, you may make a Notice of Infringing Material. If you have a\n good faith belief that copyrighted material that was removed or access to which\n was disabled was a result of a mistake or misidentification, then you may make a\n Notice of Counter-Notification.\n@@ -103,57 +103,57 @@ Before serving a Notice of Infringing Material or Counter-Notification, you may\n wish to contact a lawyer to better understand your rights and obligations under\n the DMCA and other applicable laws. For example, if your Notice or\n Counter-Notifications fails to comply with all requirements of sections\n-512(c)(3) or 512(g)(3), respectively, your\u00a0Notice\u00a0or Counter-Notification may\n+512(c)(3) or 512(g)(3), respectively, your Notice or Counter-Notification may\n not be effective.\n \n ### Termination of Repeat Infringers\n \n-We will terminate or disable your use of the Instance\u00a0in appropriate\n+We will terminate or disable your use of the Instance in appropriate\n circumstances if you are deemed by us to be a repeat copyright infringer.\n \n ### Notices and Counter-Notifications must be sent to:\n \n DMCA Agent: Copyright Manager\n \n-Address:\u00a0%{dmca_address}\n+Address: %{dmca_address}\n \n Email: %{dmca_email}\n \n ## Disclaimer\n \n-Administrator reserves the right\u00a0in our sole discretion\u00a0to modify or\n-discontinue, temporarily or permanently, the Instance\u00a0(or any part thereof) with\n+Administrator reserves the right in our sole discretion to modify or\n+discontinue, temporarily or permanently, the Instance (or any part thereof) with\n or without notice to you. You agree that Administrator will not be liable to\n you or to any third party for any modification or discontinuance of the\n Instance, except as set forth in the \"Limitation of Liability\" section below.\n \n You understand that we are not responsible for any activities or legal\n consequences of your use of the Instance. Users are responsible for using the\n-Instance\u00a0in compliance with all applicable laws and regulations of the\n+Instance in compliance with all applicable laws and regulations of the\n jurisdictions in which such users are domiciled, reside, or are located at the\n-time of such access or use,\u00a0as well as these Terms. Any violation of these\n+time of such access or use, as well as these Terms. Any violation of these\n Terms may result in the suspension or termination by us, in our sole discretion,\n of your access to and use of the Instance.\n \n ## Limitation of Liability\n \n-In no event will Administrator\u2019s total liability to you for all damages, losses,\n+In no event will Administrator's total liability to you for all damages, losses,\n or causes of action exceed one hundred dollars ($100). If you are dissatisfied\n with the Instance or with these Terms, your sole remedy is to discontinue your\n use of the Instance.\n \n ## Links to and From Other Websites\n \n-You may gain access to other websites and Instances via links on the Instance.\u00a0\n+You may gain access to other websites and Instances via links on the Instance.\n These Terms apply to the Instance only and do not apply to Mastodon, other\n Instances, or other parties' websites. Similarly, you may have come to the\n Instance via a link from another website or Instance. The terms of use of other\n-websites and Instances do not apply to the Instance. Administrator\u00a0assumes no\n+websites and Instances do not apply to the Instance. Administrator assumes no\n responsibility for any terms of use or material outside of the Instance accessed\n via any link. You are free to establish a hypertext link to the Instance so\n long as the link does not state or imply any sponsorship of your website,\n-instance or service by\u00a0Administrator\u00a0or the Instance. Unless expressly agreed\n-to by us in writing,\u00a0reference to any of our products, services, processes or\n+instance or service by Administrator or the Instance. Unless expressly agreed\n+to by us in writing, reference to any of our products, services, processes or\n other information, by trade name, trademark, logo, or otherwise by you or any\n third party does not constitute or imply endorsement, sponsorship or\n recommendation thereof by us. You may not, without our prior written\n@@ -175,7 +175,7 @@ us, will be resolved exclusively through final and binding arbitration before a\n neutral arbitrator, rather than in a court by a judge or jury, in accordance\n with the terms of this Arbitration Agreement, except that, where available, you\n or we may (but are not required to) assert individual Claims in small claims\n-court if such Claims are within the scope of such court\u2019s jurisdiction. Further,\n+court if such Claims are within the scope of such court's jurisdiction. Further,\n this Arbitration Agreement does not preclude you from bringing issues to the\n attention of federal, state/provincial, or local agencies, and such agencies\n can, if the law allows, seek relief against us on your behalf. You agree that,\n@@ -203,7 +203,7 @@ Instance has your contact information, the Instance will send its Notice to you\n using the last email address we have on file for you if you have provided us\n with an email address (each, a \u201cNotice Address\u201d). The Notice must (i) describe\n the nature and basis of the Claim in sufficient detail to evaluate the merits of\n-the claiming party\u2019s Claim and (ii) set forth the specific relief sought,\n+the claiming party's Claim and (ii) set forth the specific relief sought,\n including the amount of money (if any) that is demanded and the means by which\n the demanding party calculated the claimed amount. Both parties agree that they\n will attempt to resolve a Claim through informal negotiation within sixty (60)\n@@ -242,33 +242,33 @@ pursue a Claim in a local small claims court rather than through arbitration so\n long as the matter remains in a small claims court and proceeds only on an\n individual basis.\n \n-## Choice of Law\u00a0\n+## Choice of Law\n \n-Any and all\u00a0claims related to or arising out of your use of, or access to the\n-Instance\u00a0shall be governed by internal substantive\u00a0laws\u00a0of New York in all\n+Any and all claims related to or arising out of your use of, or access to the\n+Instance shall be governed by internal substantive laws of New York in all\n respects, without regard for the jurisdiction or forum in which you are\n domiciled, reside, or located at the time of such access or use.\n \n-## Waiver and Severability\u00a0\n+## Waiver and Severability\n \n-If you do not comply with\u00a0a portion of these Terms and we do not\u00a0take action\n-right away, this does not mean we are giving up any of our rights\u00a0under these\n+If you do not comply with a portion of these Terms and we do not take action\n+right away, this does not mean we are giving up any of our rights under these\n Terms. If any part of these Terms is determined to be invalid or unenforceable\n-by a court of competent jurisdiction\u00a0or arbitrator, the remainder of the Terms\n-shall\u00a0be enforced to the maximum extent permitted by law.\n+by a court of competent jurisdiction or arbitrator, the remainder of the Terms\n+shall be enforced to the maximum extent permitted by law.\n \n ## Notices\n \n All notices to Administrator under these Terms, unless otherwise specified shall\n-be\u00a0sent\u00a0to\u00a0%{admin_email}. Service of any notice will be deemed given on the\n+be sent to %{admin_email}. Service of any notice will be deemed given on the\n date of receipt delivered by email.\n \n ## Changes to these Terms\n \n-We may\u00a0change or modify\u00a0these Terms by posting a revised version on the\n+We may change or modify these Terms by posting a revised version on the\n Instance, or by otherwise providing notice to you, and will state at the top of\n-the revised Terms the date they were last\u00a0revised. Changes will not apply\n-retroactively and will become effective no\u00a0earlier\u00a0than\u00a0fourteen\u00a0(14) calendar\n+the revised Terms the date they were last revised. Changes will not apply\n+retroactively and will become effective no earlier than fourteen (14) calendar\n days after they are posted, except for changes addressing changes made for legal\n reasons, which will be effective immediately. Your continued use of the\n-Instance\u00a0after any change means you agree to\u00a0the new Terms.\n+Instance after any change means you agree to the new Terms.\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: [Advanced mode] Edited post UI with image, displays atop pre-existing search listing\n\nIssue Description:\n### Steps to reproduce the problem\n\nI saw this today on v4.3.0-nightly.2024-10-01 on firefox 130.0.1 snap version on Ubuntu 24.04. Reproduces across many refreshes. I think this is a regression, I feel like I've done this series of steps before but not seen the problem.\r\n\r\nBelow is a video (due to some sort of bug on my computer, the mouse cursor appears fixed in this video, although it is in fact moving).\r\n\r\nSteps in video:\r\n- Start from a new mastodon.social window.\r\n- Do a search (in this search from:mcc, so I get my own posts)\r\n- Select a post with an image. It will appear in the rightmost column.\r\n- Click \u22ef on the post in the rightmost column and choose \"Edit\".\r\n- The image from the edited post ONLY appears floating atop the search column. \r\n\r\n[Screencast from 2024-10-01 17-36-31.webm](https://github.com/user-attachments/assets/8f5eb1b4-ad24-46b7-b002-54939cbce228)\r\n\n\n### Expected behaviour\n\nChoosing \"edit\" should dismiss the search column. If choosing edit does not dismiss the search column, the edit pane appearing \"behind\" the search column and not reappearing until the search column is closed would also be entirely acceptable.\n\n### Actual behaviour\n\nEdit UI appears both behind and in front of the search column.\n\n### Detailed description\n\nIn this video, uBlock Origin is ON and Stylus is OFF.\n\n### Mastodon instance\n\n-\n\n### Mastodon version\n\n-\n\n### Browser name and version\n\n-\n\n### Operating system\n\n-\n\n### Technical details\n\n-\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -3611,6 +3611,7 @@ $ui-header-logo-wordmark-width: 99px;\n   overflow-y: auto;\n   width: 100%;\n   height: 100%;\n+  z-index: 0;\n }\n \n .drawer__inner__mastodon {\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/notifications_v2/components/notification_group.tsx\n@@ -20,6 +20,21 @@ import { NotificationSeveredRelationships } from './notification_severed_relatio\n import { NotificationStatus } from './notification_status';\n import { NotificationUpdate } from './notification_update';\n \n+function missingActivity(notificationGroup: NotificationGroupModel) {\n+  switch (notificationGroup.type) {\n+    case 'reblog':\n+    case 'favourite':\n+    case 'mention':\n+    case 'update':\n+    case 'status':\n+    case 'poll':\n+      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- our type is actually not correct as the server can occasionally have orphaned notifications\n+      return notificationGroup.statusId === null;\n+    default:\n+      return false;\n+  }\n+}\n+\n export const NotificationGroup: React.FC<{\n   notificationGroupId: NotificationGroupModel['group_key'];\n   unread: boolean;\n@@ -60,7 +75,12 @@ export const NotificationGroup: React.FC<{\n     [dispatch, notificationGroupId, accountId, onMoveUp, onMoveDown],\n   );\n \n-  if (!notificationGroup || notificationGroup.type === 'gap') return null;\n+  if (\n+    !notificationGroup ||\n+    notificationGroup.type === 'gap' ||\n+    missingActivity(notificationGroup)\n+  )\n+    return null;\n \n   let content;\n \n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\nChoice C:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice D:\nlib/mastodon/cli/feeds.rb\n@@ -5,6 +5,7 @@\n module Mastodon::CLI\n   class Feeds < Base\n     include Redisable\n+    include DatabaseHelper\n \n     option :all, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n@@ -44,6 +45,38 @@ def clear\n       say('OK', :green)\n     end\n \n+    desc 'vacuum', 'Remove home feeds of inactive users from Redis'\n+    long_desc <<-LONG_DESC\n+      Running this task should not be needed in most cases, as Mastodon will\n+      automatically clean up feeds from inactive accounts every day.\n+\n+      However, this task is more aggressive in order to clean up feeds that\n+      may have been missed because of bugs or database mishaps.\n+    LONG_DESC\n+    def vacuum\n+      with_read_replica do\n+        say('Deleting orphaned home feeds\u2026')\n+        redis.scan_each(match: 'feed:home:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = User.confirmed.signed_in_recently.where(account_id: ids).pluck(:account_id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+\n+        say('Deleting orphaned list feeds\u2026')\n+        redis.scan_each(match: 'feed:list:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = List.where(account_id: User.confirmed.signed_in_recently.select(:account_id)).where(id: ids).pluck(:id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+      end\n+    end\n+\n     private\n \n     def active_user_accounts\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: New Restrictive Form Action CSP breaks OMNIAUTH_ONLY\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\n1. Setup a server with OMNIAUTH_ONLY configured\r\n2. Try clicking the login button on the main webpage\r\n\r\n\r\n### Expected behaviour\r\n\r\ncan get redirected to provider\r\n\r\n### Actual behaviour\r\n\r\nget csp error in console\r\n\r\n### Detailed description\r\n\r\ni suspect that https://github.com/mastodon/mastodon/pull/26897 broke omniauth_only.\r\nthe login button on the main page would redirect to https://INSTANCE/auth/auth/openid_connect which then takes you to the oidc provider. this is blocked by the new form-action policy. turning off omniauth_only makes it work as does logging in via /auth/sign_in.\r\nI was able to fix this by hardcoding p.form_action in the web app controller concern to be https://INSTANCE/auth/auth/openid_connect . i've reverted the change for now to showcase current behaviour.\r\n\r\n### Mastodon instance\r\n\r\nm.fa.gl\r\n\r\n### Mastodon version\r\n\r\nv4.3.0-beta.2\r\n\r\n### Browser name and version\r\n\r\nFirefox 130, Edge 129\r\n\r\n### Operating system\r\n\r\nWindows 11\r\n\r\n### Technical details\r\n\r\nCSP error in console:\r\n>  Refused to send form data to 'https://m.fa.gl/auth/auth/openid_connect' because it violates the following Content Security Policy directive: \"form-action https://auth.home.fa.gl/api/oidc/authorization\".\r\n\n\n---\n\nChoice A:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice B:\napp/controllers/concerns/web_app_controller_concern.rb\n@@ -13,7 +13,7 @@ module WebAppControllerConcern\n       policy = ContentSecurityPolicy.new\n \n       if policy.sso_host.present?\n-        p.form_action policy.sso_host\n+        p.form_action policy.sso_host, -> { \"https://#{request.host}/auth/auth/\" }\n       else\n         p.form_action :none\n       end\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/reducers/compose.js\n@@ -402,7 +402,7 @@ export default function compose(state = initialState, action) {\n       .set('isUploadingThumbnail', false)\n       .update('media_attachments', list => list.map(item => {\n         if (item.get('id') === action.media.id) {\n-          return fromJS(action.media);\n+          return fromJS(action.media).set('unattached', item.get('unattached'));\n         }\n \n         return item;\n---\n\n\n---\n\nChoice D:\nlib/mastodon/cli/feeds.rb\n@@ -5,6 +5,7 @@\n module Mastodon::CLI\n   class Feeds < Base\n     include Redisable\n+    include DatabaseHelper\n \n     option :all, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n@@ -44,6 +45,38 @@ def clear\n       say('OK', :green)\n     end\n \n+    desc 'vacuum', 'Remove home feeds of inactive users from Redis'\n+    long_desc <<-LONG_DESC\n+      Running this task should not be needed in most cases, as Mastodon will\n+      automatically clean up feeds from inactive accounts every day.\n+\n+      However, this task is more aggressive in order to clean up feeds that\n+      may have been missed because of bugs or database mishaps.\n+    LONG_DESC\n+    def vacuum\n+      with_read_replica do\n+        say('Deleting orphaned home feeds\u2026')\n+        redis.scan_each(match: 'feed:home:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = User.confirmed.signed_in_recently.where(account_id: ids).pluck(:account_id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+\n+        say('Deleting orphaned list feeds\u2026')\n+        redis.scan_each(match: 'feed:list:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = List.where(account_id: User.confirmed.signed_in_recently.select(:account_id)).where(id: ids).pluck(:id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+      end\n+    end\n+\n     private\n \n     def active_user_accounts\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Missing 'allow-popups' directive from sandbox attribute in embed.js causes browsers to prevent users directly opening links within the embed iframe\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Click \"Get embed code\" on any Mastodon post\r\n2. Publish the generated embed code on any website\r\n3. Go to the website and click on any link within the embed iframe\r\n4. Links do not open and browser shows console message `Blocked opening '[...]' in a new window because the request was made in a sandboxed frame whose 'allow-popups' permission is not set.`\n\n### Expected behaviour\n\nUser should be able to click on links within IFrame and they should open the corresponding Mastodon post, user profile, etc.\n\n### Actual behaviour\n\nBrowser blocks opening of links\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\nmastodon.social\n\n### Mastodon version\n\nv4.3.0-nightly.2024-09-26\n\n### Browser name and version\n\nGoogle Chrome Version 129.0.6668.70 (Official Build) (64-bit)\n\n### Operating system\n\nUbuntu 24.04.01\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -1996,6 +1996,7 @@ body > [data-popper-placement] {\n \n         &__handle {\n           user-select: all;\n+          overflow-wrap: anywhere;\n         }\n       }\n \n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/components/status.jsx\n@@ -397,6 +397,7 @@ class Status extends ImmutablePureComponent {\n     const connectUp = previousId && previousId === status.get('in_reply_to_id');\n     const connectToRoot = rootId && rootId === status.get('in_reply_to_id');\n     const connectReply = nextInReplyToId && nextInReplyToId === status.get('id');\n+    const matchedFilters = status.get('matched_filters');\n \n     if (featured) {\n       prepend = (\n@@ -432,7 +433,6 @@ class Status extends ImmutablePureComponent {\n       );\n     }\n \n-    const matchedFilters = status.get('matched_filters');\n     const expanded = (!matchedFilters || this.state.showDespiteFilter) && (!status.get('hidden') || status.get('spoiler_text').length === 0);\n \n     if (hidden) {\n---\n\n\n---\n\nChoice C:\nspec/rails_helper.rb\n@@ -37,11 +37,14 @@\n \n require 'spec_helper'\n require 'rspec/rails'\n+require 'rspec-sidekiq'\n require 'webmock/rspec'\n require 'paperclip/matchers'\n require 'capybara/rspec'\n require 'chewy/rspec'\n+require 'email_spec'\n require 'email_spec/rspec'\n+require 'database_cleaner/active_record'\n require 'test_prof/recipes/rspec/before_all'\n \n Dir[Rails.root.join('spec', 'support', '**', '*.rb')].each { |f| require f }\n---\n\n\n---\n\nChoice D:\npublic/embed.js\n@@ -81,7 +81,7 @@ const allowedPrefixes = (document.currentScript && document.currentScript.tagNam\n       embeds.set(id, iframe);\n \n       iframe.allow = 'fullscreen';\n-      iframe.sandbox = 'allow-scripts allow-same-origin';\n+      iframe.sandbox = 'allow-scripts allow-same-origin allow-popups';\n       iframe.style.border = 0;\n       iframe.style.overflow = 'hidden';\n       iframe.style.display = 'block';\n@@ -112,7 +112,7 @@ const allowedPrefixes = (document.currentScript && document.currentScript.tagNam\n       iframe.width = container.clientWidth;\n       iframe.height = 0;\n       iframe.allow = 'fullscreen';\n-      iframe.sandbox = 'allow-scripts allow-same-origin';\n+      iframe.sandbox = 'allow-scripts allow-same-origin allow-popups';\n       iframe.style.border = 0;\n       iframe.style.overflow = 'hidden';\n       iframe.style.display = 'block';\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Some received statuses dont process and die with `Regexp::TimeoutError: regexp match timeout`\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Receive status\r\n2. Check sidekiq morgue for failed jobs\r\n3. See failed `activitypub::ProcessingWorker` jobs with the error `Regexp::TimeoutError: regexp match timeout`\r\n4. Attempting to view the status manually results in an http 500\n\n### Expected behaviour\n\nFor the status to be processed and delivered locally\n\n### Actual behaviour\n\nThe status cannot be processed and is never delivered locally\n\n### Detailed description\n\nAn example status received:\r\n```\r\n109498147060647699, \"{\\\"@context\\\":[\\\"https://www.w3.org/ns/activitystreams\\\",{\\\"ostatus\\\":\\\"http://ostatus.org#\\\",\\\"atomUri\\\":\\\"ostatus:atomUri\\\",\\\"inReplyToAtomUri\\\":\\\"ostatus:inReplyToAtomUri\\\",\\\"conversation\\\":\\\"ostatus:conversation\\\",\\\"sensitive\\\":\\\"as:sensitive\\\",\\\"toot\\\":\\\"http://joinmastodon.org/ns#\\\",\\\"votersCount\\\":\\\"toot:votersCount\\\",\\\"blurhash\\\":\\\"toot:blurhash\\\",\\\"focalPoint\\\":{\\\"@container\\\":\\\"@list\\\",\\\"@id\\\":\\\"toot:focalPoint\\\"},\\\"Hashtag\\\":\\\"as:Hashtag\\\"},\\\"https://w3id.org/security/v1\\\"],\\\"id\\\":\\\"https://mastodon.social/users/gwaldby/statuses/113187318090872531/activity\\\",\\\"type\\\":\\\"Create\\\",\\\"actor\\\":\\\"https://mastodon.social/users/gwaldby\\\",\\\"published\\\":\\\"2024-09-23T14:23:31Z\\\",\\\"to\\\":[\\\"https://www.w3.org/ns/activitystreams#Public\\\"],\\\"cc\\\":[\\\"https://mastodon.social/users/gwaldby/followers\\\"],\\\"object\\\":{\\\"id\\\":\\\"https://mastodon.social/users/gwaldby/statuses/113187318090872531\\\",\\\"type\\\":\\\"Note\\\",\\\"summary\\\":null,\\\"inReplyTo\\\":null,\\\"published\\\":\\\"2024-09-23T14:23:31Z\\\",\\\"url\\\":\\\"https://mastodon.social/@gwaldby/113187318090872531\\\",\\\"attributedTo\\\":\\\"https://mastodon.social/users/gwaldby\\\",\\\"to\\\":[\\\"https://www.w3.org/ns/activitystreams#Public\\\"],\\\"cc\\\":[\\\"https://mastodon.social/users/gwaldby/followers\\\"],\\\"sensitive\\\":false,\\\"atomUri\\\":\\\"https://mastodon.social/users/gwaldby/statuses/113187318090872531\\\",\\\"inReplyToAtomUri\\\":null,\\\"conversation\\\":\\\"tag:mastodon.social,2024-09-23:objectId=805965626:objectType=Conversation\\\",\\\"content\\\":\\\"\\\\u003cp\\\\u003eJosh Riley is running for Congress with a promise: he will never take a penny from corporate PACs because he\\\\u0026#39;s fighting for neighborhoods like the one that raised \u2013-not the special interests. \\\\u003ca href=\\\\\\\"https://mastodon.social/tags/BlueWaveRising\\\\\\\" class=\\\\\\\"mention hashtag\\\\\\\" rel=\\\\\\\"tag\\\\\\\"\\\\u003e#\\\\u003cspan\\\\u003eBlueWaveRising\\\\u003c/span\\\\u003e\\\\u003c/a\\\\u003e \\\\u003ca href=\\\\\\\"https://mastodon.social/tags/NY19\\\\\\\" class=\\\\\\\"mention hashtag\\\\\\\" rel=\\\\\\\"tag\\\\\\\"\\\\u003e#\\\\u003cspan\\\\u003eNY19\\\\u003c/span\\\\u003e\\\\u003c/a\\\\u003e\\\\u003c/p\\\\u003e\\\",\\\"contentMap\\\":{\\\"en\\\":\\\"\\\\u003cp\\\\u003eJosh Riley is running for Congress with a promise: he will never take a penny from corporate PACs because he\\\\u0026#39;s fighting for neighborhoods like the one that raised \u2013-not the special interests. \\\\u003ca href=\\\\\\\"https://mastodon.social/tags/BlueWaveRising\\\\\\\" class=\\\\\\\"mention hashtag\\\\\\\" rel=\\\\\\\"tag\\\\\\\"\\\\u003e#\\\\u003cspan\\\\u003eBlueWaveRising\\\\u003c/span\\\\u003e\\\\u003c/a\\\\u003e \\\\u003ca href=\\\\\\\"https://mastodon.social/tags/NY19\\\\\\\" class=\\\\\\\"mention hashtag\\\\\\\" rel=\\\\\\\"tag\\\\\\\"\\\\u003e#\\\\u003cspan\\\\u003eNY19\\\\u003c/span\\\\u003e\\\\u003c/a\\\\u003e\\\\u003c/p\\\\u003e\\\"},\\\"attachment\\\":[{\\\"type\\\":\\\"Document\\\",\\\"mediaType\\\":\\\"video/mp4\\\",\\\"url\\\":\\\"https://files.mastodon.social/media_attachments/files/113/187/316/991/092/664/original/900a9dfa0b6a85d1.mp4\\\",\\\"name\\\":null,\\\"blurhash\\\":\\\"UKH{ZsMc4TMwJE8^t7j^MbV?IU%gt7Rjoex]\\\",\\\"width\\\":1920,\\\"height\\\":1080}],\\\"tag\\\":[{\\\"type\\\":\\\"Hashtag\\\",\\\"href\\\":\\\"https://mastodon.social/tags/bluewaverising\\\",\\\"name\\\":\\\"#bluewaverising\\\"},{\\\"type\\\":\\\"Hashtag\\\",\\\"href\\\":\\\"https://mastodon.social/tags/ny19\\\",\\\"name\\\":\\\"#ny19\\\"}],\\\"replies\\\":{\\\"id\\\":\\\"https://mastodon.social/users/gwaldby/statuses/113187318090872531/replies\\\",\\\"type\\\":\\\"Collection\\\",\\\"first\\\":{\\\"type\\\":\\\"CollectionPage\\\",\\\"next\\\":\\\"https://mastodon.social/users/gwaldby/statuses/113187318090872531/replies?only_other_accounts=true\\\\u0026page=true\\\",\\\"partOf\\\":\\\"https://mastodon.social/users/gwaldby/statuses/113187318090872531/replies\\\",\\\"items\\\":[]}}},\\\"signature\\\":{\\\"type\\\":\\\"RsaSignature2017\\\",\\\"creator\\\":\\\"https://mastodon.social/users/gwaldby#main-key\\\",\\\"created\\\":\\\"2024-09-23T14:23:31Z\\\",\\\"signatureValue\\\":\\\"niqGozMzferTAQSLIHwDAl/vIbPbIKFB/C7aXnxHxjS8wnFsMFyOoI+F2Jsy/ckn181fYVYCswYO2M2VYm6xAd0QS854CK96Loq6Mc1LnnXCDlLWGrLEe4Szx6PSRss1aISlGpEHH9yFXyGFpqphZL0Z+bwve9pSj+ahjKjRCRQ/fh0VPfnxZzmXjiFGMbO68TXZfq2WGOSZLKuT0tf5dCVaWechl8NkH8Nc6XF1vXt2jM7rrHqsSZFg7Kk9J9VujhfCOypHRD6O4+Lqvp7Bkl5OYbm31LTn3JkCCCFXyNtGFOizcFTAUhVl9T3Kzz07h734c8YRFr8qIGwk+K54/A==\\\"}}\", nil, \"Account\"\r\n```\r\n\r\nThe backtrace:\r\n```\r\n/home/mastodon/live/vendor/bundle/ruby/3.3.0/gems/httplog-1.7.0/lib/httplog/http_log.rb:271:in `gsub'\r\n/home/mastodon/live/vendor/bundle/ruby/3.3.0/gems/httplog-1.7.0/lib/httplog/http_log.rb:271:in `block in masked'\r\n/home/mastodon/live/vendor/bundle/ruby/3.3.0/gems/httplog-1.7.0/lib/httplog/http_log.rb:269:in `each'\r\n```\n\n### Mastodon instance\n\nraphus.social\n\n### Mastodon version\n\nv4.3.0-beta2\n\n### Technical details\n\nIf this is happening on your own Mastodon server, please fill out those:\r\n- Ruby version: ruby 3.3.5 (2024-09-03 revision ef084cc8f4) [x86_64-linux]\r\n- Node.js version: v20.5.1\r\n\n\n---\n\nChoice A:\nconfig/initializers/regexp.rb\n@@ -1,4 +1,4 @@\n # frozen_string_literal: true\n \n-# 0.5s is a fairly high timeout, but that should account for slow servers under load\n-Regexp.timeout = 0.5 if Regexp.respond_to?(:timeout=)\n+# 2s is a fairly high default, but that should account for slow servers under load\n+Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n---\nconfig/initializers/regexp.rb\n@@ -1,4 +0,0 @@\n-# frozen_string_literal: true\n-\n-# 2s is a fairly high default, but that should account for slow servers under load\n-Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n---\nconfig/initializers/regexp.rb\n@@ -1,4 +1,3 @@\n # frozen_string_literal: true\n \n-# 2s is a fairly high default, but that should account for slow servers under load\n-Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n+Regexp.timeout = ENV['REGEXP_TIMEOUT'].to_f if Regexp.respond_to?(:timeout=) && ENV['REGEXP_TIMEOUT']\n---\nGemfile\n@@ -53,7 +53,7 @@ gem 'hiredis', '~> 0.6'\n gem 'htmlentities', '~> 4.3'\n gem 'http', '~> 5.2.0'\n gem 'http_accept_language', '~> 2.1'\n-gem 'httplog', '~> 1.7.0'\n+gem 'httplog', '~> 1.7.0', require: false\n gem 'i18n'\n gem 'idn-ruby', require: 'idn'\n gem 'inline_svg'\n---\nconfig/initializers/httplog.rb\n@@ -1,7 +1,12 @@\n # frozen_string_literal: true\n \n-HttpLog.configure do |config|\n-  config.logger = Rails.logger\n-  config.color = { color: :yellow }\n-  config.compact_log = true\n+# Disable httplog in production unless log_level is `debug`\n+if !Rails.env.production? || Rails.configuration.log_level == :debug\n+  require 'httplog'\n+\n+  HttpLog.configure do |config|\n+    config.logger = Rails.logger\n+    config.color = { color: :yellow }\n+    config.compact_log = true\n+  end\n end\n---\n\n\n---\n\nChoice B:\nspec/lib/search_query_transformer_spec.rb\n@@ -16,6 +16,7 @@\n       ['\"2022-01-01\"', '2022-01-01'],\n       ['12345678', '12345678'],\n       ['\"12345678\"', '12345678'],\n+      ['\"2024-10-31T23:47:20Z\"', '2024-10-31T23:47:20Z'],\n     ].each do |value, parsed|\n       context \"with #{operator}:#{value}\" do\n         let(:query) { \"#{operator}:#{value}\" }\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/features/ui/components/columns_area.jsx\n@@ -63,8 +63,8 @@ export default class ColumnsArea extends ImmutablePureComponent {\n     children: PropTypes.node,\n   };\n \n-  // Corresponds to (max-width: $no-gap-breakpoint + 285px - 1px) in SCSS\n-  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1174px)');\n+  // Corresponds to (max-width: $no-gap-breakpoint - 1px) in SCSS\n+  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1206px)');\n \n   state = {\n     renderComposePanel: !(this.mediaQuery && this.mediaQuery.matches),\n---\napp/javascript/styles/mastodon/variables.scss\n@@ -87,7 +87,7 @@ $media-modal-media-max-width: 100%;\n // put margins on top and bottom of image to avoid the screen covered by image.\n $media-modal-media-max-height: 80%;\n \n-$no-gap-breakpoint: 1175px;\n+$no-gap-breakpoint: 1207px;\n $mobile-breakpoint: 630px;\n \n $font-sans-serif: 'mastodon-font-sans-serif' !default;\n---\napp/javascript/mastodon/features/ui/components/columns_area.jsx\n@@ -62,7 +62,7 @@ export default class ColumnsArea extends ImmutablePureComponent {\n   };\n \n   // Corresponds to (max-width: $no-gap-breakpoint - 1px) in SCSS\n-  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1206px)');\n+  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1174px)');\n \n   state = {\n     renderComposePanel: !(this.mediaQuery && this.mediaQuery.matches),\n---\napp/javascript/styles/mastodon/components.scss\n@@ -2708,7 +2708,7 @@ a.account__display-name {\n     &__main {\n       box-sizing: border-box;\n       width: 100%;\n-      flex: 0 0 auto;\n+      flex: 0 1 auto;\n       display: flex;\n       flex-direction: column;\n \n---\napp/javascript/styles/mastodon/variables.scss\n@@ -87,7 +87,7 @@ $media-modal-media-max-width: 100%;\n // put margins on top and bottom of image to avoid the screen covered by image.\n $media-modal-media-max-height: 80%;\n \n-$no-gap-breakpoint: 1207px;\n+$no-gap-breakpoint: 1175px;\n $mobile-breakpoint: 630px;\n \n $font-sans-serif: 'mastodon-font-sans-serif' !default;\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/components.scss\n@@ -9288,6 +9288,7 @@ noscript {\n   border: 1px solid $highlight-text-color;\n   background: rgba($highlight-text-color, 0.15);\n   overflow: hidden;\n+  flex-shrink: 0;\n \n   &__background-image {\n     width: 125%;\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Reply-All button shifts action bar icons to the side\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\n![Mastodon web interface. One action-bar with a 0-comments thread-icon, and one action bar with a 1 comment, single-thread icon. The remaining icons (share, fav, save, menu) are offset by a couple of pixels.](https://github.com/user-attachments/assets/4e6148d7-5641-415c-86a4-90c7884d0cac)\r\n\r\nSame, but on 4.3 mastodon.social (as of creating the ticket)\r\n![image](https://github.com/user-attachments/assets/19059e6a-e408-46ee-8b52-bf26d825c8bc)\r\n\r\n\r\n### Expected behaviour\r\n\r\nThe action-bar is a static grid with space allocated for each button. Changing the width of one element, shouldn't affect the other elements (within reasonable limits).\r\n\r\n### Actual behaviour\r\n\r\nAs the reply-all button is wider than the reply button the action bar icons realign.\r\n\r\n### Detailed description\r\n\r\n_No response_\r\n\r\n### Mastodon instance\r\n\r\nmastodon.social\r\n\r\n### Mastodon version\r\n\r\nv4.2.12 & v4.3.0-nightly.2024-09-23\r\n\r\n### Browser name and version\r\n\r\nEdge 129\r\n\r\n### Operating system\r\n\r\nWindows 11, 23h2\r\n\r\n### Technical details\r\n\r\n_No response_\n\n---\n\nChoice A:\napp/models/trends/statuses.rb\n@@ -106,7 +106,7 @@ def klass\n   private\n \n   def eligible?(status)\n-    status.public_visibility? && status.account.discoverable? && !status.account.silenced? && !status.account.sensitized? && status.spoiler_text.blank? && !status.sensitive? && !status.reply? && valid_locale?(status.language)\n+    status.created_at.past? && status.public_visibility? && status.account.discoverable? && !status.account.silenced? && !status.account.sensitized? && status.spoiler_text.blank? && !status.sensitive? && !status.reply? && valid_locale?(status.language)\n   end\n \n   def calculate_scores(statuses, at_time)\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/components/status_action_bar.jsx\n@@ -375,20 +375,29 @@ class StatusActionBar extends ImmutablePureComponent {\n \n     return (\n       <div className='status__action-bar'>\n-        <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n-        <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n-        <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n-        <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n-\n-        <DropdownMenuContainer\n-          scrollKey={scrollKey}\n-          status={status}\n-          items={menu}\n-          icon='ellipsis-h'\n-          iconComponent={MoreHorizIcon}\n-          direction='right'\n-          title={intl.formatMessage(messages.more)}\n-        />\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <DropdownMenuContainer\n+            scrollKey={scrollKey}\n+            status={status}\n+            items={menu}\n+            icon='ellipsis-h'\n+            iconComponent={MoreHorizIcon}\n+            direction='right'\n+            title={intl.formatMessage(messages.more)}\n+          />\n+        </div>\n       </div>\n     );\n   }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -299,6 +299,10 @@\n     }\n   }\n \n+  &--with-counter {\n+    padding-inline-end: 4px;\n+  }\n+\n   &__counter {\n     display: block;\n     width: auto;\n@@ -1465,6 +1469,15 @@ body > [data-popper-placement] {\n     }\n   }\n \n+  &__action-bar__button-wrapper {\n+    flex-basis: 0;\n+    flex-grow: 1;\n+\n+    &:last-child {\n+      flex-grow: 0;\n+    }\n+  }\n+\n   &--first-in-thread {\n     border-top: 1px solid var(--background-border-color);\n   }\n---\n\n\n---\n\nChoice C:\napp/services/post_status_service.rb\n@@ -134,7 +134,7 @@ def validate_media!\n \n     @media = @account.media_attachments.where(status_id: nil).where(id: @options[:media_ids].take(Status::MEDIA_ATTACHMENTS_LIMIT).map(&:to_i))\n \n-    not_found_ids = @options[:media_ids] - @media.map(&:id)\n+    not_found_ids = @options[:media_ids].map(&:to_i) - @media.map(&:id)\n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.not_found', ids: not_found_ids.join(', ')) if not_found_ids.any?\n \n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.images_and_video') if @media.size > 1 && @media.find(&:audio_or_video?)\n---\napp/services/update_status_service.rb\n@@ -73,7 +73,7 @@ def validate_media!\n \n     media_attachments = @status.account.media_attachments.where(status_id: [nil, @status.id]).where(scheduled_status_id: nil).where(id: @options[:media_ids].take(Status::MEDIA_ATTACHMENTS_LIMIT).map(&:to_i)).to_a\n \n-    not_found_ids = @options[:media_ids] - media_attachments.map(&:id)\n+    not_found_ids = @options[:media_ids].map(&:to_i) - media_attachments.map(&:id)\n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.not_found', ids: not_found_ids.join(', ')) if not_found_ids.any?\n \n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.images_and_video') if media_attachments.size > 1 && media_attachments.find(&:audio_or_video?)\n---\nspec/services/post_status_service_spec.rb\n@@ -34,15 +34,15 @@\n \n     it 'schedules a status for future creation and does not create one immediately' do\n       media = Fabricate(:media_attachment, account: account)\n-      status = subject.call(account, text: 'Hi future!', media_ids: [media.id], scheduled_at: future)\n+      status = subject.call(account, text: 'Hi future!', media_ids: [media.id.to_s], scheduled_at: future)\n \n       expect(status)\n         .to be_a(ScheduledStatus)\n         .and have_attributes(\n           scheduled_at: eq(future),\n           params: include(\n             'text' => eq('Hi future!'),\n-            'media_ids' => contain_exactly(media.id)\n+            'media_ids' => contain_exactly(media.id.to_s)\n           )\n         )\n       expect(media.reload.status).to be_nil\n@@ -219,7 +219,7 @@\n     status = subject.call(\n       account,\n       text: 'test status update',\n-      media_ids: [media.id]\n+      media_ids: [media.id.to_s]\n     )\n \n     expect(media.reload.status).to eq status\n@@ -233,7 +233,7 @@\n       subject.call(\n         account,\n         text: 'test status update',\n-        media_ids: [media.id]\n+        media_ids: [media.id.to_s]\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n@@ -249,7 +249,7 @@\n       subject.call(\n         account,\n         text: 'test status update',\n-        media_ids: Array.new(2) { Fabricate(:media_attachment, account: account) }.map(&:id)\n+        media_ids: Array.new(2) { Fabricate(:media_attachment, account: account) }.map { |m| m.id.to_s }\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n@@ -271,7 +271,7 @@\n         media_ids: [\n           video,\n           image,\n-        ].map(&:id)\n+        ].map { |m| m.id.to_s }\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n---\nspec/services/update_status_service_spec.rb\n@@ -69,7 +69,7 @@\n \n     before do\n       status.media_attachments << detached_media_attachment\n-      subject.call(status, status.account_id, text: 'Foo', media_ids: [attached_media_attachment.id])\n+      subject.call(status, status.account_id, text: 'Foo', media_ids: [attached_media_attachment.id.to_s])\n     end\n \n     it 'updates media attachments' do\n@@ -95,7 +95,7 @@\n \n     before do\n       status.media_attachments << media_attachment\n-      subject.call(status, status.account_id, text: 'Foo', media_ids: [media_attachment.id], media_attributes: [{ id: media_attachment.id, description: 'New description' }])\n+      subject.call(status, status.account_id, text: 'Foo', media_ids: [media_attachment.id.to_s], media_attributes: [{ id: media_attachment.id, description: 'New description' }])\n     end\n \n     it 'does not detach media attachment' do\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/components/status.jsx\n@@ -397,6 +397,7 @@ class Status extends ImmutablePureComponent {\n     const connectUp = previousId && previousId === status.get('in_reply_to_id');\n     const connectToRoot = rootId && rootId === status.get('in_reply_to_id');\n     const connectReply = nextInReplyToId && nextInReplyToId === status.get('id');\n+    const matchedFilters = status.get('matched_filters');\n \n     if (featured) {\n       prepend = (\n@@ -432,7 +433,6 @@ class Status extends ImmutablePureComponent {\n       );\n     }\n \n-    const matchedFilters = status.get('matched_filters');\n     const expanded = (!matchedFilters || this.state.showDespiteFilter) && (!status.get('hidden') || status.get('spoiler_text').length === 0);\n \n     if (hidden) {\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: sidekiq: FeedInsertWorker: undefined method `account_id' for nil:NilClass\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. use the instance normally.\r\n\r\n\n\n### Expected behaviour\n\nhome feed is not empty\n\n### Actual behaviour\n\nhome feed is empty and there are many failed sidekiq jobs\n\n### Detailed description\n\n1. My home feed is suddenly empty, and `RAILS_ENV=production ./bin/tootctl feeds build` does not solve it.\r\n2. the log of sidekiq seems to say it could not insert into feed.\n\n### Mastodon instance\n\njing.lgbt\n\n### Mastodon version\n\nv4.2.12\n\n### Technical details\n\nIf this is happening on your own Mastodon server, please fill out those:\r\n- Ruby version: ruby 3.2.3 (2024-01-18 revision 52bb2ac0a6) [x86_64-linux]\r\n- Node.js version: v20.17.0\r\n\r\njournald:\r\n```\r\nSep 20 01:38:48 mastodon1 bundle[1042215]: 2024-09-19T16:38:48.333Z pid=1042215 tid=ilnj class=FeedInsertWorker jid=537fcecfb09c55be7366b105 INFO: start\r\nSep 20 01:38:48 mastodon1 bundle[1042215]: 2024-09-19T16:38:48.344Z pid=1042215 tid=ilnj class=FeedInsertWorker jid=537fcecfb09c55be7366b105 elapsed=0.012 INFO: fail\r\nSep 20 01:38:48 mastodon1 bundle[1042215]: 2024-09-19T16:38:48.344Z pid=1042215 tid=ilnj WARN: {\"context\":\"Job raised exception\",\"job\":{\"retry\":true,\"queue\":\"default\",\"class\":\"FeedInsertWorker\",\"args\":[113159302227197083,111832116425341006,\"home\",{\"update\":null}],\"jid\":\"537fcecfb09c55be7366b105\",\"created_at\":1726673923.177217,\"enqueued_at\":1726763928.3325593,\"error_message\":\"undefined method `account_id' for nil:NilClass\",\"error_class\":\"NoMethodError\",\"failed_at\":1726673923.183306,\"retry_count\":13,\"retried_at\":1726735322.2056925}}\r\nSep 20 01:38:48 mastodon1 bundle[1042215]: 2024-09-19T16:38:48.344Z pid=1042215 tid=ilnj WARN: NoMethodError: undefined method `account_id' for nil:NilClass\r\nSep 20 01:38:48 mastodon1 bundle[1042215]: 2024-09-19T16:38:48.344Z pid=1042215 tid=ilnj WARN: /home/mastodon/live/app/lib/feed_manager.rb:561:in `block in build_crutches'\r\nSep 20 01:38:48 mastodon1 bundle[1042215]: /home/mastodon/live/app/lib/feed_manager.rb:556:in `each'\r\nSep 20 01:38:48 mastodon1 bundle[1042215]: /home/mastodon/live/app/lib/feed_manager.rb:556:in `flat_map'\r\n```\n\n---\n\nChoice A:\napp/lib/feed_manager.rb\n@@ -558,7 +558,7 @@ def build_crutches(receiver_id, statuses)\n       arr = crutches[:active_mentions][s.id] || []\n       arr.push(s.account_id)\n \n-      if s.reblog?\n+      if s.reblog? && s.reblog.present?\n         arr.push(s.reblog.account_id)\n         arr.concat(crutches[:active_mentions][s.reblog_of_id] || [])\n       end\n---\n\n\n---\n\nChoice B:\napp/services/post_status_service.rb\n@@ -134,7 +134,7 @@ def validate_media!\n \n     @media = @account.media_attachments.where(status_id: nil).where(id: @options[:media_ids].take(Status::MEDIA_ATTACHMENTS_LIMIT).map(&:to_i))\n \n-    not_found_ids = @options[:media_ids] - @media.map(&:id)\n+    not_found_ids = @options[:media_ids].map(&:to_i) - @media.map(&:id)\n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.not_found', ids: not_found_ids.join(', ')) if not_found_ids.any?\n \n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.images_and_video') if @media.size > 1 && @media.find(&:audio_or_video?)\n---\napp/services/update_status_service.rb\n@@ -73,7 +73,7 @@ def validate_media!\n \n     media_attachments = @status.account.media_attachments.where(status_id: [nil, @status.id]).where(scheduled_status_id: nil).where(id: @options[:media_ids].take(Status::MEDIA_ATTACHMENTS_LIMIT).map(&:to_i)).to_a\n \n-    not_found_ids = @options[:media_ids] - media_attachments.map(&:id)\n+    not_found_ids = @options[:media_ids].map(&:to_i) - media_attachments.map(&:id)\n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.not_found', ids: not_found_ids.join(', ')) if not_found_ids.any?\n \n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.images_and_video') if media_attachments.size > 1 && media_attachments.find(&:audio_or_video?)\n---\nspec/services/post_status_service_spec.rb\n@@ -34,15 +34,15 @@\n \n     it 'schedules a status for future creation and does not create one immediately' do\n       media = Fabricate(:media_attachment, account: account)\n-      status = subject.call(account, text: 'Hi future!', media_ids: [media.id], scheduled_at: future)\n+      status = subject.call(account, text: 'Hi future!', media_ids: [media.id.to_s], scheduled_at: future)\n \n       expect(status)\n         .to be_a(ScheduledStatus)\n         .and have_attributes(\n           scheduled_at: eq(future),\n           params: include(\n             'text' => eq('Hi future!'),\n-            'media_ids' => contain_exactly(media.id)\n+            'media_ids' => contain_exactly(media.id.to_s)\n           )\n         )\n       expect(media.reload.status).to be_nil\n@@ -219,7 +219,7 @@\n     status = subject.call(\n       account,\n       text: 'test status update',\n-      media_ids: [media.id]\n+      media_ids: [media.id.to_s]\n     )\n \n     expect(media.reload.status).to eq status\n@@ -233,7 +233,7 @@\n       subject.call(\n         account,\n         text: 'test status update',\n-        media_ids: [media.id]\n+        media_ids: [media.id.to_s]\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n@@ -249,7 +249,7 @@\n       subject.call(\n         account,\n         text: 'test status update',\n-        media_ids: Array.new(2) { Fabricate(:media_attachment, account: account) }.map(&:id)\n+        media_ids: Array.new(2) { Fabricate(:media_attachment, account: account) }.map { |m| m.id.to_s }\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n@@ -271,7 +271,7 @@\n         media_ids: [\n           video,\n           image,\n-        ].map(&:id)\n+        ].map { |m| m.id.to_s }\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n---\nspec/services/update_status_service_spec.rb\n@@ -69,7 +69,7 @@\n \n     before do\n       status.media_attachments << detached_media_attachment\n-      subject.call(status, status.account_id, text: 'Foo', media_ids: [attached_media_attachment.id])\n+      subject.call(status, status.account_id, text: 'Foo', media_ids: [attached_media_attachment.id.to_s])\n     end\n \n     it 'updates media attachments' do\n@@ -95,7 +95,7 @@\n \n     before do\n       status.media_attachments << media_attachment\n-      subject.call(status, status.account_id, text: 'Foo', media_ids: [media_attachment.id], media_attributes: [{ id: media_attachment.id, description: 'New description' }])\n+      subject.call(status, status.account_id, text: 'Foo', media_ids: [media_attachment.id.to_s], media_attributes: [{ id: media_attachment.id, description: 'New description' }])\n     end\n \n     it 'does not detach media attachment' do\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/components.scss\n@@ -3611,6 +3611,7 @@ $ui-header-logo-wordmark-width: 99px;\n   overflow-y: auto;\n   width: 100%;\n   height: 100%;\n+  z-index: 0;\n }\n \n .drawer__inner__mastodon {\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Text is overlapping in hashtag moderation view for status in French\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Go to `admin/tags/`\r\n2. Select any tag\r\n\r\n![image](https://github.com/user-attachments/assets/685db191-2e96-4132-a667-a16abe47676e)\r\n\n\n### Expected behaviour\n\nText is displayed on 1 line\n\n### Actual behaviour\n\nText is displayed on 2 lines and overlapping next block\n\n### Detailed description\n\nText for status of hashtag moderation is overlapping the next line because it is displayed on 2 lines.\n\n### Mastodon instance\n\nsocial.coukaratcha.fr\n\n### Mastodon version\n\nv4.3.0-beta.2\n\n### Browser name and version\n\nFirefox 130.0.1 (64 bits)\n\n### Operating system\n\nWindows 11\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\nstreaming/index.js\n@@ -1351,15 +1351,23 @@ const startServer = async () => {\n  * @param {function(string): void} [onSuccess]\n  */\n const attachServerWithConfig = (server, onSuccess) => {\n-  if (process.env.SOCKET || process.env.PORT && isNaN(+process.env.PORT)) {\n-    server.listen(process.env.SOCKET || process.env.PORT, () => {\n+  if (process.env.SOCKET) {\n+    server.listen(process.env.SOCKET, () => {\n       if (onSuccess) {\n         fs.chmodSync(server.address(), 0o666);\n         onSuccess(server.address());\n       }\n     });\n   } else {\n-    server.listen(+(process.env.PORT || 4000), process.env.BIND || '127.0.0.1', () => {\n+    const port = +(process.env.PORT || 4000);\n+    let bind = process.env.BIND ?? '127.0.0.1';\n+    // Web uses the URI syntax for BIND, which means IPv6 addresses may\n+    // be wrapped in square brackets:\n+    if (bind.startsWith('[') && bind.endsWith(']')) {\n+      bind = bind.slice(1, -1);\n+    }\n+\n+    server.listen(port, bind, () => {\n       if (onSuccess) {\n         onSuccess(`${server.address().address}:${server.address().port}`);\n       }\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/status/components/card.jsx\n@@ -141,7 +141,7 @@ export default class Card extends PureComponent {\n     const showAuthor  = !!card.getIn(['authors', 0, 'accountId']);\n \n     const description = (\n-      <div className='status-card__content'>\n+      <div className='status-card__content' dir='auto'>\n         <span className='status-card__host'>\n           <span lang={language}>{provider}</span>\n           {card.get('published_at') && <> \u00b7 <RelativeTimestamp timestamp={card.get('published_at')} /></>}\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/api_types/accounts.ts\n@@ -13,7 +13,7 @@ export interface ApiAccountRoleJSON {\n }\n \n // See app/serializers/rest/account_serializer.rb\n-export interface ApiAccountJSON {\n+export interface BaseApiAccountJSON {\n   acct: string;\n   avatar: string;\n   avatar_static: string;\n@@ -45,3 +45,12 @@ export interface ApiAccountJSON {\n   memorial?: boolean;\n   hide_collections: boolean;\n }\n+\n+// See app/serializers/rest/muted_account_serializer.rb\n+export interface ApiMutedAccountJSON extends BaseApiAccountJSON {\n+  mute_expires_at?: string | null;\n+}\n+\n+// For now, we have the same type representing both `Account` and `MutedAccount`\n+// objects, but we should refactor this in the future.\n+export type ApiAccountJSON = ApiMutedAccountJSON;\n---\napp/javascript/mastodon/models/account.ts\n@@ -95,6 +95,9 @@ export const accountDefaultValues: AccountShape = {\n   limited: false,\n   moved: null,\n   hide_collections: false,\n+  // This comes from `ApiMutedAccountJSON`, but we should eventually\n+  // store that in a different object.\n+  mute_expires_at: null,\n };\n \n const AccountFactory = ImmutableRecord<AccountShape>(accountDefaultValues);\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/dashboard.scss\n@@ -86,9 +86,7 @@\n     color: $primary-text-color;\n     transition: all 100ms ease-in;\n     font-size: 14px;\n-    padding: 0 16px;\n-    line-height: 36px;\n-    height: 36px;\n+    padding: 8px 16px;\n     text-decoration: none;\n     margin-bottom: 4px;\n \n---\napp/javascript/styles/mastodon/dashboard.scss\n@@ -91,6 +91,7 @@\n     height: 36px;\n     text-decoration: none;\n     margin-bottom: 4px;\n+    white-space: nowrap;\n \n     &:active,\n     &:focus,\n@@ -111,6 +112,8 @@\n \n     span {\n       flex: 1 1 auto;\n+      overflow: hidden;\n+      text-overflow: ellipsis;\n     }\n \n     strong {\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: No-gap layout is used at sizes that are too large for it to work well\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Open the mastodon web interface on a large tablet in landscape mode\r\n\n\n### Expected behaviour\n\nNicely proportioned three-column layout\n\n### Actual behaviour\n\nStretched out version of a layout that\u2019s more appropriate for phones held in portrait orientation\n\n### Detailed description\n\nWith #31889, the breakpoint for the no-gap layout was increased to 1206px. This results in at least some iPads in landscape orientation (where we expect to see a full desktop-class layout on most websites) getting the no-gap layout, where it is strangely proportioned and less functional than the previous three-column layout. In particular, because the no-gap layout stretches everything to almost the full width of the display, portrait images end up being too tall to see the entire image, link preview cards are nearly full-screen (on a tablet, this is physically very large!), and text-only posts create large areas of whitespace.\r\n\r\nPrior to this change:\r\n![323378668-42f09faa-7f19-4b75-a3ef-1b9fcbd62033](https://github.com/user-attachments/assets/fee614a0-1b4a-49f9-ab6d-a4cf3e007fb4)\r\n\r\nAfter this change (on an 11\u201d iPad Pro), showing how you can\u2019t even see the entirety of one post that has a link preview card in it:\r\n![368347295-6f1fe061-a3ae-42df-905a-5b447349e4d3](https://github.com/user-attachments/assets/39b0e0f6-49df-4446-a7f5-cb544e39df55)\r\n\n\n### Mastodon instance\n\nmastodon.social, mastodon.online\n\n### Mastodon version\n\nv4.3.0-beta.2+pr-31960-9262aa2\n\n### Browser name and version\n\nSafari (iPadOS 18.0)\n\n### Operating system\n\niPadOS 18.0\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/mastodon/features/ui/components/columns_area.jsx\n@@ -63,8 +63,8 @@ export default class ColumnsArea extends ImmutablePureComponent {\n     children: PropTypes.node,\n   };\n \n-  // Corresponds to (max-width: $no-gap-breakpoint + 285px - 1px) in SCSS\n-  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1174px)');\n+  // Corresponds to (max-width: $no-gap-breakpoint - 1px) in SCSS\n+  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1206px)');\n \n   state = {\n     renderComposePanel: !(this.mediaQuery && this.mediaQuery.matches),\n---\napp/javascript/styles/mastodon/variables.scss\n@@ -87,7 +87,7 @@ $media-modal-media-max-width: 100%;\n // put margins on top and bottom of image to avoid the screen covered by image.\n $media-modal-media-max-height: 80%;\n \n-$no-gap-breakpoint: 1175px;\n+$no-gap-breakpoint: 1207px;\n $mobile-breakpoint: 630px;\n \n $font-sans-serif: 'mastodon-font-sans-serif' !default;\n---\napp/javascript/mastodon/features/ui/components/columns_area.jsx\n@@ -62,7 +62,7 @@ export default class ColumnsArea extends ImmutablePureComponent {\n   };\n \n   // Corresponds to (max-width: $no-gap-breakpoint - 1px) in SCSS\n-  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1206px)');\n+  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1174px)');\n \n   state = {\n     renderComposePanel: !(this.mediaQuery && this.mediaQuery.matches),\n---\napp/javascript/styles/mastodon/components.scss\n@@ -2708,7 +2708,7 @@ a.account__display-name {\n     &__main {\n       box-sizing: border-box;\n       width: 100%;\n-      flex: 0 0 auto;\n+      flex: 0 1 auto;\n       display: flex;\n       flex-direction: column;\n \n---\napp/javascript/styles/mastodon/variables.scss\n@@ -87,7 +87,7 @@ $media-modal-media-max-width: 100%;\n // put margins on top and bottom of image to avoid the screen covered by image.\n $media-modal-media-max-height: 80%;\n \n-$no-gap-breakpoint: 1207px;\n+$no-gap-breakpoint: 1175px;\n $mobile-breakpoint: 630px;\n \n $font-sans-serif: 'mastodon-font-sans-serif' !default;\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/api_types/accounts.ts\n@@ -13,7 +13,7 @@ export interface ApiAccountRoleJSON {\n }\n \n // See app/serializers/rest/account_serializer.rb\n-export interface ApiAccountJSON {\n+export interface BaseApiAccountJSON {\n   acct: string;\n   avatar: string;\n   avatar_static: string;\n@@ -45,3 +45,12 @@ export interface ApiAccountJSON {\n   memorial?: boolean;\n   hide_collections: boolean;\n }\n+\n+// See app/serializers/rest/muted_account_serializer.rb\n+export interface ApiMutedAccountJSON extends BaseApiAccountJSON {\n+  mute_expires_at?: string | null;\n+}\n+\n+// For now, we have the same type representing both `Account` and `MutedAccount`\n+// objects, but we should refactor this in the future.\n+export type ApiAccountJSON = ApiMutedAccountJSON;\n---\napp/javascript/mastodon/models/account.ts\n@@ -95,6 +95,9 @@ export const accountDefaultValues: AccountShape = {\n   limited: false,\n   moved: null,\n   hide_collections: false,\n+  // This comes from `ApiMutedAccountJSON`, but we should eventually\n+  // store that in a different object.\n+  mute_expires_at: null,\n };\n \n const AccountFactory = ImmutableRecord<AccountShape>(accountDefaultValues);\n---\n\n\n---\n\nChoice C:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice D:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: [Accessibility] The main scrollbar is too thin and is difficult to grab.\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Go on Mastodon web interface on your desktop and look at the scrollbars sizes, mainly the main scrollbar totally on the right.\r\n2. Some people, including me, can't grab it with the mouse because it's too thin.\n\n### Expected behaviour\n\nI can grab the scrollbar with the mouse to scroll because it's normal size.\n\n### Actual behaviour\n\nI can't grab the scrollbar with the mouse to scroll because it's too thin.\n\n### Detailed description\n\nThe main scrollbar (on the `html` element) is too thin and it's very difficult to grab it to scroll with the mouse. On the screenshot below, this is the scrollbar on the right. The other for the navigation is normal size.\r\n\r\n![Screenshot of Mastodon interface with the thin main scrollbar and a normal size one for the navigation](https://github.com/user-attachments/assets/7f7f2f10-3297-4461-8e30-18932e88901f)\r\n\r\nI've found this code in the CSS which is the problem:\r\n\r\n```css\r\n@supports not selector(::-webkit-scrollbar) {\r\n  html {\r\n    scrollbar-color: #606085 var(--background-border-color);\r\n    scrollbar-width: thin;\r\n  }\r\n}\r\n```\r\n\r\nThere is an [\"Accessibility\" section on MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-width#accessibility) to explain why the CSS property `scrollbar-width` is a problem when you fix the `thin` value.\r\n\r\nIs it possible to remove this property from the CSS? Or to add an option so that users can choose if they want the normal size for scrollbar or a thin size?\r\n\r\nThanks\n\n### Mastodon instance\n\neldritch.cafe\n\n### Mastodon version\n\nv4.3.0\n\n### Browser name and version\n\nFirefox 130\n\n### Operating system\n\nWindows 11\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/mastodon/features/notifications_v2/components/notification_group.tsx\n@@ -20,6 +20,21 @@ import { NotificationSeveredRelationships } from './notification_severed_relatio\n import { NotificationStatus } from './notification_status';\n import { NotificationUpdate } from './notification_update';\n \n+function missingActivity(notificationGroup: NotificationGroupModel) {\n+  switch (notificationGroup.type) {\n+    case 'reblog':\n+    case 'favourite':\n+    case 'mention':\n+    case 'update':\n+    case 'status':\n+    case 'poll':\n+      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- our type is actually not correct as the server can occasionally have orphaned notifications\n+      return notificationGroup.statusId === null;\n+    default:\n+      return false;\n+  }\n+}\n+\n export const NotificationGroup: React.FC<{\n   notificationGroupId: NotificationGroupModel['group_key'];\n   unread: boolean;\n@@ -60,7 +75,12 @@ export const NotificationGroup: React.FC<{\n     [dispatch, notificationGroupId, accountId, onMoveUp, onMoveDown],\n   );\n \n-  if (!notificationGroup || notificationGroup.type === 'gap') return null;\n+  if (\n+    !notificationGroup ||\n+    notificationGroup.type === 'gap' ||\n+    missingActivity(notificationGroup)\n+  )\n+    return null;\n \n   let content;\n \n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\nChoice B:\npublic/embed.js\n@@ -81,7 +81,7 @@ const allowedPrefixes = (document.currentScript && document.currentScript.tagNam\n       embeds.set(id, iframe);\n \n       iframe.allow = 'fullscreen';\n-      iframe.sandbox = 'allow-scripts allow-same-origin';\n+      iframe.sandbox = 'allow-scripts allow-same-origin allow-popups';\n       iframe.style.border = 0;\n       iframe.style.overflow = 'hidden';\n       iframe.style.display = 'block';\n@@ -112,7 +112,7 @@ const allowedPrefixes = (document.currentScript && document.currentScript.tagNam\n       iframe.width = container.clientWidth;\n       iframe.height = 0;\n       iframe.allow = 'fullscreen';\n-      iframe.sandbox = 'allow-scripts allow-same-origin';\n+      iframe.sandbox = 'allow-scripts allow-same-origin allow-popups';\n       iframe.style.border = 0;\n       iframe.style.overflow = 'hidden';\n       iframe.style.display = 'block';\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/reset.scss\n@@ -56,7 +56,6 @@ table {\n @supports not selector(::-webkit-scrollbar) {\n   html {\n     scrollbar-color: $action-button-color var(--background-border-color);\n-    scrollbar-width: thin;\n   }\n }\n \n---\napp/javascript/styles/mastodon-light/diff.scss\n@@ -524,14 +524,3 @@ a.sparkline {\n     color: $dark-text-color;\n   }\n }\n-\n-@supports not selector(::-webkit-scrollbar) {\n-  html {\n-    scrollbar-color: rgba($action-button-color, 0.25)\n-      var(--background-border-color);\n-  }\n-}\n-\n-::-webkit-scrollbar-thumb {\n-  opacity: 0.25;\n-}\n---\napp/javascript/styles/mastodon/reset.scss\n@@ -52,32 +52,3 @@ table {\n   border-collapse: collapse;\n   border-spacing: 0;\n }\n-\n-@supports not selector(::-webkit-scrollbar) {\n-  html {\n-    scrollbar-color: $action-button-color var(--background-border-color);\n-    scrollbar-width: thin;\n-  }\n-}\n-\n-::-webkit-scrollbar {\n-  width: 8px;\n-  height: 8px;\n-}\n-\n-::-webkit-scrollbar-thumb {\n-  background-color: $action-button-color;\n-  border: 2px var(--background-border-color);\n-  border-radius: 12px;\n-  width: 6px;\n-  box-shadow: inset 0 0 0 2px var(--background-border-color);\n-}\n-\n-::-webkit-scrollbar-track {\n-  background-color: var(--background-border-color);\n-  border-radius: 0px;\n-}\n-\n-::-webkit-scrollbar-corner {\n-  background: transparent;\n-}\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Default focus on modal dialogs\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\n1. Turn on boost confirmation option\r\n2. Try to boost some post\r\n3. Press <kbd>Space</kbd> or <kbd>Enter</kbd> to confirm\r\n...\r\n\r\n\r\n### Expected behaviour\r\n\r\nPressing space or enter press confirmation button on dialog\r\n\r\n### Actual behaviour\r\n\r\nDefault focus is gone, Need to tab, shift+tab to focus on confirmation button to proceed\r\n\r\n### Detailed description\r\n\r\nOn Mastodon v4.2, Boost confirmation dialog has focused on confirmation button by default. So user can just press space or enter key to proceed (Shift+tab enter to press cancel button)\r\nAfter dialog rework, Default focus is gone. So user need to press shift+tab and tab to focus on confirmation button\r\n\r\nSame applied on post delete confirmation dialog\r\n\r\n### Mastodon instance\r\n\r\nmastodon.social\r\n\r\n### Mastodon version\r\n\r\nv4.3\r\n\r\n### Browser name and version\r\n\r\nFirefox 130.0\r\n\r\n### Operating system\r\n\r\nUbuntu 24.04.1 LTS\r\n\r\n### Technical details\r\n\r\n_No response_\n\n---\n\nChoice A:\nstreaming/index.js\n@@ -1351,15 +1351,23 @@ const startServer = async () => {\n  * @param {function(string): void} [onSuccess]\n  */\n const attachServerWithConfig = (server, onSuccess) => {\n-  if (process.env.SOCKET || process.env.PORT && isNaN(+process.env.PORT)) {\n-    server.listen(process.env.SOCKET || process.env.PORT, () => {\n+  if (process.env.SOCKET) {\n+    server.listen(process.env.SOCKET, () => {\n       if (onSuccess) {\n         fs.chmodSync(server.address(), 0o666);\n         onSuccess(server.address());\n       }\n     });\n   } else {\n-    server.listen(+(process.env.PORT || 4000), process.env.BIND || '127.0.0.1', () => {\n+    const port = +(process.env.PORT || 4000);\n+    let bind = process.env.BIND ?? '127.0.0.1';\n+    // Web uses the URI syntax for BIND, which means IPv6 addresses may\n+    // be wrapped in square brackets:\n+    if (bind.startsWith('[') && bind.endsWith(']')) {\n+      bind = bind.slice(1, -1);\n+    }\n+\n+    server.listen(port, bind, () => {\n       if (onSuccess) {\n         onSuccess(`${server.address().address}:${server.address().port}`);\n       }\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/ui/components/block_modal.jsx\n@@ -99,7 +99,7 @@ export const BlockModal = ({ accountId, acct }) => {\n             <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n           </button>\n \n-          <Button onClick={handleClick}>\n+          <Button onClick={handleClick} autoFocus>\n             <FormattedMessage id='confirmations.block.confirm' defaultMessage='Block' />\n           </Button>\n         </div>\n---\napp/javascript/mastodon/features/ui/components/confirmation_modals/confirmation_modal.tsx\n@@ -71,7 +71,10 @@ export const ConfirmationModal: React.FC<\n             />\n           </button>\n \n-          <Button onClick={handleClick}>{confirm}</Button>\n+          {/* eslint-disable-next-line jsx-a11y/no-autofocus -- we are in a modal and thus autofocusing is justified */}\n+          <Button onClick={handleClick} autoFocus>\n+            {confirm}\n+          </Button>\n         </div>\n       </div>\n     </div>\n---\napp/javascript/mastodon/features/ui/components/domain_block_modal.jsx\n@@ -88,7 +88,7 @@ export const DomainBlockModal = ({ domain, accountId, acct }) => {\n             <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n           </button>\n \n-          <Button onClick={handleClick}>\n+          <Button onClick={handleClick} autoFocus>\n             <FormattedMessage id='domain_block_modal.block' defaultMessage='Block server' />\n           </Button>\n         </div>\n---\napp/javascript/mastodon/features/ui/components/mute_modal.jsx\n@@ -137,7 +137,7 @@ export const MuteModal = ({ accountId, acct }) => {\n             <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n           </button>\n \n-          <Button onClick={handleClick}>\n+          <Button onClick={handleClick} autoFocus>\n             <FormattedMessage id='confirmations.mute.confirm' defaultMessage='Mute' />\n           </Button>\n         </div>\n---\napp/javascript/mastodon/features/ui/components/boost_modal.tsx\n@@ -128,6 +128,8 @@ export const BoostModal: React.FC<{\n                 ? messages.cancel_reblog\n                 : messages.reblog,\n             )}\n+            /* eslint-disable-next-line jsx-a11y/no-autofocus -- We are in the modal */\n+            autoFocus\n           />\n         </div>\n       </div>\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -3611,6 +3611,7 @@ $ui-header-logo-wordmark-width: 99px;\n   overflow-y: auto;\n   width: 100%;\n   height: 100%;\n+  z-index: 0;\n }\n \n .drawer__inner__mastodon {\n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix all notification types being stored without filtering when polling\n\nIssue Description:\nSimilar to #31384 but for polling code\n\n---\n\nChoice A:\napp/models/user_role.rb\n@@ -41,7 +41,7 @@ class UserRole < ApplicationRecord\n   EVERYONE_ROLE_ID = -99\n   NOBODY_POSITION = -1\n \n-  POSITION_LIMIT = 2**31\n+  POSITION_LIMIT = (2**31) - 1\n \n   module Flags\n     NONE = 0\n@@ -91,7 +91,7 @@ module Flags\n \n   validates :name, presence: true, unless: :everyone?\n   validates :color, format: { with: /\\A#?(?:[A-F0-9]{3}){1,2}\\z/i }, unless: -> { color.blank? }\n-  validates :position, numericality: { greater_than_or_equal_to: -POSITION_LIMIT, less_than_or_equal_to: POSITION_LIMIT }\n+  validates :position, numericality: { in: (-POSITION_LIMIT..POSITION_LIMIT) }\n \n   validate :validate_permissions_elevation\n   validate :validate_position_elevation\n---\nspec/models/user_role_spec.rb\n@@ -21,11 +21,9 @@\n     describe 'position' do\n       subject { Fabricate.build :user_role }\n \n-      let(:excess) { 2**32 }\n-      let(:limit) { 2**31 }\n+      let(:limit) { described_class::POSITION_LIMIT }\n \n-      it { is_expected.to_not allow_values(-excess, excess).for(:position) }\n-      it { is_expected.to allow_values(-limit, limit).for(:position) }\n+      it { is_expected.to validate_numericality_of(:position).is_in(-limit..limit) }\n     end\n \n     describe 'color' do\n---\n\n\n---\n\nChoice B:\napp/validators/poll_expiration_validator.rb\n@@ -5,9 +5,12 @@ class PollExpirationValidator < ActiveModel::Validator\n   MIN_EXPIRATION = 5.minutes.freeze\n \n   def validate(poll)\n+    # We have a `presence: true` check for this attribute already\n+    return if poll.expires_at.nil?\n+\n     current_time = Time.now.utc\n \n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice C:\napp/lib/link_details_extractor.rb\n@@ -62,7 +62,8 @@ def date_modified\n     end\n \n     def author_name\n-      author['name']\n+      name = author['name']\n+      name.is_a?(Array) ? name.join(', ') : name\n     end\n \n     def author_url\n@@ -294,7 +295,7 @@ def detector\n   def html_entities_decode(string)\n     return if string.nil?\n \n-    unicode_string = string.encode('UTF-8')\n+    unicode_string = string.to_s.encode('UTF-8')\n     raise EncodingError, 'cannot convert string to valid UTF-8' unless unicode_string.valid_encoding?\n \n     html_entities.decode(unicode_string)\n---\nspec/lib/link_details_extractor_spec.rb\n@@ -192,6 +192,35 @@\n \n       include_examples 'structured data'\n     end\n+\n+    context 'with author names as array' do\n+      let(:ld_json) do\n+        {\n+          '@context' => 'https://schema.org',\n+          '@type' => 'NewsArticle',\n+          'headline' => 'A lot of authors',\n+          'description' => 'But we decided to cram them into one',\n+          'author' => {\n+            '@type' => 'Person',\n+            'name' => ['Author 1', 'Author 2'],\n+          },\n+        }.to_json\n+      end\n+      let(:html) { <<~HTML }\n+        <!doctype html>\n+        <html>\n+        <body>\n+          <script type=\"application/ld+json\">\n+            #{ld_json}\n+          </script>\n+        </body>\n+        </html>\n+      HTML\n+\n+      it 'joins author names' do\n+        expect(subject.author_name).to eq 'Author 1, Author 2'\n+      end\n+    end\n   end\n \n   context 'when Open Graph protocol data is present' do\n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -10,21 +10,24 @@ The following changelog entries focus on changes visible to users, administrator\n \n - **Add confirmation interstitial instead of silently redirecting logged-out visitors to remote resources** (#27792, #28902, and #30651 by @ClearlyClaire and @Gargron)\\\n   This fixes a longstanding open redirect in Mastodon, at the cost of added friction when local links to remote resources are shared.\n+- Change `form-action` Content-Security-Policy directive to be more restrictive (#26897 by @ClearlyClaire)\n+- Update dependencies\n \n ### Added\n \n-- **Add experimental server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, and #31513 by @ClearlyClaire, @mgmn, and @renchap)\\\n+- **Add server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, #31513, #31592, #31594, #31638, #31746, #31652, #31709, #31725, #31745, #31613, #31657, #31840, #31610 and #31929 by @ClearlyClaire, @Gargron, @mgmn, and @renchap)\\\n   Group notifications of the same type for the same target, so that your notifications no longer get cluttered by boost and favorite notifications as soon as a couple of your posts get traction.\\\n   This is done server-side so that clients can efficiently get relevant groups without having to go through numerous pages of individual notifications.\\\n   As part of this, the visual design of the entire notifications feature has been revamped.\\\n   This feature is intended to eventually replace the existing notifications column, but for this first beta, users will have to enable it in the \u201cExperimental features\u201d section of the notifications column settings.\\\n   The API is not final yet, but it consists of:\n   - a new `group_key` attribute to `Notification` entities\n-  - `GET /api/v2_alpha/notifications`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-grouped\n-  - `GET /api/v2_alpha/notifications/:group_key`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-notification-group\n-  - `POST /api/v2_alpha/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/notifications_alpha/#dismiss-group\n-  - `GET /api/v2_alpha/notifications/:unread_count`: https://docs.joinmastodon.org/methods/notifications_alpha/#unread-group-count\n-- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, and #31541 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n+  - `GET /api/v2/notifications`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-grouped\n+  - `GET /api/v2/notifications/:group_key`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-notification-group\n+  - `GET /api/v2/notifications/:group_key/accounts`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-group-accounts\n+  - `POST /api/v2/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/grouped_notifications/#dismiss-group\n+  - `GET /api/v2/notifications/:unread_count`: https://docs.joinmastodon.org/methods/grouped_notifications/#unread-group-count\n+- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, #31541, and #31723 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n   The old \u201cBlock notifications from non-followers\u201d, \u201cBlock notifications from people you don't follow\u201d and \u201cBlock direct messages from people you don't follow\u201d notification settings have been replaced by a new set of settings found directly in the notification column.\\\n   You can now separately filter or drop notifications from people you don't follow, people who don't follow you, accounts created within the past 30 days, as well as unsolicited private mentions, and accounts limited by the moderation.\\\n   Instead of being outright dropped, notifications that you chose to filter are put in a separate \u201cFiltered notifications\u201d box that you can review separately without it clogging your main notifications.\\\n@@ -57,26 +60,31 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add timeline of public posts about a trending link** (#30381 and #30840 by @Gargron)\\\n   You can now see public posts mentioning currently-trending articles from people who have opted into discovery features.\\\n   This adds a new REST API endpoint: https://docs.joinmastodon.org/methods/timelines/#link\n-- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, and #30846 by @Gargron)\\\n+- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, #30846, #31819, and #31900 by @Gargron and @oneiros)\\\n   This adds a mechanism to [highlight the author of news articles](https://blog.joinmastodon.org/2024/07/highlighting-journalism-on-mastodon/) shared on Mastodon.\\\n   Articles hosted outside the fediverse can indicate a fediverse author with a meta tag:\n   ```html\n   <meta name=\"fediverse:creator\" content=\"username@domain\" />\n   ```\n   On the API side, this is represented by a new `authors` attribute to the `PreviewCard` entity: https://docs.joinmastodon.org/entities/PreviewCard/#authors\\\n-  Note that this feature is still work in progress and the tagging format and verification mechanisms may change in future releases.\n+  Users can allow arbitrary domains to use `fediverse:creator` to credit them by visiting `/settings/verification`.\\\n+  This is federated as a new `attributionDomains` property in the `http://joinmastodon.org/ns` namespace, containing an array of domain names: https://docs.joinmastodon.org/spec/activitypub/#properties-used-1\n - **Add in-app notifications for moderation actions and warnings** (#30065, #30082, and #30081 by @ClearlyClaire)\\\n   In addition to email notifications, also notify users of moderation actions or warnings against them directly within the app, so they are less likely to miss important communication from their moderators.\\\n   This adds the `moderation_warning` notification type to the REST API and streaming, with a new [`moderation_warning` attribute](https://docs.joinmastodon.org/entities/Notification/#moderation_warning).\n - **Add domain information to profiles in web UI** (#29602 by @Gargron)\\\n   Clicking the domain of a user in their profile will now open a tooltip with a short explanation about servers and federation.\n+- **Add support for Redis sentinel** (#31694, #31623, #31744, #31767, and #31768 by @ThisIsMissEm and @oneiros)\\\n+  See https://docs.joinmastodon.org/admin/scaling/#redis-sentinel\n - Add ability to reorder uploaded media before posting in web UI (#28456 by @Gargron)\n - Add moderation interface for searching hashtags (#30880 by @ThisIsMissEm)\n - Add ability for admins to configure instance favicon and logo (#30040, #30208, #30259, #30375, #30734, #31016, and #30205 by @ClearlyClaire, @FawazFarid, @JasonPunyon, @mgmn, and @renchap)\\\n   This is also exposed through the REST API: https://docs.joinmastodon.org/entities/Instance/#icon\n - Add `api_versions` to `/api/v2/instance` (#31354 by @ClearlyClaire)\\\n   Add API version number to make it easier for clients to detect compatible features going forward.\\\n   See API documentation at https://docs.joinmastodon.org/entities/Instance/#api-versions\n+- Add quick links to Administration and Moderation Reports from Web UI (#24838 by @ThisIsMissEm)\n+- Add link to `/admin/roles` in moderation interface when changing someone's role (#31791 by @ClearlyClaire)\n - Add recent audit log entries in federation moderation interface (#27386 by @ThisIsMissEm)\n - Add profile setup to onboarding in web UI (#27829, #27876, and #28453 by @Gargron)\n - Add prominent share/copy button on profiles in web UI (#27865 and #27889 by @ClearlyClaire and @Gargron)\n@@ -113,21 +121,24 @@ The following changelog entries focus on changes visible to users, administrator\n - Add support for multiple `redirect_uris` when creating OAuth 2.0 Applications (#29192 by @ThisIsMissEm)\n - Add Interlingue and Interlingua to interface languages (#28630 and #30828 by @Dhghomon and @renchap)\n - Add Kashubian, Pennsylvania Dutch, Vai, Jawi Malay, Mohawk and Low German to posting languages (#26024, #26634, #27136, #29098, #27115, and #27434 by @EngineerDali, @HelgeKrueger, and @gunchleoc)\n-- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n - Add option to use native Ruby driver for Redis through `REDIS_DRIVER=ruby` (#30717 by @vmstan)\n - Add support for libvips in addition to ImageMagick (#30090, #30590, #30597, #30632, #30857, #30869, and #30858 by @ClearlyClaire, @Gargron, and @mjankowski)\\\n   Server admins can now use libvips as a faster and lighter alternative to ImageMagick for processing user-uploaded images.\\\n   This requires libvips 8.13 or newer, and needs to be enabled with `MASTODON_USE_LIBVIPS=true`.\\\n   This is enabled by default in the official Docker images, and is intended to completely replace ImageMagick in the future.\n+- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n+- Add anchors to each authorized application in `/oauth/authorized_applications` (#31677 by @fowl2)\n - Add active animation to header settings button (#30221, #30307, and #30388 by @daudix)\n - Add OpenTelemetry instrumentation (#30130, #30322, #30353, and #30350 by @julianocosta89, @renchap, and @robbkidd)\\\n   See https://docs.joinmastodon.org/admin/config/#otel for documentation\n - Add API to get multiple accounts and statuses (#27871 and #30465 by @ClearlyClaire)\\\n   This adds `GET /api/v1/accounts` and `GET /api/v1/statuses` to the REST API, see https://docs.joinmastodon.org/methods/accounts/#index and https://docs.joinmastodon.org/methods/statuses/#index\n+- Add support for CORS to `POST /oauth/revoke` (#31743 by @ClearlyClaire)\n - Add redirection back to previous page after site upload deletion (#30141 by @FawazFarid)\n - Add RFC8414 OAuth 2.0 server metadata (#29191 by @ThisIsMissEm)\n - Add loading indicator and empty result message to advanced interface search (#30085 by @ClearlyClaire)\n - Add `profile` OAuth 2.0 scope, allowing more limited access to user data (#29087 and #30357 by @ThisIsMissEm)\n+- Add global Regexp timeout (#31928 by @ClearlyClaire)\n - Add the role ID to the badge component (#29707 by @renchap)\n - Add diagnostic message for failure during CLI search deploy (#29462 by @mjankowski)\n - Add pagination `Link` headers on API accounts/statuses when pinned true (#29442 by @mjankowski)\n@@ -156,34 +167,43 @@ The following changelog entries focus on changes visible to users, administrator\n - **Change icons throughout the web interface** (#27385, #27539, #27555, #27579, #27700, #27817, #28519, #28709, #28064, #28775, #28780, #27924, #29294, #29395, #29537, #29569, #29610, #29612, #29649, #29844, #27780, #30974, #30963, #30962, #30961, #31362, #31363, #31359, #31371, #31360, #31512, #31511, and #31525 by @ClearlyClaire, @Gargron, @arbolitoloco1, @mjankowski, @nclm, @renchap, @ronilaukkarinen, and @zunda)\\\n   This changes all the interface icons from FontAwesome to Material Symbols for a more modern look, consistent with the official Mastodon Android app.\\\n   In addition, better care is given to pixel alignment, and icon variants are used to better highlight active/inactive state.\n-- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, and #29659 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n+- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, #29659, and #31889 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n   The compose form has been completely redesigned for a more modern and consistent look, as well as spelling out the chosen privacy setting and language name at all times.\\\n   As part of this, the \u201cUnlisted\u201d privacy setting has been renamed to \u201cQuiet public\u201d.\n-- **Change design of confirmation modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, and #31399 by @ClearlyClaire, @Gargron, and @tribela)\\\n+- **Change design of modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, #31399, #31555, #31752, #31801, #31883, #31844, #31864, and #31943 by @ClearlyClaire, @Gargron, @tribela and @vmstan)\\\n   The mute, block, and domain block confirmation modals have been completely redesigned to be clearer and include more detailed information on the action to be performed.\\\n   They also have a more modern and consistent design, along with other confirmation modals in the application.\n - **Change colors throughout the web UI** (#29522, #29584, #29653, #29779, #29803, #29809, #29808, #29828, #31034, #31168, #31266, #31348, #31349, #31361, and #31510 by @ClearlyClaire, @Gargron, @renchap, and @vmstan)\n-- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878 and #29272 by @Gargron)\n+- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878, #29272, and #31912 by @Gargron)\n - **Change email templates** (#28416, #28755, #28814, #29064, #28883, #29470, #29607, #29761, #29760, and #29879 by @ClearlyClaire, @Gargron, @hteumeuleu, and @mjankowski)\\\n   All emails to end-users have been completely redesigned with a fresh new look, providing more information while making them easier to read and keeping maximum compatibility across mail clients.\n - **Change follow recommendations algorithm** (#28314, #28433, #29017, #29108, #29306, #29550, #29619, and #31474 by @ClearlyClaire, @Gargron, @kernal053, @mjankowski, and @wheatear-dev)\\\n   This replaces the \u201cpast interactions\u201d recommendation algorithm with a \u201cfriends of friends\u201d algorithm that suggests accounts followed by people you follow, and a \u201csimilar profiles\u201d algorithm that suggests accounts with a profile similar to your most recent follows.\\\n   In addition, the implementation has been significantly reworked, and all follow recommendations are now dismissable.\\\n   This change deprecates the `source` attribute in `Suggestion` entities in the REST API, and replaces it with the new [`sources` attribute](https://docs.joinmastodon.org/entities/Suggestion/#sources).\n - Change account search algorithm (#30803 by @Gargron)\n-- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, and #30795 by @TheEssem, @ThisIsMissEm, @jippi, @timetinytim, and @vmstan)\\\n+- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, #30795, #31612, and #31615 by @TheEssem, @ThisIsMissEm, @jippi, @renchap, @timetinytim, and @vmstan)\\\n   In order to reduce the amount of runtime dependencies, the streaming server has been moved into a separate package and Docker image.\\\n   The `mastodon` image does not contain the streaming server anymore, as it has been moved to its own `mastodon-streaming` image.\\\n   Administrators may need to update their setup accordingly.\n-- Change how content warnings and filters are displayed in web UI (#31365 by @Gargron)\n+- Change how content warnings and filters are displayed in web UI (#31365, and #31761 by @Gargron)\n+- Change preview card processing to ignore `undefined` as canonical url (#31882 by @oneiros)\n+- Change embedded posts to use web UI (#31766 by @Gargron)\n+- Change inner borders in media galleries in web UI (#31852 by @Gargron)\n+- Change design of hide media button in web UI (#31807 by @Gargron)\n+- Change labels on thread indicators in web UI (#31806 by @Gargron)\n+- Change report action buttons to be disabled when action has already been taken (#31773, #31822, and #31899 by @ClearlyClaire and @ThisIsMissEm)\n+- Change width of columns in advanced web UI (#31762 by @Gargron)\n+- Change design of unread conversations in web UI (#31763 by @Gargron)\n - Change Web UI to allow viewing and severing relationships with suspended accounts (#27667 by @ClearlyClaire)\\\n   This also adds a `with_suspended` parameter to `GET /api/v1/accounts/relationships` in the REST API.\n+- Change preview card image size limit from 2MB to 8MB when using libvips (#31904 by @ClearlyClaire)\n - Change avatars border radius (#31390 by @renchap)\n - Change counters to be displayed on profile timelines in web UI (#30525 by @Gargron)\n - Change disabled buttons color in light mode to make the difference more visible (#30998 by @renchap)\n - Change design of people tab on explore in web UI (#30059 by @Gargron)\n - Change sidebar text in web UI (#30696 by @Gargron)\n-- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452 and #28465 by @Gargron and @renchap)\n+- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452, #28465, and #31934 by @ClearlyClaire, @Gargron and @renchap)\n - Change media to be hidden/blurred by default in report modal (#28522 by @ClearlyClaire)\n - Change order of the \"muting\" and \"blocking\" list options in \u201cData Exports\u201d (#26088 by @fixermark)\n - Change admin and moderation notes character limit from 500 to 2000 characters (#30288 by @ThisIsMissEm)\n@@ -197,6 +217,7 @@ The following changelog entries focus on changes visible to users, administrator\n - Change dropdown menu icon to not be replaced by close icon when open in web UI (#29532 by @Gargron)\n - Change back button to always appear in advanced web UI (#29551 and #29669 by @Gargron)\n - Change border of active compose field search inputs (#29832 and #29839 by @vmstan)\n+- Change instances of Nokogiri HTML4 parsing to HTML5 (#31812, #31815, #31813, and #31814 by @flavorjones)\n - Change link detection to allow `@` at the end of an URL (#31124 by @adamniedzielski)\n - Change User-Agent to use Mastodon as the product, and http.rb as platform details (#31192 by @ClearlyClaire)\n - Change layout and wording of the Content Retention server settings page (#27733 by @vmstan)\n@@ -249,8 +270,17 @@ The following changelog entries focus on changes visible to users, administrator\n - Fix various issues when in link preview card generation (#28748, #30017, #30362, #30173, #30853, #30929, #30933, #30957, #30987, and #31144 by @adamniedzielski, @oneiros, @phocks, @timothyjrogers, and @tribela)\n - Fix handling of missing links in Webfinger responses (#31030 by @adamniedzielski)\n - Fix HTTP 500 error in `/api/v1/polls/:id/votes` when required `choices` parameter is missing (#25598 by @danielmbrasil)\n+- Fix security context sometimes not being added in LD-Signed activities (#31871 by @ClearlyClaire)\n - Fix cross-origin loading of `inert.css` polyfill (#30687 by @louis77)\n - Fix cutoff of instance name in sign-up form (#30598 by @oneiros)\n+- Fix invalid date searches returning 503 errors (#31526 by @notchairmk)\n+- Fix invalid `visibility` values in `POST /api/v1/statuses` returning 500 errors (#31571 by @c960657)\n+- Fix some components re-rendering spuriously in web UI (#31879 and #31881 by @ClearlyClaire and @Gargron)\n+- Fix sort order of moderation notes on Reports and Accounts (#31528 by @ThisIsMissEm)\n+- Fix email language when recipient has no selected locale (#31747 by @ClearlyClaire)\n+- Fix frequently-used languages not correctly updating in the web UI (#31386 by @c960657)\n+- Fix `POST /api/v1/statuses` silently ignoring invalid `media_ids` parameter (#31681 by @c960657)\n+- Fix handling of the `BIND` environment variable in the streaming server (#31624 by @ThisIsMissEm)\n - Fix empty `aria-hidden` attribute value in logo resources area (#30570 by @mjankowski)\n - Fix \u201cRedirect URI\u201d field not being marked as required in \u201cNew application\u201d form (#30311 by @ThisIsMissEm)\n - Fix right-to-left text in preview cards (#30930 by @ClearlyClaire)\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -17,7 +17,7 @@ def patch\n     end\n \n     def default_prerelease\n-      'beta.1'\n+      'beta.2'\n     end\n \n     def prerelease\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Check boxes to select posts to report are nearly invisible in dark theme\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Report a post\r\n2. Advance through report screens until you are given the opportunity to select multiple posts to add to the report\r\n\n\n### Expected behaviour\n\nCheck boxes to select posts are easily visible\n\n### Actual behaviour\n\nCheck boxes to select posts are extremely difficult to see\n\n### Detailed description\n\nAt first I thought the bug was the the checkboxes were completely missing until I leaned in and squinted at my screen.\r\n\r\n![20240904-075004-firefox](https://github.com/user-attachments/assets/bbe0d1fb-d873-44f5-ba12-d5b5ba6d20ab)\r\n\n\n### Mastodon instance\n\nmastodon.social\n\n### Mastodon version\n\nv4.3.0-nightly.2024-09-03\n\n### Browser name and version\n\nFirefox 129.0.2\n\n### Operating system\n\nMicrosoft Windows [Version 10.0.19045.4780]\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -6437,7 +6437,7 @@ a.status-card {\n   }\n \n   .dialog-option .poll__input {\n-    border-color: $inverted-text-color;\n+    border-color: $darker-text-color;\n     color: $ui-secondary-color;\n     display: inline-flex;\n     align-items: center;\n@@ -6451,13 +6451,13 @@ a.status-card {\n     &:active,\n     &:focus,\n     &:hover {\n-      border-color: lighten($inverted-text-color, 15%);\n+      border-color: $valid-value-color;\n       border-width: 4px;\n     }\n \n     &.active {\n-      border-color: $inverted-text-color;\n-      background: $inverted-text-color;\n+      border-color: $valid-value-color;\n+      background: $valid-value-color;\n     }\n   }\n \n---\n\n\n---\n\nChoice B:\npublic/embed.js\n@@ -81,7 +81,7 @@ const allowedPrefixes = (document.currentScript && document.currentScript.tagNam\n       embeds.set(id, iframe);\n \n       iframe.allow = 'fullscreen';\n-      iframe.sandbox = 'allow-scripts allow-same-origin';\n+      iframe.sandbox = 'allow-scripts allow-same-origin allow-popups';\n       iframe.style.border = 0;\n       iframe.style.overflow = 'hidden';\n       iframe.style.display = 'block';\n@@ -112,7 +112,7 @@ const allowedPrefixes = (document.currentScript && document.currentScript.tagNam\n       iframe.width = container.clientWidth;\n       iframe.height = 0;\n       iframe.allow = 'fullscreen';\n-      iframe.sandbox = 'allow-scripts allow-same-origin';\n+      iframe.sandbox = 'allow-scripts allow-same-origin allow-popups';\n       iframe.style.border = 0;\n       iframe.style.overflow = 'hidden';\n       iframe.style.display = 'block';\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -10453,7 +10453,7 @@ noscript {\n       gap: 4px;\n \n       dt {\n-        flex: 0 0 auto;\n+        flex: 0 1 auto;\n         color: $dark-text-color;\n         min-width: 0;\n         overflow: hidden;\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/features/ui/components/column_link.jsx\n@@ -15,15 +15,15 @@ const ColumnLink = ({ icon, activeIcon, iconComponent, activeIconComponent, text\n \n   if (href) {\n     return (\n-      <a href={href} className={className} data-method={method} title={text} {...other}>\n+      <a href={href} className={className} data-method={method} {...other}>\n         {active ? activeIconElement : iconElement}\n         <span>{text}</span>\n         {badgeElement}\n       </a>\n     );\n   } else {\n     return (\n-      <NavLink to={to} className={className} title={text} exact {...other}>\n+      <NavLink to={to} className={className} exact {...other}>\n         {active ? activeIconElement : iconElement}\n         <span>{text}</span>\n         {badgeElement}\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Allow OAuth revoke through CORS (to be symmetric with OAuth obtain)\n\nIssue Description:\n### Steps to reproduce the problem\n\nThe [Obtain a token](https://docs.joinmastodon.org/methods/oauth/#token) endpoint is available to browser clients via CORS requests\r\n\r\nbut the [Revoke a token](https://docs.joinmastodon.org/methods/oauth/#revoke) endpoint is not\r\n\r\nPlease add the CORS headers to revoke, as it is the flip side of obtain and needed for browser-only clients.\r\n\r\nThanks!\n\n### Expected behaviour\n\nThe revoke endpoint should have been available over CORS\n\n### Actual behaviour\n\nThe revoke endpoint was not available over CORS\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\nmastodon.social\n\n### Mastodon version\n\nv4.3.0-nightly.2024-09-03\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -6437,7 +6437,7 @@ a.status-card {\n   }\n \n   .dialog-option .poll__input {\n-    border-color: $inverted-text-color;\n+    border-color: $darker-text-color;\n     color: $ui-secondary-color;\n     display: inline-flex;\n     align-items: center;\n@@ -6451,13 +6451,13 @@ a.status-card {\n     &:active,\n     &:focus,\n     &:hover {\n-      border-color: lighten($inverted-text-color, 15%);\n+      border-color: $valid-value-color;\n       border-width: 4px;\n     }\n \n     &.active {\n-      border-color: $inverted-text-color;\n-      background: $inverted-text-color;\n+      border-color: $valid-value-color;\n+      background: $valid-value-color;\n     }\n   }\n \n---\n\n\n---\n\nChoice B:\nconfig/initializers/cors.rb\n@@ -22,6 +22,7 @@\n                expose: %w(Link X-RateLimit-Reset X-RateLimit-Limit X-RateLimit-Remaining X-Request-Id),\n                methods: %i(post put delete get patch options)\n       resource '/oauth/token', methods: [:post]\n+      resource '/oauth/revoke', methods: [:post]\n     end\n   end\n end\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/features/notifications_v2/components/notification_group.tsx\n@@ -20,6 +20,21 @@ import { NotificationSeveredRelationships } from './notification_severed_relatio\n import { NotificationStatus } from './notification_status';\n import { NotificationUpdate } from './notification_update';\n \n+function missingActivity(notificationGroup: NotificationGroupModel) {\n+  switch (notificationGroup.type) {\n+    case 'reblog':\n+    case 'favourite':\n+    case 'mention':\n+    case 'update':\n+    case 'status':\n+    case 'poll':\n+      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- our type is actually not correct as the server can occasionally have orphaned notifications\n+      return notificationGroup.statusId === null;\n+    default:\n+      return false;\n+  }\n+}\n+\n export const NotificationGroup: React.FC<{\n   notificationGroupId: NotificationGroupModel['group_key'];\n   unread: boolean;\n@@ -60,7 +75,12 @@ export const NotificationGroup: React.FC<{\n     [dispatch, notificationGroupId, accountId, onMoveUp, onMoveDown],\n   );\n \n-  if (!notificationGroup || notificationGroup.type === 'gap') return null;\n+  if (\n+    !notificationGroup ||\n+    notificationGroup.type === 'gap' ||\n+    missingActivity(notificationGroup)\n+  )\n+    return null;\n \n   let content;\n \n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/dashboard.scss\n@@ -86,9 +86,7 @@\n     color: $primary-text-color;\n     transition: all 100ms ease-in;\n     font-size: 14px;\n-    padding: 0 16px;\n-    line-height: 36px;\n-    height: 36px;\n+    padding: 8px 16px;\n     text-decoration: none;\n     margin-bottom: 4px;\n \n---\napp/javascript/styles/mastodon/dashboard.scss\n@@ -91,6 +91,7 @@\n     height: 36px;\n     text-decoration: none;\n     margin-bottom: 4px;\n+    white-space: nowrap;\n \n     &:active,\n     &:focus,\n@@ -111,6 +112,8 @@\n \n     span {\n       flex: 1 1 auto;\n+      overflow: hidden;\n+      text-overflow: ellipsis;\n     }\n \n     strong {\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix radio buttons styling in web UI\n\nIssue Description:\nFixes #31661\r\n\r\nI also wanted to replace the markup to use the radio button itself (using `appearance: none`) rather than a span, but decided not to do it yet because of the shared styling with checkboxes, which are more complicated to implement with the current style and the SVG icon.\n\n---\n\nChoice A:\nCHANGELOG.md\n@@ -10,21 +10,24 @@ The following changelog entries focus on changes visible to users, administrator\n \n - **Add confirmation interstitial instead of silently redirecting logged-out visitors to remote resources** (#27792, #28902, and #30651 by @ClearlyClaire and @Gargron)\\\n   This fixes a longstanding open redirect in Mastodon, at the cost of added friction when local links to remote resources are shared.\n+- Change `form-action` Content-Security-Policy directive to be more restrictive (#26897 by @ClearlyClaire)\n+- Update dependencies\n \n ### Added\n \n-- **Add experimental server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, and #31513 by @ClearlyClaire, @mgmn, and @renchap)\\\n+- **Add server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, #31513, #31592, #31594, #31638, #31746, #31652, #31709, #31725, #31745, #31613, #31657, #31840, #31610 and #31929 by @ClearlyClaire, @Gargron, @mgmn, and @renchap)\\\n   Group notifications of the same type for the same target, so that your notifications no longer get cluttered by boost and favorite notifications as soon as a couple of your posts get traction.\\\n   This is done server-side so that clients can efficiently get relevant groups without having to go through numerous pages of individual notifications.\\\n   As part of this, the visual design of the entire notifications feature has been revamped.\\\n   This feature is intended to eventually replace the existing notifications column, but for this first beta, users will have to enable it in the \u201cExperimental features\u201d section of the notifications column settings.\\\n   The API is not final yet, but it consists of:\n   - a new `group_key` attribute to `Notification` entities\n-  - `GET /api/v2_alpha/notifications`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-grouped\n-  - `GET /api/v2_alpha/notifications/:group_key`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-notification-group\n-  - `POST /api/v2_alpha/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/notifications_alpha/#dismiss-group\n-  - `GET /api/v2_alpha/notifications/:unread_count`: https://docs.joinmastodon.org/methods/notifications_alpha/#unread-group-count\n-- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, and #31541 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n+  - `GET /api/v2/notifications`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-grouped\n+  - `GET /api/v2/notifications/:group_key`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-notification-group\n+  - `GET /api/v2/notifications/:group_key/accounts`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-group-accounts\n+  - `POST /api/v2/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/grouped_notifications/#dismiss-group\n+  - `GET /api/v2/notifications/:unread_count`: https://docs.joinmastodon.org/methods/grouped_notifications/#unread-group-count\n+- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, #31541, and #31723 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n   The old \u201cBlock notifications from non-followers\u201d, \u201cBlock notifications from people you don't follow\u201d and \u201cBlock direct messages from people you don't follow\u201d notification settings have been replaced by a new set of settings found directly in the notification column.\\\n   You can now separately filter or drop notifications from people you don't follow, people who don't follow you, accounts created within the past 30 days, as well as unsolicited private mentions, and accounts limited by the moderation.\\\n   Instead of being outright dropped, notifications that you chose to filter are put in a separate \u201cFiltered notifications\u201d box that you can review separately without it clogging your main notifications.\\\n@@ -57,26 +60,31 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add timeline of public posts about a trending link** (#30381 and #30840 by @Gargron)\\\n   You can now see public posts mentioning currently-trending articles from people who have opted into discovery features.\\\n   This adds a new REST API endpoint: https://docs.joinmastodon.org/methods/timelines/#link\n-- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, and #30846 by @Gargron)\\\n+- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, #30846, #31819, and #31900 by @Gargron and @oneiros)\\\n   This adds a mechanism to [highlight the author of news articles](https://blog.joinmastodon.org/2024/07/highlighting-journalism-on-mastodon/) shared on Mastodon.\\\n   Articles hosted outside the fediverse can indicate a fediverse author with a meta tag:\n   ```html\n   <meta name=\"fediverse:creator\" content=\"username@domain\" />\n   ```\n   On the API side, this is represented by a new `authors` attribute to the `PreviewCard` entity: https://docs.joinmastodon.org/entities/PreviewCard/#authors\\\n-  Note that this feature is still work in progress and the tagging format and verification mechanisms may change in future releases.\n+  Users can allow arbitrary domains to use `fediverse:creator` to credit them by visiting `/settings/verification`.\\\n+  This is federated as a new `attributionDomains` property in the `http://joinmastodon.org/ns` namespace, containing an array of domain names: https://docs.joinmastodon.org/spec/activitypub/#properties-used-1\n - **Add in-app notifications for moderation actions and warnings** (#30065, #30082, and #30081 by @ClearlyClaire)\\\n   In addition to email notifications, also notify users of moderation actions or warnings against them directly within the app, so they are less likely to miss important communication from their moderators.\\\n   This adds the `moderation_warning` notification type to the REST API and streaming, with a new [`moderation_warning` attribute](https://docs.joinmastodon.org/entities/Notification/#moderation_warning).\n - **Add domain information to profiles in web UI** (#29602 by @Gargron)\\\n   Clicking the domain of a user in their profile will now open a tooltip with a short explanation about servers and federation.\n+- **Add support for Redis sentinel** (#31694, #31623, #31744, #31767, and #31768 by @ThisIsMissEm and @oneiros)\\\n+  See https://docs.joinmastodon.org/admin/scaling/#redis-sentinel\n - Add ability to reorder uploaded media before posting in web UI (#28456 by @Gargron)\n - Add moderation interface for searching hashtags (#30880 by @ThisIsMissEm)\n - Add ability for admins to configure instance favicon and logo (#30040, #30208, #30259, #30375, #30734, #31016, and #30205 by @ClearlyClaire, @FawazFarid, @JasonPunyon, @mgmn, and @renchap)\\\n   This is also exposed through the REST API: https://docs.joinmastodon.org/entities/Instance/#icon\n - Add `api_versions` to `/api/v2/instance` (#31354 by @ClearlyClaire)\\\n   Add API version number to make it easier for clients to detect compatible features going forward.\\\n   See API documentation at https://docs.joinmastodon.org/entities/Instance/#api-versions\n+- Add quick links to Administration and Moderation Reports from Web UI (#24838 by @ThisIsMissEm)\n+- Add link to `/admin/roles` in moderation interface when changing someone's role (#31791 by @ClearlyClaire)\n - Add recent audit log entries in federation moderation interface (#27386 by @ThisIsMissEm)\n - Add profile setup to onboarding in web UI (#27829, #27876, and #28453 by @Gargron)\n - Add prominent share/copy button on profiles in web UI (#27865 and #27889 by @ClearlyClaire and @Gargron)\n@@ -113,21 +121,24 @@ The following changelog entries focus on changes visible to users, administrator\n - Add support for multiple `redirect_uris` when creating OAuth 2.0 Applications (#29192 by @ThisIsMissEm)\n - Add Interlingue and Interlingua to interface languages (#28630 and #30828 by @Dhghomon and @renchap)\n - Add Kashubian, Pennsylvania Dutch, Vai, Jawi Malay, Mohawk and Low German to posting languages (#26024, #26634, #27136, #29098, #27115, and #27434 by @EngineerDali, @HelgeKrueger, and @gunchleoc)\n-- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n - Add option to use native Ruby driver for Redis through `REDIS_DRIVER=ruby` (#30717 by @vmstan)\n - Add support for libvips in addition to ImageMagick (#30090, #30590, #30597, #30632, #30857, #30869, and #30858 by @ClearlyClaire, @Gargron, and @mjankowski)\\\n   Server admins can now use libvips as a faster and lighter alternative to ImageMagick for processing user-uploaded images.\\\n   This requires libvips 8.13 or newer, and needs to be enabled with `MASTODON_USE_LIBVIPS=true`.\\\n   This is enabled by default in the official Docker images, and is intended to completely replace ImageMagick in the future.\n+- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n+- Add anchors to each authorized application in `/oauth/authorized_applications` (#31677 by @fowl2)\n - Add active animation to header settings button (#30221, #30307, and #30388 by @daudix)\n - Add OpenTelemetry instrumentation (#30130, #30322, #30353, and #30350 by @julianocosta89, @renchap, and @robbkidd)\\\n   See https://docs.joinmastodon.org/admin/config/#otel for documentation\n - Add API to get multiple accounts and statuses (#27871 and #30465 by @ClearlyClaire)\\\n   This adds `GET /api/v1/accounts` and `GET /api/v1/statuses` to the REST API, see https://docs.joinmastodon.org/methods/accounts/#index and https://docs.joinmastodon.org/methods/statuses/#index\n+- Add support for CORS to `POST /oauth/revoke` (#31743 by @ClearlyClaire)\n - Add redirection back to previous page after site upload deletion (#30141 by @FawazFarid)\n - Add RFC8414 OAuth 2.0 server metadata (#29191 by @ThisIsMissEm)\n - Add loading indicator and empty result message to advanced interface search (#30085 by @ClearlyClaire)\n - Add `profile` OAuth 2.0 scope, allowing more limited access to user data (#29087 and #30357 by @ThisIsMissEm)\n+- Add global Regexp timeout (#31928 by @ClearlyClaire)\n - Add the role ID to the badge component (#29707 by @renchap)\n - Add diagnostic message for failure during CLI search deploy (#29462 by @mjankowski)\n - Add pagination `Link` headers on API accounts/statuses when pinned true (#29442 by @mjankowski)\n@@ -156,34 +167,43 @@ The following changelog entries focus on changes visible to users, administrator\n - **Change icons throughout the web interface** (#27385, #27539, #27555, #27579, #27700, #27817, #28519, #28709, #28064, #28775, #28780, #27924, #29294, #29395, #29537, #29569, #29610, #29612, #29649, #29844, #27780, #30974, #30963, #30962, #30961, #31362, #31363, #31359, #31371, #31360, #31512, #31511, and #31525 by @ClearlyClaire, @Gargron, @arbolitoloco1, @mjankowski, @nclm, @renchap, @ronilaukkarinen, and @zunda)\\\n   This changes all the interface icons from FontAwesome to Material Symbols for a more modern look, consistent with the official Mastodon Android app.\\\n   In addition, better care is given to pixel alignment, and icon variants are used to better highlight active/inactive state.\n-- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, and #29659 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n+- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, #29659, and #31889 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n   The compose form has been completely redesigned for a more modern and consistent look, as well as spelling out the chosen privacy setting and language name at all times.\\\n   As part of this, the \u201cUnlisted\u201d privacy setting has been renamed to \u201cQuiet public\u201d.\n-- **Change design of confirmation modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, and #31399 by @ClearlyClaire, @Gargron, and @tribela)\\\n+- **Change design of modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, #31399, #31555, #31752, #31801, #31883, #31844, #31864, and #31943 by @ClearlyClaire, @Gargron, @tribela and @vmstan)\\\n   The mute, block, and domain block confirmation modals have been completely redesigned to be clearer and include more detailed information on the action to be performed.\\\n   They also have a more modern and consistent design, along with other confirmation modals in the application.\n - **Change colors throughout the web UI** (#29522, #29584, #29653, #29779, #29803, #29809, #29808, #29828, #31034, #31168, #31266, #31348, #31349, #31361, and #31510 by @ClearlyClaire, @Gargron, @renchap, and @vmstan)\n-- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878 and #29272 by @Gargron)\n+- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878, #29272, and #31912 by @Gargron)\n - **Change email templates** (#28416, #28755, #28814, #29064, #28883, #29470, #29607, #29761, #29760, and #29879 by @ClearlyClaire, @Gargron, @hteumeuleu, and @mjankowski)\\\n   All emails to end-users have been completely redesigned with a fresh new look, providing more information while making them easier to read and keeping maximum compatibility across mail clients.\n - **Change follow recommendations algorithm** (#28314, #28433, #29017, #29108, #29306, #29550, #29619, and #31474 by @ClearlyClaire, @Gargron, @kernal053, @mjankowski, and @wheatear-dev)\\\n   This replaces the \u201cpast interactions\u201d recommendation algorithm with a \u201cfriends of friends\u201d algorithm that suggests accounts followed by people you follow, and a \u201csimilar profiles\u201d algorithm that suggests accounts with a profile similar to your most recent follows.\\\n   In addition, the implementation has been significantly reworked, and all follow recommendations are now dismissable.\\\n   This change deprecates the `source` attribute in `Suggestion` entities in the REST API, and replaces it with the new [`sources` attribute](https://docs.joinmastodon.org/entities/Suggestion/#sources).\n - Change account search algorithm (#30803 by @Gargron)\n-- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, and #30795 by @TheEssem, @ThisIsMissEm, @jippi, @timetinytim, and @vmstan)\\\n+- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, #30795, #31612, and #31615 by @TheEssem, @ThisIsMissEm, @jippi, @renchap, @timetinytim, and @vmstan)\\\n   In order to reduce the amount of runtime dependencies, the streaming server has been moved into a separate package and Docker image.\\\n   The `mastodon` image does not contain the streaming server anymore, as it has been moved to its own `mastodon-streaming` image.\\\n   Administrators may need to update their setup accordingly.\n-- Change how content warnings and filters are displayed in web UI (#31365 by @Gargron)\n+- Change how content warnings and filters are displayed in web UI (#31365, and #31761 by @Gargron)\n+- Change preview card processing to ignore `undefined` as canonical url (#31882 by @oneiros)\n+- Change embedded posts to use web UI (#31766 by @Gargron)\n+- Change inner borders in media galleries in web UI (#31852 by @Gargron)\n+- Change design of hide media button in web UI (#31807 by @Gargron)\n+- Change labels on thread indicators in web UI (#31806 by @Gargron)\n+- Change report action buttons to be disabled when action has already been taken (#31773, #31822, and #31899 by @ClearlyClaire and @ThisIsMissEm)\n+- Change width of columns in advanced web UI (#31762 by @Gargron)\n+- Change design of unread conversations in web UI (#31763 by @Gargron)\n - Change Web UI to allow viewing and severing relationships with suspended accounts (#27667 by @ClearlyClaire)\\\n   This also adds a `with_suspended` parameter to `GET /api/v1/accounts/relationships` in the REST API.\n+- Change preview card image size limit from 2MB to 8MB when using libvips (#31904 by @ClearlyClaire)\n - Change avatars border radius (#31390 by @renchap)\n - Change counters to be displayed on profile timelines in web UI (#30525 by @Gargron)\n - Change disabled buttons color in light mode to make the difference more visible (#30998 by @renchap)\n - Change design of people tab on explore in web UI (#30059 by @Gargron)\n - Change sidebar text in web UI (#30696 by @Gargron)\n-- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452 and #28465 by @Gargron and @renchap)\n+- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452, #28465, and #31934 by @ClearlyClaire, @Gargron and @renchap)\n - Change media to be hidden/blurred by default in report modal (#28522 by @ClearlyClaire)\n - Change order of the \"muting\" and \"blocking\" list options in \u201cData Exports\u201d (#26088 by @fixermark)\n - Change admin and moderation notes character limit from 500 to 2000 characters (#30288 by @ThisIsMissEm)\n@@ -197,6 +217,7 @@ The following changelog entries focus on changes visible to users, administrator\n - Change dropdown menu icon to not be replaced by close icon when open in web UI (#29532 by @Gargron)\n - Change back button to always appear in advanced web UI (#29551 and #29669 by @Gargron)\n - Change border of active compose field search inputs (#29832 and #29839 by @vmstan)\n+- Change instances of Nokogiri HTML4 parsing to HTML5 (#31812, #31815, #31813, and #31814 by @flavorjones)\n - Change link detection to allow `@` at the end of an URL (#31124 by @adamniedzielski)\n - Change User-Agent to use Mastodon as the product, and http.rb as platform details (#31192 by @ClearlyClaire)\n - Change layout and wording of the Content Retention server settings page (#27733 by @vmstan)\n@@ -249,8 +270,17 @@ The following changelog entries focus on changes visible to users, administrator\n - Fix various issues when in link preview card generation (#28748, #30017, #30362, #30173, #30853, #30929, #30933, #30957, #30987, and #31144 by @adamniedzielski, @oneiros, @phocks, @timothyjrogers, and @tribela)\n - Fix handling of missing links in Webfinger responses (#31030 by @adamniedzielski)\n - Fix HTTP 500 error in `/api/v1/polls/:id/votes` when required `choices` parameter is missing (#25598 by @danielmbrasil)\n+- Fix security context sometimes not being added in LD-Signed activities (#31871 by @ClearlyClaire)\n - Fix cross-origin loading of `inert.css` polyfill (#30687 by @louis77)\n - Fix cutoff of instance name in sign-up form (#30598 by @oneiros)\n+- Fix invalid date searches returning 503 errors (#31526 by @notchairmk)\n+- Fix invalid `visibility` values in `POST /api/v1/statuses` returning 500 errors (#31571 by @c960657)\n+- Fix some components re-rendering spuriously in web UI (#31879 and #31881 by @ClearlyClaire and @Gargron)\n+- Fix sort order of moderation notes on Reports and Accounts (#31528 by @ThisIsMissEm)\n+- Fix email language when recipient has no selected locale (#31747 by @ClearlyClaire)\n+- Fix frequently-used languages not correctly updating in the web UI (#31386 by @c960657)\n+- Fix `POST /api/v1/statuses` silently ignoring invalid `media_ids` parameter (#31681 by @c960657)\n+- Fix handling of the `BIND` environment variable in the streaming server (#31624 by @ThisIsMissEm)\n - Fix empty `aria-hidden` attribute value in logo resources area (#30570 by @mjankowski)\n - Fix \u201cRedirect URI\u201d field not being marked as required in \u201cNew application\u201d form (#30311 by @ThisIsMissEm)\n - Fix right-to-left text in preview cards (#30930 by @ClearlyClaire)\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -17,7 +17,7 @@ def patch\n     end\n \n     def default_prerelease\n-      'beta.1'\n+      'beta.2'\n     end\n \n     def prerelease\n---\n\n\n---\n\nChoice B:\napp/javascript/styles/mastodon/components.scss\n@@ -9288,6 +9288,7 @@ noscript {\n   border: 1px solid $highlight-text-color;\n   background: rgba($highlight-text-color, 0.15);\n   overflow: hidden;\n+  flex-shrink: 0;\n \n   &__background-image {\n     width: 125%;\n---\n\n\n---\n\nChoice C:\napp/mailers/application_mailer.rb\n@@ -12,7 +12,7 @@ class ApplicationMailer < ActionMailer::Base\n   protected\n \n   def locale_for_account(account, &block)\n-    I18n.with_locale(account.user_locale || I18n.locale || I18n.default_locale, &block)\n+    I18n.with_locale(account.user_locale || I18n.default_locale, &block)\n   end\n \n   def set_autoreply_headers!\n---\napp/mailers/user_mailer.rb\n@@ -33,7 +33,7 @@ def reset_password_instructions(user, token, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -43,7 +43,7 @@ def password_change(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -53,7 +53,7 @@ def email_changed(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -63,7 +63,7 @@ def two_factor_enabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -73,7 +73,7 @@ def two_factor_disabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -83,7 +83,7 @@ def two_factor_recovery_codes_changed(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -93,7 +93,7 @@ def webauthn_enabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -103,7 +103,7 @@ def webauthn_disabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -114,7 +114,7 @@ def webauthn_credential_added(user, webauthn_credential)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: I18n.t('devise.mailer.webauthn_credential.added.subject')\n     end\n   end\n@@ -125,7 +125,7 @@ def webauthn_credential_deleted(user, webauthn_credential)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: I18n.t('devise.mailer.webauthn_credential.deleted.subject')\n     end\n   end\n@@ -219,7 +219,7 @@ def set_instance\n     @instance = Rails.configuration.x.local_domain\n   end\n \n-  def locale\n-    @resource.locale.presence || I18n.locale || I18n.default_locale\n+  def locale(use_current_locale: false)\n+    @resource.locale.presence || (use_current_locale && I18n.locale) || I18n.default_locale\n   end\n end\n---\n\n\n---\n\nChoice D:\nconfig/initializers/regexp.rb\n@@ -1,4 +1,4 @@\n # frozen_string_literal: true\n \n-# 0.5s is a fairly high timeout, but that should account for slow servers under load\n-Regexp.timeout = 0.5 if Regexp.respond_to?(:timeout=)\n+# 2s is a fairly high default, but that should account for slow servers under load\n+Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n---\nconfig/initializers/regexp.rb\n@@ -1,4 +0,0 @@\n-# frozen_string_literal: true\n-\n-# 2s is a fairly high default, but that should account for slow servers under load\n-Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n---\nconfig/initializers/regexp.rb\n@@ -1,4 +1,3 @@\n # frozen_string_literal: true\n \n-# 2s is a fairly high default, but that should account for slow servers under load\n-Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n+Regexp.timeout = ENV['REGEXP_TIMEOUT'].to_f if Regexp.respond_to?(:timeout=) && ENV['REGEXP_TIMEOUT']\n---\nGemfile\n@@ -53,7 +53,7 @@ gem 'hiredis', '~> 0.6'\n gem 'htmlentities', '~> 4.3'\n gem 'http', '~> 5.2.0'\n gem 'http_accept_language', '~> 2.1'\n-gem 'httplog', '~> 1.7.0'\n+gem 'httplog', '~> 1.7.0', require: false\n gem 'i18n'\n gem 'idn-ruby', require: 'idn'\n gem 'inline_svg'\n---\nconfig/initializers/httplog.rb\n@@ -1,7 +1,12 @@\n # frozen_string_literal: true\n \n-HttpLog.configure do |config|\n-  config.logger = Rails.logger\n-  config.color = { color: :yellow }\n-  config.compact_log = true\n+# Disable httplog in production unless log_level is `debug`\n+if !Rails.env.production? || Rails.configuration.log_level == :debug\n+  require 'httplog'\n+\n+  HttpLog.configure do |config|\n+    config.logger = Rails.logger\n+    config.color = { color: :yellow }\n+    config.compact_log = true\n+  end\n end\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Admin emails use user's localization rather than server's\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Be an admin of an instance\r\n2. Require verification for new accounts\r\n3. As another user: Make a new account with a non default localization\r\n4. As an admin: Receive email with wrong localization \r\n\n\n### Expected behaviour\n\nEmail to admin should be standard/default localization\n\n### Actual behaviour\n\nEmail to admin is sent in the user's localization\n\n### Detailed description\n\nIf a user sets their language to some other language the email that comes to the admin of the instance to verify them is of that localization rather than the instances default.\r\n\r\nUser has this selected:\r\n![image](https://github.com/user-attachments/assets/f2292a75-27ce-4ae8-abf5-0b54a3d00adf)\r\n\r\nEmail received **to the admin:**\r\n![image](https://github.com/user-attachments/assets/b97f9dfa-33e1-4e9d-8d92-14f89cf803bd)\r\n\r\nTranslation:\r\n```\r\nNew account up for review on fuzzies.wtf\r\nThe details of the new account are below. You can approve or reject this application.\r\n```\n\n### Mastodon instance\n\nfuzzies.wtf\n\n### Mastodon version\n\nv4.3.0-alpha.5+no-portals\n\n### Technical details\n\n- Ruby version: ruby 3.3.4 (2024-07-09 revision be1089c8ec) [x86_64-linux]\r\n- Node.js version: v20.17.0\r\n\n\n---\n\nChoice A:\napp/lib/feed_manager.rb\n@@ -558,7 +558,7 @@ def build_crutches(receiver_id, statuses)\n       arr = crutches[:active_mentions][s.id] || []\n       arr.push(s.account_id)\n \n-      if s.reblog?\n+      if s.reblog? && s.reblog.present?\n         arr.push(s.reblog.account_id)\n         arr.concat(crutches[:active_mentions][s.reblog_of_id] || [])\n       end\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/components/status_action_bar.jsx\n@@ -375,20 +375,29 @@ class StatusActionBar extends ImmutablePureComponent {\n \n     return (\n       <div className='status__action-bar'>\n-        <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n-        <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n-        <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n-        <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n-\n-        <DropdownMenuContainer\n-          scrollKey={scrollKey}\n-          status={status}\n-          items={menu}\n-          icon='ellipsis-h'\n-          iconComponent={MoreHorizIcon}\n-          direction='right'\n-          title={intl.formatMessage(messages.more)}\n-        />\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <DropdownMenuContainer\n+            scrollKey={scrollKey}\n+            status={status}\n+            items={menu}\n+            icon='ellipsis-h'\n+            iconComponent={MoreHorizIcon}\n+            direction='right'\n+            title={intl.formatMessage(messages.more)}\n+          />\n+        </div>\n       </div>\n     );\n   }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -299,6 +299,10 @@\n     }\n   }\n \n+  &--with-counter {\n+    padding-inline-end: 4px;\n+  }\n+\n   &__counter {\n     display: block;\n     width: auto;\n@@ -1465,6 +1469,15 @@ body > [data-popper-placement] {\n     }\n   }\n \n+  &__action-bar__button-wrapper {\n+    flex-basis: 0;\n+    flex-grow: 1;\n+\n+    &:last-child {\n+      flex-grow: 0;\n+    }\n+  }\n+\n   &--first-in-thread {\n     border-top: 1px solid var(--background-border-color);\n   }\n---\n\n\n---\n\nChoice C:\napp/mailers/application_mailer.rb\n@@ -12,7 +12,7 @@ class ApplicationMailer < ActionMailer::Base\n   protected\n \n   def locale_for_account(account, &block)\n-    I18n.with_locale(account.user_locale || I18n.locale || I18n.default_locale, &block)\n+    I18n.with_locale(account.user_locale || I18n.default_locale, &block)\n   end\n \n   def set_autoreply_headers!\n---\napp/mailers/user_mailer.rb\n@@ -33,7 +33,7 @@ def reset_password_instructions(user, token, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -43,7 +43,7 @@ def password_change(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -53,7 +53,7 @@ def email_changed(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -63,7 +63,7 @@ def two_factor_enabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -73,7 +73,7 @@ def two_factor_disabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -83,7 +83,7 @@ def two_factor_recovery_codes_changed(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -93,7 +93,7 @@ def webauthn_enabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -103,7 +103,7 @@ def webauthn_disabled(user, *, **)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: default_devise_subject\n     end\n   end\n@@ -114,7 +114,7 @@ def webauthn_credential_added(user, webauthn_credential)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: I18n.t('devise.mailer.webauthn_credential.added.subject')\n     end\n   end\n@@ -125,7 +125,7 @@ def webauthn_credential_deleted(user, webauthn_credential)\n \n     return unless @resource.active_for_authentication?\n \n-    I18n.with_locale(locale) do\n+    I18n.with_locale(locale(use_current_locale: true)) do\n       mail subject: I18n.t('devise.mailer.webauthn_credential.deleted.subject')\n     end\n   end\n@@ -219,7 +219,7 @@ def set_instance\n     @instance = Rails.configuration.x.local_domain\n   end\n \n-  def locale\n-    @resource.locale.presence || I18n.locale || I18n.default_locale\n+  def locale(use_current_locale: false)\n+    @resource.locale.presence || (use_current_locale && I18n.locale) || I18n.default_locale\n   end\n end\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/components.scss\n@@ -2836,7 +2836,7 @@ $ui-header-logo-wordmark-width: 99px;\n   overflow: hidden;\n }\n \n-@media screen and (width >= 631px) {\n+@media screen and (width > $mobile-breakpoint) {\n   .columns-area {\n     padding: 0;\n   }\n@@ -5731,7 +5731,7 @@ a.status-card {\n   user-select: text;\n   display: flex;\n \n-  @media screen and (width <= 630px) {\n+  @media screen and (width <= $mobile-breakpoint) {\n     margin-top: auto;\n   }\n }\n@@ -6090,7 +6090,7 @@ a.status-card {\n     border-radius: 0 0 16px 16px;\n     border-top: 0;\n \n-    @media screen and (max-width: $no-gap-breakpoint) {\n+    @media screen and (max-width: $mobile-breakpoint) {\n       border-radius: 0;\n       border-bottom: 0;\n       padding-bottom: 32px;\n@@ -9092,8 +9092,9 @@ noscript {\n   backdrop-filter: var(--background-filter);\n   border: 1px solid var(--modal-border-color);\n   padding: 24px;\n+  box-sizing: border-box;\n \n-  @media screen and (max-width: $no-gap-breakpoint) {\n+  @media screen and (max-width: $mobile-breakpoint) {\n     border-radius: 16px 16px 0 0;\n     border-bottom: 0;\n     padding-bottom: 32px;\n---\napp/javascript/styles/mastodon/variables.scss\n@@ -88,6 +88,7 @@ $media-modal-media-max-width: 100%;\n $media-modal-media-max-height: 80%;\n \n $no-gap-breakpoint: 1175px;\n+$mobile-breakpoint: 630px;\n \n $font-sans-serif: 'mastodon-font-sans-serif' !default;\n $font-display: 'mastodon-font-display' !default;\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Web client doesn't load any more on sailfish-browser\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Open mastodon.online in sailfish-browser\n\n### Expected behaviour\n\nThe mastodon web client should load and show my home feed\n\n### Actual behaviour\n\nOnly the background is shown, no content or even UI elements load due to a Javascript error\n\n### Detailed description\n\nmastodon.online used to work fine on Sailfish OS until a few days ago. I don't know exactly when it upgraded and from which version, but this suggests to me that it is a recent regression.\n\n### Mastodon instance\n\nmastodon.online\n\n### Mastodon version\n\nv4.3.0-nightly.2024-08-30\n\n### Browser name and version\n\nsailfish-browser-2.2.61-1.12.1.jolla.armv7hl\n\n### Operating system\n\nSailfish OS 4.5\n\n### Technical details\n\nWhen running sailfish-browser with the environment variable `EMBED_CONSOLE=1` set, I get the following output:\r\n```\r\nJavaScript error: https://mastodon.online/packs/js/common-55ba23609956620b878d.js, line 2: TypeError: Object.hasOwn is not a function\r\nCONSOLE message:\r\n[JavaScript Error: \"TypeError: Object.hasOwn is not a function\" {file: \"https://mastodon.online/packs/js/common-55ba23609956620b878d.js\" line: 2}]\r\n_@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:975717\r\nv@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:975589\r\n@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:976597\r\ns@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:35831\r\n@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:131275\r\ns@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:35831\r\n@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:465627\r\ns@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:35831\r\n1345@https://mastodon.online/packs/js/application-109fb489d7dc47acd238.chunk.js:1:24937\r\ns@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:35831\r\nn@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:430\r\nt@https://mastodon.online/packs/js/common-55ba23609956620b878d.js:2:293\r\n@https://mastodon.online/packs/js/application-109fb489d7dc47acd238.chunk.js:1:47\r\n```\n\n---\n\nChoice A:\napp/models/account.rb\n@@ -68,7 +68,7 @@ class Account < ApplicationRecord\n   INSTANCE_ACTOR_ID = -99\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n   USERNAME_LENGTH_LIMIT = 30\n---\napp/models/tag.rb\n@@ -37,7 +37,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]\\u0E47-\\u0E4E#{HASHTAG_SEPARATORS}]/\n \n---\nspec/models/account_spec.rb\n@@ -711,6 +711,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/tag_spec.rb\n@@ -95,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\n\n\n---\n\nChoice B:\ndocker-compose.yml\n@@ -88,7 +88,7 @@ services:\n       - internal_network\n     healthcheck:\n       # prettier-ignore\n-      test: ['CMD-SHELL', \"curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1'\"]\n+      test: ['CMD-SHELL', \"curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1\"]\n     ports:\n       - '127.0.0.1:4000:4000'\n     depends_on:\n---\n\n\n---\n\nChoice C:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/components.scss\n@@ -9288,6 +9288,7 @@ noscript {\n   border: 1px solid $highlight-text-color;\n   background: rgba($highlight-text-color, 0.15);\n   overflow: hidden;\n+  flex-shrink: 0;\n \n   &__background-image {\n     width: 125%;\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Notifications don't work any more in the web client with Firefox ESR 102\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Go to the notifications page and see it doesn't load\r\n2. Check the notifications item in the menu and see that it doesn't show a number even though other devices do show that there are notifications\n\n### Expected behaviour\n\nThe notification page should load successfully\n\n### Actual behaviour\n\nThe notification page encounters a Javascript error and keeps showing a spinner\n\n### Detailed description\n\nOn one system, I'm still using Firefox ESR 102, and I found that the notifications page on mastodon.online doesn't load any more. Also, I knew that I had notifications, but the number didn't show in the menu. The browser console shows a Javascript error.\n\n### Mastodon instance\n\nmastodon.online\n\n### Mastodon version\n\nv4.3.0-nightly.2024-08-30\n\n### Browser name and version\n\nFirefox ESR 102\n\n### Operating system\n\nopenSUSE 15.3\n\n### Technical details\n\nThe Javascript error I see on the browser console is the following:\r\n```\r\nUncaught (in promise) TypeError: i.findLast is not a function\r\n    Ne notification_groups.ts:267\r\n    Pe notification_groups.ts:287\r\n    Re notification_groups.ts:413\r\n    s createReducer.ts:179\r\n    produce immer.legacy-esm.js:589\r\n    s createReducer.ts:178\r\n    s createReducer.ts:151\r\n    default inert.esm.js:76\r\n    default inert.esm.js:73\r\n    Lt Immutable\r\n    default inert.esm.js:73\r\n    b Redux\r\n    dispatch autoBatchEnhancer.ts:114\r\n    un sounds.ts:83\r\n    rn errors.ts:50\r\n    sn loading_bar.ts:84\r\n    a index.js:2139\r\n    dispatch Redux\r\n    h createAsyncThunk.ts:369\r\n```\r\nThis call seems to have been added recently in commit f587ff643f (#30440).\n\n---\n\nChoice A:\napp/javascript/mastodon/features/status/components/card.jsx\n@@ -141,7 +141,7 @@ export default class Card extends PureComponent {\n     const showAuthor  = !!card.getIn(['authors', 0, 'accountId']);\n \n     const description = (\n-      <div className='status-card__content'>\n+      <div className='status-card__content' dir='auto'>\n         <span className='status-card__host'>\n           <span lang={language}>{provider}</span>\n           {card.get('published_at') && <> \u00b7 <RelativeTimestamp timestamp={card.get('published_at')} /></>}\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.jsx\n@@ -129,8 +129,13 @@ export const InlineFollowSuggestions = ({ hidden }) => {\n       return;\n     }\n \n-    setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n-    setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n+      setCanScrollLeft((bodyRef.current.clientWidth - bodyRef.current.scrollLeft) < bodyRef.current.scrollWidth);\n+      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n+    } else {\n+      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n+      setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    }\n   }, [setCanScrollRight, setCanScrollLeft, bodyRef, suggestions]);\n \n   const handleLeftNav = useCallback(() => {\n---\n\n\n---\n\nChoice C:\nstreaming/index.js\n@@ -1351,15 +1351,23 @@ const startServer = async () => {\n  * @param {function(string): void} [onSuccess]\n  */\n const attachServerWithConfig = (server, onSuccess) => {\n-  if (process.env.SOCKET || process.env.PORT && isNaN(+process.env.PORT)) {\n-    server.listen(process.env.SOCKET || process.env.PORT, () => {\n+  if (process.env.SOCKET) {\n+    server.listen(process.env.SOCKET, () => {\n       if (onSuccess) {\n         fs.chmodSync(server.address(), 0o666);\n         onSuccess(server.address());\n       }\n     });\n   } else {\n-    server.listen(+(process.env.PORT || 4000), process.env.BIND || '127.0.0.1', () => {\n+    const port = +(process.env.PORT || 4000);\n+    let bind = process.env.BIND ?? '127.0.0.1';\n+    // Web uses the URI syntax for BIND, which means IPv6 addresses may\n+    // be wrapped in square brackets:\n+    if (bind.startsWith('[') && bind.endsWith(']')) {\n+      bind = bind.slice(1, -1);\n+    }\n+\n+    server.listen(port, bind, () => {\n       if (onSuccess) {\n         onSuccess(`${server.address().address}:${server.address().port}`);\n       }\n---\n\n\n---\n\nChoice D:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Error 422 when posting something with media attached\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\n1. Attach a picture to a new post\r\n2. Try to publish it (with or without text)\r\n3. Error: `422 Media {id} not found or already attached to another post`\r\n\r\n\r\n### Expected behaviour\r\n\r\nPost published with the media attached\r\n\r\n### Actual behaviour\r\n\r\nError 422\r\n\r\n### Detailed description\r\n\r\nAfter #31681, it's no longer possible to publish a new toot with media attached. It immediately throws an error `422 Media {id} not found or already attached to another post`. It doesn't matter if the post contains text or not. Broken via web and via apps.\r\n\r\n### Mastodon instance\r\n\r\nbolha.one, ursal.zone\r\n\r\n### Mastodon version\r\n\r\nv4.3.0-beta.1-491033c\r\n\r\n### Technical details\r\n\r\nIf this is happening on your own Mastodon server, please fill out those:\r\n- Ruby version: `3.3.4`\r\n- Node.js version: `20.17.0`\r\n\n\n---\n\nChoice A:\nstreaming/redis.js\n@@ -50,9 +50,9 @@ function getSentinelConfiguration(env, commonOptions) {\n   return {\n     db: redisDatabase,\n     name: env.REDIS_SENTINEL_MASTER,\n-    username: env.REDIS_USERNAME,\n+    username: env.REDIS_USER,\n     password: env.REDIS_PASSWORD,\n-    sentinelUsername: env.REDIS_SENTINEL_USERNAME ?? env.REDIS_USERNAME,\n+    sentinelUsername: env.REDIS_SENTINEL_USERNAME ?? env.REDIS_USER,\n     sentinelPassword: env.REDIS_SENTINEL_PASSWORD ?? env.REDIS_PASSWORD,\n     sentinels,\n     ...commonOptions,\n@@ -104,7 +104,7 @@ export function configFromEnv(env) {\n     host: env.REDIS_HOST ?? '127.0.0.1',\n     port: redisPort,\n     db: redisDatabase,\n-    username: env.REDIS_USERNAME,\n+    username: env.REDIS_USER,\n     password: env.REDIS_PASSWORD,\n     ...commonOptions,\n   };\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/status/components/card.jsx\n@@ -141,7 +141,7 @@ export default class Card extends PureComponent {\n     const showAuthor  = !!card.getIn(['authors', 0, 'accountId']);\n \n     const description = (\n-      <div className='status-card__content'>\n+      <div className='status-card__content' dir='auto'>\n         <span className='status-card__host'>\n           <span lang={language}>{provider}</span>\n           {card.get('published_at') && <> \u00b7 <RelativeTimestamp timestamp={card.get('published_at')} /></>}\n---\n\n\n---\n\nChoice C:\napp/services/post_status_service.rb\n@@ -134,7 +134,7 @@ def validate_media!\n \n     @media = @account.media_attachments.where(status_id: nil).where(id: @options[:media_ids].take(Status::MEDIA_ATTACHMENTS_LIMIT).map(&:to_i))\n \n-    not_found_ids = @options[:media_ids] - @media.map(&:id)\n+    not_found_ids = @options[:media_ids].map(&:to_i) - @media.map(&:id)\n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.not_found', ids: not_found_ids.join(', ')) if not_found_ids.any?\n \n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.images_and_video') if @media.size > 1 && @media.find(&:audio_or_video?)\n---\napp/services/update_status_service.rb\n@@ -73,7 +73,7 @@ def validate_media!\n \n     media_attachments = @status.account.media_attachments.where(status_id: [nil, @status.id]).where(scheduled_status_id: nil).where(id: @options[:media_ids].take(Status::MEDIA_ATTACHMENTS_LIMIT).map(&:to_i)).to_a\n \n-    not_found_ids = @options[:media_ids] - media_attachments.map(&:id)\n+    not_found_ids = @options[:media_ids].map(&:to_i) - media_attachments.map(&:id)\n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.not_found', ids: not_found_ids.join(', ')) if not_found_ids.any?\n \n     raise Mastodon::ValidationError, I18n.t('media_attachments.validations.images_and_video') if media_attachments.size > 1 && media_attachments.find(&:audio_or_video?)\n---\nspec/services/post_status_service_spec.rb\n@@ -34,15 +34,15 @@\n \n     it 'schedules a status for future creation and does not create one immediately' do\n       media = Fabricate(:media_attachment, account: account)\n-      status = subject.call(account, text: 'Hi future!', media_ids: [media.id], scheduled_at: future)\n+      status = subject.call(account, text: 'Hi future!', media_ids: [media.id.to_s], scheduled_at: future)\n \n       expect(status)\n         .to be_a(ScheduledStatus)\n         .and have_attributes(\n           scheduled_at: eq(future),\n           params: include(\n             'text' => eq('Hi future!'),\n-            'media_ids' => contain_exactly(media.id)\n+            'media_ids' => contain_exactly(media.id.to_s)\n           )\n         )\n       expect(media.reload.status).to be_nil\n@@ -219,7 +219,7 @@\n     status = subject.call(\n       account,\n       text: 'test status update',\n-      media_ids: [media.id]\n+      media_ids: [media.id.to_s]\n     )\n \n     expect(media.reload.status).to eq status\n@@ -233,7 +233,7 @@\n       subject.call(\n         account,\n         text: 'test status update',\n-        media_ids: [media.id]\n+        media_ids: [media.id.to_s]\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n@@ -249,7 +249,7 @@\n       subject.call(\n         account,\n         text: 'test status update',\n-        media_ids: Array.new(2) { Fabricate(:media_attachment, account: account) }.map(&:id)\n+        media_ids: Array.new(2) { Fabricate(:media_attachment, account: account) }.map { |m| m.id.to_s }\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n@@ -271,7 +271,7 @@\n         media_ids: [\n           video,\n           image,\n-        ].map(&:id)\n+        ].map { |m| m.id.to_s }\n       )\n     end.to raise_error(\n       Mastodon::ValidationError,\n---\nspec/services/update_status_service_spec.rb\n@@ -69,7 +69,7 @@\n \n     before do\n       status.media_attachments << detached_media_attachment\n-      subject.call(status, status.account_id, text: 'Foo', media_ids: [attached_media_attachment.id])\n+      subject.call(status, status.account_id, text: 'Foo', media_ids: [attached_media_attachment.id.to_s])\n     end\n \n     it 'updates media attachments' do\n@@ -95,7 +95,7 @@\n \n     before do\n       status.media_attachments << media_attachment\n-      subject.call(status, status.account_id, text: 'Foo', media_ids: [media_attachment.id], media_attributes: [{ id: media_attachment.id, description: 'New description' }])\n+      subject.call(status, status.account_id, text: 'Foo', media_ids: [media_attachment.id.to_s], media_attributes: [{ id: media_attachment.id, description: 'New description' }])\n     end\n \n     it 'does not detach media attachment' do\n---\n\n\n---\n\nChoice D:\napp/models/account_pin.rb\n@@ -5,10 +5,10 @@\n # Table name: account_pins\n #\n #  id                :bigint(8)        not null, primary key\n-#  account_id        :bigint(8)\n-#  target_account_id :bigint(8)\n #  created_at        :datetime         not null\n #  updated_at        :datetime         not null\n+#  account_id        :bigint(8)        not null\n+#  target_account_id :bigint(8)        not null\n #\n \n class AccountPin < ApplicationRecord\n---\ndb/migrate/20241210140838_add_not_null_to_account_pin_account_columns.rb\n@@ -0,0 +1,23 @@\n+# frozen_string_literal: true\n+\n+class AddNotNullToAccountPinAccountColumns < ActiveRecord::Migration[7.2]\n+  def up\n+    connection.execute(<<~SQL.squish)\n+      DELETE FROM account_pins\n+      WHERE account_id IS NULL\n+      OR target_account_id IS NULL\n+    SQL\n+\n+    safety_assured do\n+      change_column_null :account_pins, :account_id, false\n+      change_column_null :account_pins, :target_account_id, false\n+    end\n+  end\n+\n+  def down\n+    safety_assured do\n+      change_column_null :account_pins, :account_id, true\n+      change_column_null :account_pins, :target_account_id, true\n+    end\n+  end\n+end\n---\ndb/schema.rb\n@@ -10,7 +10,7 @@\n #\n # It's strongly recommended that you check this file into your version control system.\n \n-ActiveRecord::Schema[7.2].define(version: 2024_12_05_163118) do\n+ActiveRecord::Schema[7.2].define(version: 2024_12_10_140838) do\n   # These are extensions that must be enabled in order to support this database\n   enable_extension \"plpgsql\"\n \n@@ -82,8 +82,8 @@\n   end\n \n   create_table \"account_pins\", force: :cascade do |t|\n-    t.bigint \"account_id\"\n-    t.bigint \"target_account_id\"\n+    t.bigint \"account_id\", null: false\n+    t.bigint \"target_account_id\", null: false\n     t.datetime \"created_at\", precision: nil, null: false\n     t.datetime \"updated_at\", precision: nil, null: false\n     t.index [\"account_id\", \"target_account_id\"], name: \"index_account_pins_on_account_id_and_target_account_id\", unique: true\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Colour theme for image description edit modal is mismatched\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\nClick \"edit\" on uploaded image, And see this modal dialog\r\n![image](https://github.com/user-attachments/assets/92a49b13-eb49-46f4-8fe1-b7d72c74bf5e)\r\n\r\n### Expected behaviour\r\n\r\nMatched color theme with other modals\r\n\r\n### Actual behaviour\r\n\r\nModal's background is light while its textedit box and other modals are dark\r\n\r\n### Detailed description\r\n\r\nOther modals using dark theme\r\nBoost:\r\n![image](https://github.com/user-attachments/assets/4d60257d-f1f6-4455-bf93-95f4e24d41f5)\r\nMute user:\r\n![image](https://github.com/user-attachments/assets/e6c7e6d0-a3d1-40b7-86a9-998f86c0dc82)\r\n\r\n\r\n### Mastodon instance\r\n\r\ndevelopment version\r\n\r\n### Mastodon version\r\n\r\nv4.3.0-beta.1\r\n\r\n### Browser name and version\r\n\r\nFirefox 129.0.2\r\n\r\n### Operating system\r\n\r\nUbuntu 22.04.4 LTS\r\n\r\n### Technical details\r\n\r\n_No response_\n\n---\n\nChoice A:\napp/javascript/styles/mastodon-light/diff.scss\n@@ -159,8 +159,8 @@\n .error-modal,\n .onboarding-modal,\n .compare-history-modal,\n-.report-modal__comment .setting-text__wrapper,\n-.report-modal__comment .setting-text,\n+.report-modal__comment,\n+.report-modal__comment,\n .announcements,\n .picture-in-picture__header,\n .picture-in-picture__footer,\n@@ -169,6 +169,11 @@\n   border: 1px solid var(--background-border-color);\n }\n \n+.setting-text__wrapper,\n+.setting-text {\n+  border: 1px solid var(--background-border-color);\n+}\n+\n .reactions-bar__item:hover,\n .reactions-bar__item:focus,\n .reactions-bar__item:active {\n@@ -198,14 +203,6 @@\n   color: $white;\n }\n \n-.report-modal__comment {\n-  border-right-color: lighten($ui-base-color, 8%);\n-}\n-\n-.report-modal__container {\n-  border-top-color: lighten($ui-base-color, 8%);\n-}\n-\n .column-settings__hashtags .column-select__option {\n   color: $white;\n }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -3911,7 +3911,7 @@ $ui-header-logo-wordmark-width: 99px;\n \n   &__wrapper {\n     background: $white;\n-    border: 1px solid $ui-secondary-color;\n+    border: 1px solid var(--background-border-color);\n     margin-bottom: 10px;\n     border-radius: 4px;\n \n@@ -6298,9 +6298,10 @@ a.status-card {\n .report-modal,\n .actions-modal,\n .compare-history-modal {\n-  background: lighten($ui-secondary-color, 8%);\n-  color: $inverted-text-color;\n-  border-radius: 8px;\n+  background: var(--background-color);\n+  color: $primary-text-color;\n+  border-radius: 4px;\n+  border: 1px solid var(--background-border-color);\n   overflow: hidden;\n   max-width: 90vw;\n   width: 480px;\n@@ -6344,6 +6345,7 @@ a.status-card {\n .report-modal {\n   width: 90vw;\n   max-width: 700px;\n+  border: 1px solid var(--background-border-color);\n }\n \n .report-dialog-modal {\n@@ -6567,7 +6569,7 @@ a.status-card {\n \n .report-modal__container {\n   display: flex;\n-  border-top: 1px solid $ui-secondary-color;\n+  border-top: 1px solid var(--background-border-color);\n \n   @media screen and (width <= 480px) {\n     flex-wrap: wrap;\n@@ -6625,7 +6627,7 @@ a.status-card {\n \n .report-modal__comment {\n   padding: 20px;\n-  border-inline-end: 1px solid $ui-secondary-color;\n+  border-inline-end: 1px solid var(--background-border-color);\n   max-width: 320px;\n \n   p {\n@@ -6636,7 +6638,7 @@ a.status-card {\n \n   .setting-text-label {\n     display: block;\n-    color: $inverted-text-color;\n+    color: $secondary-text-color;\n     font-size: 14px;\n     font-weight: 500;\n     margin-bottom: 10px;\n---\n\n\n---\n\nChoice B:\napp/javascript/styles/mastodon/components.scss\n@@ -7580,7 +7580,7 @@ a.status-card {\n   }\n }\n \n-.radio-button.checked::before {\n+.radio-button__input.checked::before {\n   position: absolute;\n   left: 2px;\n   top: 2px;\n---\n\n\n---\n\nChoice C:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/reducers/compose.js\n@@ -402,7 +402,7 @@ export default function compose(state = initialState, action) {\n       .set('isUploadingThumbnail', false)\n       .update('media_attachments', list => list.map(item => {\n         if (item.get('id') === action.media.id) {\n-          return fromJS(action.media);\n+          return fromJS(action.media).set('unattached', item.get('unattached'));\n         }\n \n         return item;\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Alt text is dropped when a video with custom thumbnail is uploaded.\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Drag and drop a video in the new post area to upload it.\r\n2. Click on the edit pencil icon of the video to edit the Alt text.\r\n3. Enter Alt Text.\r\n4. Upload a custom thumbnail for the video and save the changes.\r\n5. If you now post your video post, the Alt text is missing.\r\n...\n\n### Expected behaviour\n\nThe Alt text should of course be kept alive and kicking ;-)\n\n### Actual behaviour\n\nThe Alt text is dropped.\n\n### Detailed description\n\nWhen using a custom thumbnail for videos, the Alt text vanishes when the toot is posted.\r\n\r\nThis only happens when adding a custom thumbnail.\r\nI can work around it if after posting I re-edit the post, enter the Alt text again and re-post.\r\nI have tested this on mastodon.art, zirk.us and Vivaldi.social.\r\nThe bug is around for as long as I can remember, several years I think.\n\n### Mastodon instance\n\nmastodon.art, zirk.us and Vivaldi.social\n\n### Mastodon version\n\nv4.2.12 and earlier\n\n### Browser name and version\n\nVivaldi for the last year or more, Firefox\n\n### Operating system\n\nWindows 10 and 11\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/mastodon/reducers/compose.js\n@@ -402,7 +402,7 @@ export default function compose(state = initialState, action) {\n       .set('isUploadingThumbnail', false)\n       .update('media_attachments', list => list.map(item => {\n         if (item.get('id') === action.media.id) {\n-          return fromJS(action.media);\n+          return fromJS(action.media).set('unattached', item.get('unattached'));\n         }\n \n         return item;\n---\n\n\n---\n\nChoice B:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\nChoice C:\napp/controllers/auth/sessions_controller.rb\n@@ -187,4 +187,15 @@ def on_authentication_failure(user, security_measure, failure_reason)\n   def second_factor_attempts_key(user)\n     \"2fa_auth_attempts:#{user.id}:#{Time.now.utc.hour}\"\n   end\n+\n+  def respond_to_on_destroy\n+    respond_to do |format|\n+      format.json do\n+        render json: {\n+          redirect_to: after_sign_out_path_for(resource_name),\n+        }, status: 200\n+      end\n+      format.all { super }\n+    end\n+  end\n end\n---\napp/javascript/mastodon/features/ui/components/confirmation_modals/log_out.tsx\n@@ -25,7 +25,7 @@ export const ConfirmLogOutModal: React.FC<BaseConfirmationModalProps> = ({\n   const intl = useIntl();\n \n   const onConfirm = useCallback(() => {\n-    logOut();\n+    void logOut();\n   }, []);\n \n   return (\n---\napp/javascript/mastodon/utils/log_out.ts\n@@ -1,36 +1,20 @@\n-export const logOut = () => {\n-  const form = document.createElement('form');\n+import api from 'mastodon/api';\n \n-  const methodInput = document.createElement('input');\n-  methodInput.setAttribute('name', '_method');\n-  methodInput.setAttribute('value', 'delete');\n-  methodInput.setAttribute('type', 'hidden');\n-  form.appendChild(methodInput);\n+export async function logOut() {\n+  try {\n+    const response = await api(false).delete<{ redirect_to?: string }>(\n+      '/auth/sign_out',\n+      { headers: { Accept: 'application/json' }, withCredentials: true },\n+    );\n \n-  const csrfToken = document.querySelector<HTMLMetaElement>(\n-    'meta[name=csrf-token]',\n-  );\n-\n-  const csrfParam = document.querySelector<HTMLMetaElement>(\n-    'meta[name=csrf-param]',\n-  );\n-\n-  if (csrfParam && csrfToken) {\n-    const csrfInput = document.createElement('input');\n-    csrfInput.setAttribute('name', csrfParam.content);\n-    csrfInput.setAttribute('value', csrfToken.content);\n-    csrfInput.setAttribute('type', 'hidden');\n-    form.appendChild(csrfInput);\n+    if (response.status === 200 && response.data.redirect_to)\n+      window.location.href = response.data.redirect_to;\n+    else\n+      console.error(\n+        'Failed to log out, got an unexpected non-redirect response from the server',\n+        response,\n+      );\n+  } catch (error) {\n+    console.error('Failed to log out, response was an error', error);\n   }\n-\n-  const submitButton = document.createElement('input');\n-  submitButton.setAttribute('type', 'submit');\n-  form.appendChild(submitButton);\n-\n-  form.method = 'post';\n-  form.action = '/auth/sign_out';\n-  form.style.display = 'none';\n-\n-  document.body.appendChild(form);\n-  submitButton.click();\n-};\n+}\n---\nspec/requests/log_out_spec.rb\n@@ -0,0 +1,30 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+describe 'Log Out' do\n+  include RoutingHelper\n+\n+  describe 'DELETE /auth/sign_out' do\n+    let(:user) { Fabricate(:user) }\n+\n+    before do\n+      sign_in user\n+    end\n+\n+    it 'Logs out the user and redirect' do\n+      delete '/auth/sign_out'\n+\n+      expect(response).to redirect_to('/auth/sign_in')\n+    end\n+\n+    it 'Logs out the user and return a page to redirect to with a JSON request' do\n+      delete '/auth/sign_out', headers: { 'HTTP_ACCEPT' => 'application/json' }\n+\n+      expect(response).to have_http_status(200)\n+      expect(response.media_type).to eq 'application/json'\n+\n+      expect(body_as_json[:redirect_to]).to eq '/auth/sign_in'\n+    end\n+  end\n+end\n---\nspec/system/log_out_spec.rb\n@@ -0,0 +1,43 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+describe 'Log out' do\n+  include ProfileStories\n+\n+  before do\n+    as_a_logged_in_user\n+  end\n+\n+  describe 'Logging out from the preferences' do\n+    it 'logs the user out' do\n+      visit settings_path\n+\n+      within '.sidebar' do\n+        click_on 'Logout'\n+      end\n+\n+      expect(page).to have_title(I18n.t('auth.login'))\n+      expect(page).to have_current_path('/auth/sign_in')\n+    end\n+  end\n+\n+  describe 'Logging out from the JS app', :js, :streaming do\n+    it 'logs the user out' do\n+      visit root_path\n+\n+      within '.navigation-bar' do\n+        click_on 'Menu'\n+      end\n+\n+      within '.dropdown-menu' do\n+        click_on 'Logout'\n+      end\n+\n+      click_on 'Log out'\n+\n+      expect(page).to have_title(I18n.t('auth.login'))\n+      expect(page).to have_current_path('/auth/sign_in')\n+    end\n+  end\n+end\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/widgets.scss\n@@ -1,3 +1,85 @@\n+.directory {\n+  &__tag {\n+    box-sizing: border-box;\n+    margin-bottom: 10px;\n+\n+    & > a,\n+    & > div {\n+      display: flex;\n+      align-items: center;\n+      justify-content: space-between;\n+      border: 1px solid var(--background-border-color);\n+      border-radius: 4px;\n+      padding: 15px;\n+      text-decoration: none;\n+      color: inherit;\n+      box-shadow: 0 0 15px rgba($base-shadow-color, 0.2);\n+    }\n+\n+    & > a {\n+      &:hover,\n+      &:active,\n+      &:focus {\n+        background: $ui-base-color;\n+      }\n+    }\n+\n+    &.active > a {\n+      background: $ui-highlight-color;\n+      cursor: default;\n+    }\n+\n+    &.disabled > div {\n+      opacity: 0.5;\n+      cursor: default;\n+    }\n+\n+    h4 {\n+      flex: 1 1 auto;\n+      font-size: 18px;\n+      font-weight: 700;\n+      color: $primary-text-color;\n+      white-space: nowrap;\n+      overflow: hidden;\n+      text-overflow: ellipsis;\n+\n+      .fa {\n+        color: $darker-text-color;\n+      }\n+\n+      small {\n+        display: block;\n+        font-weight: 400;\n+        font-size: 15px;\n+        margin-top: 8px;\n+        color: $darker-text-color;\n+      }\n+    }\n+\n+    &.active h4 {\n+      &,\n+      .fa,\n+      small,\n+      .trends__item__current {\n+        color: $primary-text-color;\n+      }\n+    }\n+\n+    .avatar-stack {\n+      flex: 0 0 auto;\n+      width: (36px + 4px) * 3;\n+    }\n+\n+    &.active .avatar-stack .account__avatar {\n+      border-color: $ui-highlight-color;\n+    }\n+\n+    .trends__item__current {\n+      padding-inline-end: 0;\n+    }\n+  }\n+}\n+\n .accounts-table {\n   width: 100%;\n \n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: 4.3.0-beta.1: The message window is not displayed correctly\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. The message box is displayed incorrectly when the browser window width is small.\r\n2. Set the window size to a width of 1200 to 1167 pixels.\r\n![vivaldi_2024-09-01_17-48-27](https://github.com/user-attachments/assets/a5f98fab-ed7e-4a12-b6ec-35d381fd9e5c)\r\n\r\n\n\n### Expected behaviour\n\nThe message box is cropped to the left\n\n### Actual behaviour\n\nThe message window is displayed correctly\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\nexample.com\n\n### Mastodon version\n\n4.3.0-beta.1\n\n### Browser name and version\n\nVivaldi 6.2.3105.58\n\n### Operating system\n\nWindows 10 22H2\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -13,6 +13,7 @@ import {\n import type { IconProp } from 'mastodon/components/icon';\n import { Icon } from 'mastodon/components/icon';\n import Status from 'mastodon/containers/status_container';\n+import { getStatusHidden } from 'mastodon/selectors/filters';\n import { useAppSelector, useAppDispatch } from 'mastodon/store';\n \n import { DisplayedName } from './displayed_name';\n@@ -48,6 +49,12 @@ export const NotificationWithStatus: React.FC<{\n     (state) => state.statuses.getIn([statusId, 'visibility']) === 'direct',\n   );\n \n+  const isFiltered = useAppSelector(\n+    (state) =>\n+      statusId &&\n+      getStatusHidden(state, { id: statusId, contextType: 'notifications' }),\n+  );\n+\n   const handlers = useMemo(\n     () => ({\n       open: () => {\n@@ -73,7 +80,7 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n-  if (!statusId) return null;\n+  if (!statusId || isFiltered) return null;\n \n   return (\n     <HotKeys handlers={handlers}>\n---\napp/javascript/mastodon/selectors/filters.ts\n@@ -0,0 +1,50 @@\n+import { createSelector } from '@reduxjs/toolkit';\n+\n+import type { RootState } from 'mastodon/store';\n+import { toServerSideType } from 'mastodon/utils/filters';\n+\n+// TODO: move to `app/javascript/mastodon/models` and use more globally\n+type Filter = Immutable.Map<string, unknown>;\n+\n+// TODO: move to `app/javascript/mastodon/models` and use more globally\n+type FilterResult = Immutable.Map<string, unknown>;\n+\n+export const getFilters = createSelector(\n+  [\n+    (state: RootState) => state.filters as Immutable.Map<string, Filter>,\n+    (_, { contextType }: { contextType: string }) => contextType,\n+  ],\n+  (filters, contextType) => {\n+    if (!contextType) {\n+      return null;\n+    }\n+\n+    const now = new Date();\n+    const serverSideType = toServerSideType(contextType);\n+\n+    return filters.filter((filter) => {\n+      const context = filter.get('context') as Immutable.List<string>;\n+      const expiration = filter.get('expires_at') as Date | null;\n+      return (\n+        context.includes(serverSideType) &&\n+        (expiration === null || expiration > now)\n+      );\n+    });\n+  },\n+);\n+\n+export const getStatusHidden = (\n+  state: RootState,\n+  { id, contextType }: { id: string; contextType: string },\n+) => {\n+  const filters = getFilters(state, { contextType });\n+  if (filters === null) return false;\n+\n+  const filtered = state.statuses.getIn([id, 'filtered']) as\n+    | Immutable.List<FilterResult>\n+    | undefined;\n+  return filtered?.some(\n+    (result) =>\n+      filters.getIn([result.get('filter'), 'filter_action']) === 'hide',\n+  );\n+};\n---\napp/javascript/mastodon/selectors/index.js\n@@ -1,22 +1,11 @@\n import { createSelector } from '@reduxjs/toolkit';\n import { List as ImmutableList, Map as ImmutableMap } from 'immutable';\n \n-import { toServerSideType } from 'mastodon/utils/filters';\n-\n import { me } from '../initial_state';\n \n-export { makeGetAccount } from \"./accounts\";\n-\n-const getFilters = createSelector([state => state.get('filters'), (_, { contextType }) => contextType], (filters, contextType) => {\n-  if (!contextType) {\n-    return null;\n-  }\n+import { getFilters } from './filters';\n \n-  const now = new Date();\n-  const serverSideType = toServerSideType(contextType);\n-\n-  return filters.filter(filter => filter.get('context').includes(serverSideType) && (filter.get('expires_at') === null || filter.get('expires_at') > now));\n-});\n+export { makeGetAccount } from \"./accounts\";\n \n export const makeGetStatus = () => {\n   return createSelector(\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/ui/components/columns_area.jsx\n@@ -63,7 +63,7 @@ export default class ColumnsArea extends ImmutablePureComponent {\n     children: PropTypes.node,\n   };\n \n-  // Corresponds to (max-width: $no-gap-breakpoint + 285px - 1px) in SCSS\n+  // Corresponds to (max-width: $no-gap-breakpoint - 1px) in SCSS\n   mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1174px)');\n \n   state = {\n---\napp/javascript/styles/mastodon/components.scss\n@@ -2712,7 +2712,7 @@ a.account__display-name {\n       flex-direction: column;\n \n       @media screen and (min-width: $no-gap-breakpoint) {\n-        max-width: 600px;\n+        max-width: 568px;\n       }\n     }\n   }\n---\napp/javascript/mastodon/features/ui/components/columns_area.jsx\n@@ -63,8 +63,8 @@ export default class ColumnsArea extends ImmutablePureComponent {\n     children: PropTypes.node,\n   };\n \n-  // Corresponds to (max-width: $no-gap-breakpoint + 285px - 1px) in SCSS\n-  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1174px)');\n+  // Corresponds to (max-width: $no-gap-breakpoint - 1px) in SCSS\n+  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1206px)');\n \n   state = {\n     renderComposePanel: !(this.mediaQuery && this.mediaQuery.matches),\n---\napp/javascript/styles/mastodon/variables.scss\n@@ -87,7 +87,7 @@ $media-modal-media-max-width: 100%;\n // put margins on top and bottom of image to avoid the screen covered by image.\n $media-modal-media-max-height: 80%;\n \n-$no-gap-breakpoint: 1175px;\n+$no-gap-breakpoint: 1207px;\n $mobile-breakpoint: 630px;\n \n $font-sans-serif: 'mastodon-font-sans-serif' !default;\n---\n\n\n---\n\nChoice C:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\nChoice D:\nlib/mastodon/cli/feeds.rb\n@@ -5,6 +5,7 @@\n module Mastodon::CLI\n   class Feeds < Base\n     include Redisable\n+    include DatabaseHelper\n \n     option :all, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n@@ -44,6 +45,38 @@ def clear\n       say('OK', :green)\n     end\n \n+    desc 'vacuum', 'Remove home feeds of inactive users from Redis'\n+    long_desc <<-LONG_DESC\n+      Running this task should not be needed in most cases, as Mastodon will\n+      automatically clean up feeds from inactive accounts every day.\n+\n+      However, this task is more aggressive in order to clean up feeds that\n+      may have been missed because of bugs or database mishaps.\n+    LONG_DESC\n+    def vacuum\n+      with_read_replica do\n+        say('Deleting orphaned home feeds\u2026')\n+        redis.scan_each(match: 'feed:home:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = User.confirmed.signed_in_recently.where(account_id: ids).pluck(:account_id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+\n+        say('Deleting orphaned list feeds\u2026')\n+        redis.scan_each(match: 'feed:list:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = List.where(account_id: User.confirmed.signed_in_recently.select(:account_id)).where(id: ids).pluck(:id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+      end\n+    end\n+\n     private\n \n     def active_user_accounts\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: The mute user options only use color to indicate the selected option\n\nIssue Description:\n### Steps to reproduce the problem\n\nMute a user and click \u201cShow Options\u201d. You now see multiple circles that only indicate they are selected by changing the color.\r\n\n\n### Expected behaviour\n\nFilled circles, point in circle. Something like a real radio button.\n\n### Actual behaviour\n\nEmpty circles, only other color.\n\n### Detailed description\n\nSee image.\r\n\r\n![image](https://github.com/user-attachments/assets/7bc3d1ca-89cb-4278-887b-c0cd8162608a)\r\n\r\nThe simulated radio buttons look differently from real radio buttons and make it hard for the user to see what they have selected.\n\n### Mastodon instance\n\nmastodon.social\n\n### Mastodon version\n\nv4.3.0-nightly.2024-08-28\n\n### Browser name and version\n\nGoogle Chrome 128.0.6613.114\n\n### Operating system\n\nWindows 10\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -10453,7 +10453,7 @@ noscript {\n       gap: 4px;\n \n       dt {\n-        flex: 0 0 auto;\n+        flex: 0 1 auto;\n         color: $dark-text-color;\n         min-width: 0;\n         overflow: hidden;\n---\n\n\n---\n\nChoice B:\napp/javascript/styles/mastodon/components.scss\n@@ -1996,6 +1996,7 @@ body > [data-popper-placement] {\n \n         &__handle {\n           user-select: all;\n+          overflow-wrap: anywhere;\n         }\n       }\n \n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -7580,7 +7580,7 @@ a.status-card {\n   }\n }\n \n-.radio-button.checked::before {\n+.radio-button__input.checked::before {\n   position: absolute;\n   left: 2px;\n   top: 2px;\n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -2,6 +2,29 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.7] - 2025-04-02\n+\n+### Add\n+\n+- Add delay to profile updates to debounce them (#34137 by @ClearlyClaire)\n+- Add support for paginating partial collections in `SynchronizeFollowersService` (#34272 and #34277 by @ClearlyClaire)\n+\n+### Changed\n+\n+- Change account suspensions to be federated to recently-followed accounts as well (#34294 by @ClearlyClaire)\n+- Change `AccountReachFinder` to consider statuses based on suspension date (#32805 and #34291 by @ClearlyClaire and @mjankowski)\n+- Change user archive signed URL TTL from 10 seconds to 1 hour (#34254 by @ClearlyClaire)\n+\n+### Fixed\n+\n+- Fix static version of animated PNG emojis not being properly extracted (#34337 by @ClearlyClaire)\n+- Fix filters not applying in detailed view, favourites and bookmarks (#34259 and #34260 by @ClearlyClaire)\n+- Fix handling of malformed/unusual HTML (#34201 by @ClearlyClaire)\n+- Fix `CacheBuster` being queued for missing media attachments (#34253 by @ClearlyClaire)\n+- Fix incorrect URL being used when cache busting (#34189 by @ClearlyClaire)\n+- Fix streaming server refusing unix socket path in `DATABASE_URL` (#34091 by @ClearlyClaire)\n+- Fix \u201cx\u201d hotkey not working on boosted filtered posts (#33758 by @ClearlyClaire)\n+\n ## [4.3.6] - 2025-03-13\n \n ### Security\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.6\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -102,7 +102,7 @@ services:\n   sidekiq:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      6\n+      7\n     end\n \n     def default_prerelease\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix not being able to load more notifications after trimming\n\nIssue Description:\nBefore this change, scrolling down then up in the grouped notifications column prevents you from loading older notifications.\r\n\r\nIndeed, the \u201cload more\u201d/\u201cload older\u201d functionality was implemented by having a trailing \u201cgap\u201d in the grouped notifications list, but `trimNotifications` removed the gap.\r\n\r\nThis PR ensures that when the notifications list is trimmed, an adequate trailing gap is added.\n\n---\n\nChoice A:\napp/presenters/language_presenter.rb\n@@ -1,7 +1,7 @@\n # frozen_string_literal: true\n \n class LanguagePresenter < ActiveModelSerializers::Model\n-  attributes :code, :name, :native_name\n+  attributes :code, :name\n \n   def initialize(code)\n     super()\n@@ -13,8 +13,4 @@ def initialize(code)\n   def name\n     @item[0]\n   end\n-\n-  def native_name\n-    @item[1]\n-  end\n end\n---\nspec/requests/api/v1/instances/languages_spec.rb\n@@ -9,10 +9,21 @@\n     end\n \n     it 'returns http success and includes supported languages' do\n-      expect(response).to have_http_status(200)\n+      expect(response)\n+        .to have_http_status(200)\n       expect(response.content_type)\n         .to start_with('application/json')\n-      expect(response.parsed_body.pluck(:code)).to match_array LanguagesHelper::SUPPORTED_LOCALES.keys.map(&:to_s)\n+      expect(response.parsed_body)\n+        .to match_array(supported_locale_expectations)\n+    end\n+\n+    def supported_locale_expectations\n+      LanguagesHelper::SUPPORTED_LOCALES.map do |key, values|\n+        include(\n+          code: key.to_s,\n+          name: values.first\n+        )\n+      end\n     end\n   end\n end\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -10,21 +10,24 @@ The following changelog entries focus on changes visible to users, administrator\n \n - **Add confirmation interstitial instead of silently redirecting logged-out visitors to remote resources** (#27792, #28902, and #30651 by @ClearlyClaire and @Gargron)\\\n   This fixes a longstanding open redirect in Mastodon, at the cost of added friction when local links to remote resources are shared.\n+- Change `form-action` Content-Security-Policy directive to be more restrictive (#26897 by @ClearlyClaire)\n+- Update dependencies\n \n ### Added\n \n-- **Add experimental server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, and #31513 by @ClearlyClaire, @mgmn, and @renchap)\\\n+- **Add server-side notification grouping** (#29889, #30576, #30685, #30688, #30707, #30776, #30779, #30781, #30440, #31062, #31098, #31076, #31111, #31123, #31223, #31214, #31224, #31299, #31325, #31347, #31304, #31326, #31384, #31403, #31433, #31509, #31486, #31513, #31592, #31594, #31638, #31746, #31652, #31709, #31725, #31745, #31613, #31657, #31840, #31610 and #31929 by @ClearlyClaire, @Gargron, @mgmn, and @renchap)\\\n   Group notifications of the same type for the same target, so that your notifications no longer get cluttered by boost and favorite notifications as soon as a couple of your posts get traction.\\\n   This is done server-side so that clients can efficiently get relevant groups without having to go through numerous pages of individual notifications.\\\n   As part of this, the visual design of the entire notifications feature has been revamped.\\\n   This feature is intended to eventually replace the existing notifications column, but for this first beta, users will have to enable it in the \u201cExperimental features\u201d section of the notifications column settings.\\\n   The API is not final yet, but it consists of:\n   - a new `group_key` attribute to `Notification` entities\n-  - `GET /api/v2_alpha/notifications`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-grouped\n-  - `GET /api/v2_alpha/notifications/:group_key`: https://docs.joinmastodon.org/methods/notifications_alpha/#get-notification-group\n-  - `POST /api/v2_alpha/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/notifications_alpha/#dismiss-group\n-  - `GET /api/v2_alpha/notifications/:unread_count`: https://docs.joinmastodon.org/methods/notifications_alpha/#unread-group-count\n-- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, and #31541 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n+  - `GET /api/v2/notifications`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-grouped\n+  - `GET /api/v2/notifications/:group_key`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-notification-group\n+  - `GET /api/v2/notifications/:group_key/accounts`: https://docs.joinmastodon.org/methods/grouped_notifications/#get-group-accounts\n+  - `POST /api/v2/notifications/:group_key/dimsiss`: https://docs.joinmastodon.org/methods/grouped_notifications/#dismiss-group\n+  - `GET /api/v2/notifications/:unread_count`: https://docs.joinmastodon.org/methods/grouped_notifications/#unread-group-count\n+- **Add notification policies, filtered notifications and notification requests** (#29366, #29529, #29433, #29565, #29567, #29572, #29575, #29588, #29646, #29652, #29658, #29666, #29693, #29699, #29737, #29706, #29570, #29752, #29810, #29826, #30114, #30251, #30559, #29868, #31008, #31011, #30996, #31149, #31220, #31222, #31225, #31242, #31262, #31250, #31273, #31310, #31316, #31322, #31329, #31324, #31331, #31343, #31342, #31309, #31358, #31378, #31406, #31256, #31456, #31419, #31457, #31508, #31540, #31541, and #31723 by @ClearlyClaire, @Gargron, @TheEssem, @mgmn, @oneiros, and @renchap)\\\n   The old \u201cBlock notifications from non-followers\u201d, \u201cBlock notifications from people you don't follow\u201d and \u201cBlock direct messages from people you don't follow\u201d notification settings have been replaced by a new set of settings found directly in the notification column.\\\n   You can now separately filter or drop notifications from people you don't follow, people who don't follow you, accounts created within the past 30 days, as well as unsolicited private mentions, and accounts limited by the moderation.\\\n   Instead of being outright dropped, notifications that you chose to filter are put in a separate \u201cFiltered notifications\u201d box that you can review separately without it clogging your main notifications.\\\n@@ -57,26 +60,31 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add timeline of public posts about a trending link** (#30381 and #30840 by @Gargron)\\\n   You can now see public posts mentioning currently-trending articles from people who have opted into discovery features.\\\n   This adds a new REST API endpoint: https://docs.joinmastodon.org/methods/timelines/#link\n-- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, and #30846 by @Gargron)\\\n+- **Add author highlight for news articles whose authors are on the fediverse** (#30398, #30670, #30521, #30846, #31819, and #31900 by @Gargron and @oneiros)\\\n   This adds a mechanism to [highlight the author of news articles](https://blog.joinmastodon.org/2024/07/highlighting-journalism-on-mastodon/) shared on Mastodon.\\\n   Articles hosted outside the fediverse can indicate a fediverse author with a meta tag:\n   ```html\n   <meta name=\"fediverse:creator\" content=\"username@domain\" />\n   ```\n   On the API side, this is represented by a new `authors` attribute to the `PreviewCard` entity: https://docs.joinmastodon.org/entities/PreviewCard/#authors\\\n-  Note that this feature is still work in progress and the tagging format and verification mechanisms may change in future releases.\n+  Users can allow arbitrary domains to use `fediverse:creator` to credit them by visiting `/settings/verification`.\\\n+  This is federated as a new `attributionDomains` property in the `http://joinmastodon.org/ns` namespace, containing an array of domain names: https://docs.joinmastodon.org/spec/activitypub/#properties-used-1\n - **Add in-app notifications for moderation actions and warnings** (#30065, #30082, and #30081 by @ClearlyClaire)\\\n   In addition to email notifications, also notify users of moderation actions or warnings against them directly within the app, so they are less likely to miss important communication from their moderators.\\\n   This adds the `moderation_warning` notification type to the REST API and streaming, with a new [`moderation_warning` attribute](https://docs.joinmastodon.org/entities/Notification/#moderation_warning).\n - **Add domain information to profiles in web UI** (#29602 by @Gargron)\\\n   Clicking the domain of a user in their profile will now open a tooltip with a short explanation about servers and federation.\n+- **Add support for Redis sentinel** (#31694, #31623, #31744, #31767, and #31768 by @ThisIsMissEm and @oneiros)\\\n+  See https://docs.joinmastodon.org/admin/scaling/#redis-sentinel\n - Add ability to reorder uploaded media before posting in web UI (#28456 by @Gargron)\n - Add moderation interface for searching hashtags (#30880 by @ThisIsMissEm)\n - Add ability for admins to configure instance favicon and logo (#30040, #30208, #30259, #30375, #30734, #31016, and #30205 by @ClearlyClaire, @FawazFarid, @JasonPunyon, @mgmn, and @renchap)\\\n   This is also exposed through the REST API: https://docs.joinmastodon.org/entities/Instance/#icon\n - Add `api_versions` to `/api/v2/instance` (#31354 by @ClearlyClaire)\\\n   Add API version number to make it easier for clients to detect compatible features going forward.\\\n   See API documentation at https://docs.joinmastodon.org/entities/Instance/#api-versions\n+- Add quick links to Administration and Moderation Reports from Web UI (#24838 by @ThisIsMissEm)\n+- Add link to `/admin/roles` in moderation interface when changing someone's role (#31791 by @ClearlyClaire)\n - Add recent audit log entries in federation moderation interface (#27386 by @ThisIsMissEm)\n - Add profile setup to onboarding in web UI (#27829, #27876, and #28453 by @Gargron)\n - Add prominent share/copy button on profiles in web UI (#27865 and #27889 by @ClearlyClaire and @Gargron)\n@@ -113,21 +121,24 @@ The following changelog entries focus on changes visible to users, administrator\n - Add support for multiple `redirect_uris` when creating OAuth 2.0 Applications (#29192 by @ThisIsMissEm)\n - Add Interlingue and Interlingua to interface languages (#28630 and #30828 by @Dhghomon and @renchap)\n - Add Kashubian, Pennsylvania Dutch, Vai, Jawi Malay, Mohawk and Low German to posting languages (#26024, #26634, #27136, #29098, #27115, and #27434 by @EngineerDali, @HelgeKrueger, and @gunchleoc)\n-- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n - Add option to use native Ruby driver for Redis through `REDIS_DRIVER=ruby` (#30717 by @vmstan)\n - Add support for libvips in addition to ImageMagick (#30090, #30590, #30597, #30632, #30857, #30869, and #30858 by @ClearlyClaire, @Gargron, and @mjankowski)\\\n   Server admins can now use libvips as a faster and lighter alternative to ImageMagick for processing user-uploaded images.\\\n   This requires libvips 8.13 or newer, and needs to be enabled with `MASTODON_USE_LIBVIPS=true`.\\\n   This is enabled by default in the official Docker images, and is intended to completely replace ImageMagick in the future.\n+- Add validations to `Web::PushSubscription` (#30540 and #30542 by @ThisIsMissEm)\n+- Add anchors to each authorized application in `/oauth/authorized_applications` (#31677 by @fowl2)\n - Add active animation to header settings button (#30221, #30307, and #30388 by @daudix)\n - Add OpenTelemetry instrumentation (#30130, #30322, #30353, and #30350 by @julianocosta89, @renchap, and @robbkidd)\\\n   See https://docs.joinmastodon.org/admin/config/#otel for documentation\n - Add API to get multiple accounts and statuses (#27871 and #30465 by @ClearlyClaire)\\\n   This adds `GET /api/v1/accounts` and `GET /api/v1/statuses` to the REST API, see https://docs.joinmastodon.org/methods/accounts/#index and https://docs.joinmastodon.org/methods/statuses/#index\n+- Add support for CORS to `POST /oauth/revoke` (#31743 by @ClearlyClaire)\n - Add redirection back to previous page after site upload deletion (#30141 by @FawazFarid)\n - Add RFC8414 OAuth 2.0 server metadata (#29191 by @ThisIsMissEm)\n - Add loading indicator and empty result message to advanced interface search (#30085 by @ClearlyClaire)\n - Add `profile` OAuth 2.0 scope, allowing more limited access to user data (#29087 and #30357 by @ThisIsMissEm)\n+- Add global Regexp timeout (#31928 by @ClearlyClaire)\n - Add the role ID to the badge component (#29707 by @renchap)\n - Add diagnostic message for failure during CLI search deploy (#29462 by @mjankowski)\n - Add pagination `Link` headers on API accounts/statuses when pinned true (#29442 by @mjankowski)\n@@ -156,34 +167,43 @@ The following changelog entries focus on changes visible to users, administrator\n - **Change icons throughout the web interface** (#27385, #27539, #27555, #27579, #27700, #27817, #28519, #28709, #28064, #28775, #28780, #27924, #29294, #29395, #29537, #29569, #29610, #29612, #29649, #29844, #27780, #30974, #30963, #30962, #30961, #31362, #31363, #31359, #31371, #31360, #31512, #31511, and #31525 by @ClearlyClaire, @Gargron, @arbolitoloco1, @mjankowski, @nclm, @renchap, @ronilaukkarinen, and @zunda)\\\n   This changes all the interface icons from FontAwesome to Material Symbols for a more modern look, consistent with the official Mastodon Android app.\\\n   In addition, better care is given to pixel alignment, and icon variants are used to better highlight active/inactive state.\n-- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, and #29659 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n+- **Change design of compose form in web UI** (#28119, #29059, #29248, #29372, #29384, #29417, #29456, #29406, #29651, #29659, and #31889 by @ClearlyClaire, @Gargron, @eai04191, @hinaloe, and @ronilaukkarinen)\\\n   The compose form has been completely redesigned for a more modern and consistent look, as well as spelling out the chosen privacy setting and language name at all times.\\\n   As part of this, the \u201cUnlisted\u201d privacy setting has been renamed to \u201cQuiet public\u201d.\n-- **Change design of confirmation modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, and #31399 by @ClearlyClaire, @Gargron, and @tribela)\\\n+- **Change design of modals in the web UI** (#29576, #29614, #29640, #29644, #30131, #30884, #31399, #31555, #31752, #31801, #31883, #31844, #31864, and #31943 by @ClearlyClaire, @Gargron, @tribela and @vmstan)\\\n   The mute, block, and domain block confirmation modals have been completely redesigned to be clearer and include more detailed information on the action to be performed.\\\n   They also have a more modern and consistent design, along with other confirmation modals in the application.\n - **Change colors throughout the web UI** (#29522, #29584, #29653, #29779, #29803, #29809, #29808, #29828, #31034, #31168, #31266, #31348, #31349, #31361, and #31510 by @ClearlyClaire, @Gargron, @renchap, and @vmstan)\n-- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878 and #29272 by @Gargron)\n+- **Change onboarding prompt to follow suggestions carousel in web UI** (#28878, #29272, and #31912 by @Gargron)\n - **Change email templates** (#28416, #28755, #28814, #29064, #28883, #29470, #29607, #29761, #29760, and #29879 by @ClearlyClaire, @Gargron, @hteumeuleu, and @mjankowski)\\\n   All emails to end-users have been completely redesigned with a fresh new look, providing more information while making them easier to read and keeping maximum compatibility across mail clients.\n - **Change follow recommendations algorithm** (#28314, #28433, #29017, #29108, #29306, #29550, #29619, and #31474 by @ClearlyClaire, @Gargron, @kernal053, @mjankowski, and @wheatear-dev)\\\n   This replaces the \u201cpast interactions\u201d recommendation algorithm with a \u201cfriends of friends\u201d algorithm that suggests accounts followed by people you follow, and a \u201csimilar profiles\u201d algorithm that suggests accounts with a profile similar to your most recent follows.\\\n   In addition, the implementation has been significantly reworked, and all follow recommendations are now dismissable.\\\n   This change deprecates the `source` attribute in `Suggestion` entities in the REST API, and replaces it with the new [`sources` attribute](https://docs.joinmastodon.org/entities/Suggestion/#sources).\n - Change account search algorithm (#30803 by @Gargron)\n-- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, and #30795 by @TheEssem, @ThisIsMissEm, @jippi, @timetinytim, and @vmstan)\\\n+- **Change streaming server to use its own dependencies and its own docker image** (#24702, #27967, #26850, #28112, #28115, #28137, #28138, #28497, #28548, #30795, #31612, and #31615 by @TheEssem, @ThisIsMissEm, @jippi, @renchap, @timetinytim, and @vmstan)\\\n   In order to reduce the amount of runtime dependencies, the streaming server has been moved into a separate package and Docker image.\\\n   The `mastodon` image does not contain the streaming server anymore, as it has been moved to its own `mastodon-streaming` image.\\\n   Administrators may need to update their setup accordingly.\n-- Change how content warnings and filters are displayed in web UI (#31365 by @Gargron)\n+- Change how content warnings and filters are displayed in web UI (#31365, and #31761 by @Gargron)\n+- Change preview card processing to ignore `undefined` as canonical url (#31882 by @oneiros)\n+- Change embedded posts to use web UI (#31766 by @Gargron)\n+- Change inner borders in media galleries in web UI (#31852 by @Gargron)\n+- Change design of hide media button in web UI (#31807 by @Gargron)\n+- Change labels on thread indicators in web UI (#31806 by @Gargron)\n+- Change report action buttons to be disabled when action has already been taken (#31773, #31822, and #31899 by @ClearlyClaire and @ThisIsMissEm)\n+- Change width of columns in advanced web UI (#31762 by @Gargron)\n+- Change design of unread conversations in web UI (#31763 by @Gargron)\n - Change Web UI to allow viewing and severing relationships with suspended accounts (#27667 by @ClearlyClaire)\\\n   This also adds a `with_suspended` parameter to `GET /api/v1/accounts/relationships` in the REST API.\n+- Change preview card image size limit from 2MB to 8MB when using libvips (#31904 by @ClearlyClaire)\n - Change avatars border radius (#31390 by @renchap)\n - Change counters to be displayed on profile timelines in web UI (#30525 by @Gargron)\n - Change disabled buttons color in light mode to make the difference more visible (#30998 by @renchap)\n - Change design of people tab on explore in web UI (#30059 by @Gargron)\n - Change sidebar text in web UI (#30696 by @Gargron)\n-- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452 and #28465 by @Gargron and @renchap)\n+- Change \"Follow\" to \"Follow back\" and \"Mutual\" when appropriate in web UI (#28452, #28465, and #31934 by @ClearlyClaire, @Gargron and @renchap)\n - Change media to be hidden/blurred by default in report modal (#28522 by @ClearlyClaire)\n - Change order of the \"muting\" and \"blocking\" list options in \u201cData Exports\u201d (#26088 by @fixermark)\n - Change admin and moderation notes character limit from 500 to 2000 characters (#30288 by @ThisIsMissEm)\n@@ -197,6 +217,7 @@ The following changelog entries focus on changes visible to users, administrator\n - Change dropdown menu icon to not be replaced by close icon when open in web UI (#29532 by @Gargron)\n - Change back button to always appear in advanced web UI (#29551 and #29669 by @Gargron)\n - Change border of active compose field search inputs (#29832 and #29839 by @vmstan)\n+- Change instances of Nokogiri HTML4 parsing to HTML5 (#31812, #31815, #31813, and #31814 by @flavorjones)\n - Change link detection to allow `@` at the end of an URL (#31124 by @adamniedzielski)\n - Change User-Agent to use Mastodon as the product, and http.rb as platform details (#31192 by @ClearlyClaire)\n - Change layout and wording of the Content Retention server settings page (#27733 by @vmstan)\n@@ -249,8 +270,17 @@ The following changelog entries focus on changes visible to users, administrator\n - Fix various issues when in link preview card generation (#28748, #30017, #30362, #30173, #30853, #30929, #30933, #30957, #30987, and #31144 by @adamniedzielski, @oneiros, @phocks, @timothyjrogers, and @tribela)\n - Fix handling of missing links in Webfinger responses (#31030 by @adamniedzielski)\n - Fix HTTP 500 error in `/api/v1/polls/:id/votes` when required `choices` parameter is missing (#25598 by @danielmbrasil)\n+- Fix security context sometimes not being added in LD-Signed activities (#31871 by @ClearlyClaire)\n - Fix cross-origin loading of `inert.css` polyfill (#30687 by @louis77)\n - Fix cutoff of instance name in sign-up form (#30598 by @oneiros)\n+- Fix invalid date searches returning 503 errors (#31526 by @notchairmk)\n+- Fix invalid `visibility` values in `POST /api/v1/statuses` returning 500 errors (#31571 by @c960657)\n+- Fix some components re-rendering spuriously in web UI (#31879 and #31881 by @ClearlyClaire and @Gargron)\n+- Fix sort order of moderation notes on Reports and Accounts (#31528 by @ThisIsMissEm)\n+- Fix email language when recipient has no selected locale (#31747 by @ClearlyClaire)\n+- Fix frequently-used languages not correctly updating in the web UI (#31386 by @c960657)\n+- Fix `POST /api/v1/statuses` silently ignoring invalid `media_ids` parameter (#31681 by @c960657)\n+- Fix handling of the `BIND` environment variable in the streaming server (#31624 by @ThisIsMissEm)\n - Fix empty `aria-hidden` attribute value in logo resources area (#30570 by @mjankowski)\n - Fix \u201cRedirect URI\u201d field not being marked as required in \u201cNew application\u201d form (#30311 by @ThisIsMissEm)\n - Fix right-to-left text in preview cards (#30930 by @ClearlyClaire)\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.1\n+    image: ghcr.io/mastodon/mastodon:v4.3.0-beta.2\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -17,7 +17,7 @@ def patch\n     end\n \n     def default_prerelease\n-      'beta.1'\n+      'beta.2'\n     end\n \n     def prerelease\n---\n\n\n---\n\nChoice C:\napp/models/account.rb\n@@ -68,7 +68,7 @@ class Account < ApplicationRecord\n   INSTANCE_ACTOR_ID = -99\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n   USERNAME_LENGTH_LIMIT = 30\n---\napp/models/tag.rb\n@@ -37,7 +37,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]\\u0E47-\\u0E4E#{HASHTAG_SEPARATORS}]/\n \n---\nspec/models/account_spec.rb\n@@ -711,6 +711,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/tag_spec.rb\n@@ -95,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: There is an issue with an additional symbol  \u2018\n\nIssue Description:\n### Steps to reproduce the problem\r\nmastodon:v4.3.0-beta.1\r\nThere is an issue with an additional symbol  \u2018\r\n![image](https://github.com/user-attachments/assets/2297308a-e3e5-4899-b3b8-3c905a234a28)\r\n\r\n\n\n---\n\nChoice A:\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\nChoice B:\nGemfile\n@@ -6,7 +6,7 @@ ruby '>= 3.2.0'\n gem 'propshaft'\n gem 'puma', '~> 6.3'\n gem 'rack', '~> 2.2.7'\n-gem 'rails', '~> 7.2.0'\n+gem 'rails', '~> 8.0'\n gem 'thor', '~> 1.2'\n \n gem 'dotenv'\n@@ -73,7 +73,7 @@ gem 'public_suffix', '~> 6.0'\n gem 'pundit', '~> 2.3'\n gem 'rack-attack', '~> 6.6'\n gem 'rack-cors', '~> 2.0', require: 'rack/cors'\n-gem 'rails-i18n', '~> 7.0'\n+gem 'rails-i18n', '~> 8.0'\n gem 'redcarpet', '~> 3.6'\n gem 'redis', '~> 4.5', require: ['redis', 'redis/connection/hiredis']\n gem 'redis-namespace', '~> 1.10'\n---\nGemfile.lock\n@@ -10,46 +10,45 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actioncable (8.0.1)\n+      actionpack (= 8.0.1)\n+      activesupport (= 8.0.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activestorage (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionmailbox (8.0.1)\n+      actionpack (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activestorage (= 8.0.1)\n+      activesupport (= 8.0.1)\n       mail (>= 2.8.0)\n-    actionmailer (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      actionview (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionmailer (8.0.1)\n+      actionpack (= 8.0.1)\n+      actionview (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activesupport (= 8.0.1)\n       mail (>= 2.8.0)\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.2.2.1)\n-      actionview (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionpack (8.0.1)\n+      actionview (= 8.0.1)\n+      activesupport (= 8.0.1)\n       nokogiri (>= 1.8.5)\n-      racc\n-      rack (>= 2.2.4, < 3.2)\n+      rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n       useragent (~> 0.16)\n-    actiontext (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activestorage (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actiontext (8.0.1)\n+      actionpack (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activestorage (= 8.0.1)\n+      activesupport (= 8.0.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    actionview (8.0.1)\n+      activesupport (= 8.0.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -59,22 +58,22 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    activejob (8.0.1)\n+      activesupport (= 8.0.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.2.2.1)\n-      activesupport (= 7.2.2.1)\n-    activerecord (7.2.2.1)\n-      activemodel (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    activemodel (8.0.1)\n+      activesupport (= 8.0.1)\n+    activerecord (8.0.1)\n+      activemodel (= 8.0.1)\n+      activesupport (= 8.0.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    activestorage (8.0.1)\n+      actionpack (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activesupport (= 8.0.1)\n       marcel (~> 1.0)\n-    activesupport (7.2.2.1)\n+    activesupport (8.0.1)\n       base64\n       benchmark (>= 0.3)\n       bigdecimal\n@@ -86,6 +85,7 @@ GEM\n       minitest (>= 5.1)\n       securerandom (>= 0.3)\n       tzinfo (~> 2.0, >= 2.0.5)\n+      uri (>= 0.13.1)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n     aes_key_wrap (1.1.0)\n@@ -613,20 +613,20 @@ GEM\n     rackup (1.0.1)\n       rack (< 3)\n       webrick\n-    rails (7.2.2.1)\n-      actioncable (= 7.2.2.1)\n-      actionmailbox (= 7.2.2.1)\n-      actionmailer (= 7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      actiontext (= 7.2.2.1)\n-      actionview (= 7.2.2.1)\n-      activejob (= 7.2.2.1)\n-      activemodel (= 7.2.2.1)\n-      activerecord (= 7.2.2.1)\n-      activestorage (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+    rails (8.0.1)\n+      actioncable (= 8.0.1)\n+      actionmailbox (= 8.0.1)\n+      actionmailer (= 8.0.1)\n+      actionpack (= 8.0.1)\n+      actiontext (= 8.0.1)\n+      actionview (= 8.0.1)\n+      activejob (= 8.0.1)\n+      activemodel (= 8.0.1)\n+      activerecord (= 8.0.1)\n+      activestorage (= 8.0.1)\n+      activesupport (= 8.0.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.2.2.1)\n+      railties (= 8.0.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -638,12 +638,12 @@ GEM\n     rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n       nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n-    rails-i18n (7.0.10)\n+    rails-i18n (8.0.1)\n       i18n (>= 0.7, < 2)\n-      railties (>= 6.0.0, < 8)\n-    railties (7.2.2.1)\n-      actionpack (= 7.2.2.1)\n-      activesupport (= 7.2.2.1)\n+      railties (>= 8.0.0, < 9)\n+    railties (8.0.1)\n+      actionpack (= 8.0.1)\n+      activesupport (= 8.0.1)\n       irb (~> 1.13)\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -986,9 +986,9 @@ DEPENDENCIES\n   rack-attack (~> 6.6)\n   rack-cors (~> 2.0)\n   rack-test (~> 2.1)\n-  rails (~> 7.2.0)\n+  rails (~> 8.0)\n   rails-controller-testing (~> 1.0)\n-  rails-i18n (~> 7.0)\n+  rails-i18n (~> 8.0)\n   rdf-normalize (~> 0.5)\n   redcarpet (~> 3.6)\n   redis (~> 4.5)\n---\nconfig/application.rb\n@@ -59,7 +59,7 @@\n module Mastodon\n   class Application < Rails::Application\n     # Initialize configuration defaults for originally generated Rails version.\n-    config.load_defaults 7.2\n+    config.load_defaults 8.0\n \n     # Please, add to the `ignore` list any other `lib` subdirectories that do\n     # not contain `.rb` files, or that should not be reloaded or eager loaded.\n---\nconfig/initializers/filter_parameter_logging.rb\n@@ -6,5 +6,5 @@\n # Use this to limit dissemination of sensitive information.\n # See the ActiveSupport::ParameterFilter documentation for supported notations and behaviors.\n Rails.application.config.filter_parameters += [\n-  :passw, :email, :secret, :token, :_key, :crypt, :salt, :certificate, :otp, :ssn\n+  :passw, :email, :secret, :token, :_key, :crypt, :salt, :certificate, :otp, :ssn, :cvv, :cvc\n ]\n---\nlib/active_record/batches.rb\n@@ -13,7 +13,9 @@ def pluck_each(*column_names)\n \n       column_names.unshift(primary_key)\n \n-      relation = relation.reorder(build_batch_orders(order).to_h).limit(batch_limit)\n+      cursor = Array(primary_key)\n+\n+      relation = relation.reorder(build_batch_orders(cursor, order).to_h).limit(batch_limit)\n       relation.skip_query_cache!\n \n       batch_relation = relation\n---\nspec/rails_helper.rb\n@@ -119,6 +119,11 @@ def sign_in(resource, _deprecated = nil, scope: nil)\n   config.include CommandLineHelpers, type: :cli\n   config.include SystemHelpers, type: :system\n \n+  # TODO: Remove when Devise fixes https://github.com/heartcombo/devise/issues/5705\n+  config.before do\n+    Rails.application.reload_routes_unless_loaded\n+  end\n+\n   config.around(:each, use_transactional_tests: false) do |example|\n     self.use_transactional_tests = false\n     example.run\n---\n\n\n---\n\nChoice C:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice D:\ndocker-compose.yml\n@@ -88,7 +88,7 @@ services:\n       - internal_network\n     healthcheck:\n       # prettier-ignore\n-      test: ['CMD-SHELL', \"curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1'\"]\n+      test: ['CMD-SHELL', \"curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1\"]\n     ports:\n       - '127.0.0.1:4000:4000'\n     depends_on:\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Redundant tooltips when hovering over navigation links\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Hover over the links along the right side for \u201cExplore\u201d, \u201cLive feeds\u201d, etc. Or hover over the links in the \u201cGetting started\u201d pane in the advanced web interface\r\n\n\n### Expected behaviour\n\nThe cursor changes to the usual \u201cpointer\u201d, otherwise nothing should happen\n\n### Actual behaviour\n\nA tooltip appears with text to tell you what the text says\n\n### Detailed description\n\nI don\u2019t need it explained to me that \u201cExplore\u201d says \u201cExplore\u201d, \u201cLive feeds\u201d says \u201cLive feeds\u201d, and so on.\r\n\r\n\r\nhttps://github.com/user-attachments/assets/da28ec31-5c54-4dd3-8e32-fba9724401f7\r\n\r\n\n\n### Mastodon instance\n\nmastodon.social and mastodon.online\n\n### Mastodon version\n\nv4.3.0-nightly.2024-08-23\n\n### Browser name and version\n\nSafari 17.6\n\n### Operating system\n\nmacOS 14.6.1\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/controllers/auth/sessions_controller.rb\n@@ -187,4 +187,15 @@ def on_authentication_failure(user, security_measure, failure_reason)\n   def second_factor_attempts_key(user)\n     \"2fa_auth_attempts:#{user.id}:#{Time.now.utc.hour}\"\n   end\n+\n+  def respond_to_on_destroy\n+    respond_to do |format|\n+      format.json do\n+        render json: {\n+          redirect_to: after_sign_out_path_for(resource_name),\n+        }, status: 200\n+      end\n+      format.all { super }\n+    end\n+  end\n end\n---\napp/javascript/mastodon/features/ui/components/confirmation_modals/log_out.tsx\n@@ -25,7 +25,7 @@ export const ConfirmLogOutModal: React.FC<BaseConfirmationModalProps> = ({\n   const intl = useIntl();\n \n   const onConfirm = useCallback(() => {\n-    logOut();\n+    void logOut();\n   }, []);\n \n   return (\n---\napp/javascript/mastodon/utils/log_out.ts\n@@ -1,36 +1,20 @@\n-export const logOut = () => {\n-  const form = document.createElement('form');\n+import api from 'mastodon/api';\n \n-  const methodInput = document.createElement('input');\n-  methodInput.setAttribute('name', '_method');\n-  methodInput.setAttribute('value', 'delete');\n-  methodInput.setAttribute('type', 'hidden');\n-  form.appendChild(methodInput);\n+export async function logOut() {\n+  try {\n+    const response = await api(false).delete<{ redirect_to?: string }>(\n+      '/auth/sign_out',\n+      { headers: { Accept: 'application/json' }, withCredentials: true },\n+    );\n \n-  const csrfToken = document.querySelector<HTMLMetaElement>(\n-    'meta[name=csrf-token]',\n-  );\n-\n-  const csrfParam = document.querySelector<HTMLMetaElement>(\n-    'meta[name=csrf-param]',\n-  );\n-\n-  if (csrfParam && csrfToken) {\n-    const csrfInput = document.createElement('input');\n-    csrfInput.setAttribute('name', csrfParam.content);\n-    csrfInput.setAttribute('value', csrfToken.content);\n-    csrfInput.setAttribute('type', 'hidden');\n-    form.appendChild(csrfInput);\n+    if (response.status === 200 && response.data.redirect_to)\n+      window.location.href = response.data.redirect_to;\n+    else\n+      console.error(\n+        'Failed to log out, got an unexpected non-redirect response from the server',\n+        response,\n+      );\n+  } catch (error) {\n+    console.error('Failed to log out, response was an error', error);\n   }\n-\n-  const submitButton = document.createElement('input');\n-  submitButton.setAttribute('type', 'submit');\n-  form.appendChild(submitButton);\n-\n-  form.method = 'post';\n-  form.action = '/auth/sign_out';\n-  form.style.display = 'none';\n-\n-  document.body.appendChild(form);\n-  submitButton.click();\n-};\n+}\n---\nspec/requests/log_out_spec.rb\n@@ -0,0 +1,30 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+describe 'Log Out' do\n+  include RoutingHelper\n+\n+  describe 'DELETE /auth/sign_out' do\n+    let(:user) { Fabricate(:user) }\n+\n+    before do\n+      sign_in user\n+    end\n+\n+    it 'Logs out the user and redirect' do\n+      delete '/auth/sign_out'\n+\n+      expect(response).to redirect_to('/auth/sign_in')\n+    end\n+\n+    it 'Logs out the user and return a page to redirect to with a JSON request' do\n+      delete '/auth/sign_out', headers: { 'HTTP_ACCEPT' => 'application/json' }\n+\n+      expect(response).to have_http_status(200)\n+      expect(response.media_type).to eq 'application/json'\n+\n+      expect(body_as_json[:redirect_to]).to eq '/auth/sign_in'\n+    end\n+  end\n+end\n---\nspec/system/log_out_spec.rb\n@@ -0,0 +1,43 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+describe 'Log out' do\n+  include ProfileStories\n+\n+  before do\n+    as_a_logged_in_user\n+  end\n+\n+  describe 'Logging out from the preferences' do\n+    it 'logs the user out' do\n+      visit settings_path\n+\n+      within '.sidebar' do\n+        click_on 'Logout'\n+      end\n+\n+      expect(page).to have_title(I18n.t('auth.login'))\n+      expect(page).to have_current_path('/auth/sign_in')\n+    end\n+  end\n+\n+  describe 'Logging out from the JS app', :js, :streaming do\n+    it 'logs the user out' do\n+      visit root_path\n+\n+      within '.navigation-bar' do\n+        click_on 'Menu'\n+      end\n+\n+      within '.dropdown-menu' do\n+        click_on 'Logout'\n+      end\n+\n+      click_on 'Log out'\n+\n+      expect(page).to have_title(I18n.t('auth.login'))\n+      expect(page).to have_current_path('/auth/sign_in')\n+    end\n+  end\n+end\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/ui/components/column_link.jsx\n@@ -15,15 +15,15 @@ const ColumnLink = ({ icon, activeIcon, iconComponent, activeIconComponent, text\n \n   if (href) {\n     return (\n-      <a href={href} className={className} data-method={method} title={text} {...other}>\n+      <a href={href} className={className} data-method={method} {...other}>\n         {active ? activeIconElement : iconElement}\n         <span>{text}</span>\n         {badgeElement}\n       </a>\n     );\n   } else {\n     return (\n-      <NavLink to={to} className={className} title={text} exact {...other}>\n+      <NavLink to={to} className={className} exact {...other}>\n         {active ? activeIconElement : iconElement}\n         <span>{text}</span>\n         {badgeElement}\n---\n\n\n---\n\nChoice C:\napp/presenters/language_presenter.rb\n@@ -1,7 +1,7 @@\n # frozen_string_literal: true\n \n class LanguagePresenter < ActiveModelSerializers::Model\n-  attributes :code, :name, :native_name\n+  attributes :code, :name\n \n   def initialize(code)\n     super()\n@@ -13,8 +13,4 @@ def initialize(code)\n   def name\n     @item[0]\n   end\n-\n-  def native_name\n-    @item[1]\n-  end\n end\n---\nspec/requests/api/v1/instances/languages_spec.rb\n@@ -9,10 +9,21 @@\n     end\n \n     it 'returns http success and includes supported languages' do\n-      expect(response).to have_http_status(200)\n+      expect(response)\n+        .to have_http_status(200)\n       expect(response.content_type)\n         .to start_with('application/json')\n-      expect(response.parsed_body.pluck(:code)).to match_array LanguagesHelper::SUPPORTED_LOCALES.keys.map(&:to_s)\n+      expect(response.parsed_body)\n+        .to match_array(supported_locale_expectations)\n+    end\n+\n+    def supported_locale_expectations\n+      LanguagesHelper::SUPPORTED_LOCALES.map do |key, values|\n+        include(\n+          code: key.to_s,\n+          name: values.first\n+        )\n+      end\n     end\n   end\n end\n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -2,6 +2,29 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.7] - 2025-04-02\n+\n+### Add\n+\n+- Add delay to profile updates to debounce them (#34137 by @ClearlyClaire)\n+- Add support for paginating partial collections in `SynchronizeFollowersService` (#34272 and #34277 by @ClearlyClaire)\n+\n+### Changed\n+\n+- Change account suspensions to be federated to recently-followed accounts as well (#34294 by @ClearlyClaire)\n+- Change `AccountReachFinder` to consider statuses based on suspension date (#32805 and #34291 by @ClearlyClaire and @mjankowski)\n+- Change user archive signed URL TTL from 10 seconds to 1 hour (#34254 by @ClearlyClaire)\n+\n+### Fixed\n+\n+- Fix static version of animated PNG emojis not being properly extracted (#34337 by @ClearlyClaire)\n+- Fix filters not applying in detailed view, favourites and bookmarks (#34259 and #34260 by @ClearlyClaire)\n+- Fix handling of malformed/unusual HTML (#34201 by @ClearlyClaire)\n+- Fix `CacheBuster` being queued for missing media attachments (#34253 by @ClearlyClaire)\n+- Fix incorrect URL being used when cache busting (#34189 by @ClearlyClaire)\n+- Fix streaming server refusing unix socket path in `DATABASE_URL` (#34091 by @ClearlyClaire)\n+- Fix \u201cx\u201d hotkey not working on boosted filtered posts (#33758 by @ClearlyClaire)\n+\n ## [4.3.6] - 2025-03-13\n \n ### Security\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.6\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -102,7 +102,7 @@ services:\n   sidekiq:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      6\n+      7\n     end\n \n     def default_prerelease\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Appearance of blocked domains list in Federation page is broken\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\n1. Open Moderation > Federation page\r\n2. The CSS style of the list seems broken\r\n\r\n### Expected behaviour\r\n\r\nDomain list presented as cards\r\n\r\n### Actual behaviour\r\n\r\nDomain list presented as underlined links and misaligned\r\n\r\n### Detailed description\r\n\r\nThis is how the domains (blocked/limited or not) are presented now:\r\n\r\n![image](https://github.com/user-attachments/assets/90a29e40-526a-42dc-bec2-099fae33d822)\r\n\r\n### Mastodon instance\r\n\r\nbolha.one, ursal.zone\r\n\r\n### Mastodon version\r\n\r\nv4.3.0-alpha.5-2da687a\r\n\r\n### Browser name and version\r\n\r\nLibreWolf 129, Chromium v127.0.6533.120\r\n\r\n### Operating system\r\n\r\nDebian 12\r\n\r\n### Technical details\r\n\r\n_No response_\n\n---\n\nChoice A:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\nChoice B:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/widgets.scss\n@@ -1,3 +1,85 @@\n+.directory {\n+  &__tag {\n+    box-sizing: border-box;\n+    margin-bottom: 10px;\n+\n+    & > a,\n+    & > div {\n+      display: flex;\n+      align-items: center;\n+      justify-content: space-between;\n+      border: 1px solid var(--background-border-color);\n+      border-radius: 4px;\n+      padding: 15px;\n+      text-decoration: none;\n+      color: inherit;\n+      box-shadow: 0 0 15px rgba($base-shadow-color, 0.2);\n+    }\n+\n+    & > a {\n+      &:hover,\n+      &:active,\n+      &:focus {\n+        background: $ui-base-color;\n+      }\n+    }\n+\n+    &.active > a {\n+      background: $ui-highlight-color;\n+      cursor: default;\n+    }\n+\n+    &.disabled > div {\n+      opacity: 0.5;\n+      cursor: default;\n+    }\n+\n+    h4 {\n+      flex: 1 1 auto;\n+      font-size: 18px;\n+      font-weight: 700;\n+      color: $primary-text-color;\n+      white-space: nowrap;\n+      overflow: hidden;\n+      text-overflow: ellipsis;\n+\n+      .fa {\n+        color: $darker-text-color;\n+      }\n+\n+      small {\n+        display: block;\n+        font-weight: 400;\n+        font-size: 15px;\n+        margin-top: 8px;\n+        color: $darker-text-color;\n+      }\n+    }\n+\n+    &.active h4 {\n+      &,\n+      .fa,\n+      small,\n+      .trends__item__current {\n+        color: $primary-text-color;\n+      }\n+    }\n+\n+    .avatar-stack {\n+      flex: 0 0 auto;\n+      width: (36px + 4px) * 3;\n+    }\n+\n+    &.active .avatar-stack .account__avatar {\n+      border-color: $ui-highlight-color;\n+    }\n+\n+    .trends__item__current {\n+      padding-inline-end: 0;\n+    }\n+  }\n+}\n+\n .accounts-table {\n   width: 100%;\n \n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.jsx\n@@ -129,8 +129,13 @@ export const InlineFollowSuggestions = ({ hidden }) => {\n       return;\n     }\n \n-    setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n-    setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n+      setCanScrollLeft((bodyRef.current.clientWidth - bodyRef.current.scrollLeft) < bodyRef.current.scrollWidth);\n+      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n+    } else {\n+      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n+      setCanScrollRight((bodyRef.current.scrollLeft + bodyRef.current.clientWidth) < bodyRef.current.scrollWidth);\n+    }\n   }, [setCanScrollRight, setCanScrollLeft, bodyRef, suggestions]);\n \n   const handleLeftNav = useCallback(() => {\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Accepted a filtered notification and got a weird empty box\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\nToday I got a filtered notification from a \"limited\" user. I don't have any notification filters on except for the \"limited by server\" filter.\r\n\r\nI went to look at the notification, and I saw that instead of [Trash] [Check] it's now [Trash] [\u22ef] and \u22ef is a menu. Oh! I like that! I like that a lot! I clicked the menu and clicked \"Accept\". The notification dismissed.\r\n\r\nAnd in its place I got this:\r\n\r\n![image](https://github.com/user-attachments/assets/29ed8105-a10a-4836-9835-dd7b89d12c17)\r\n\r\nWhat?\r\n\r\nExperimentally I clicked \"Edit\".\r\n\r\n![image](https://github.com/user-attachments/assets/e9f72b9a-c0c5-4efd-937f-856467f97a06)\r\n\r\nIt changed to \"Done\"?\r\n\r\nWhat?\r\n\r\nI clicked \"Done\" and it changed back to \"Edit\".\r\n\r\nThe box on the left checks and unchecks, but I don't know what it does.\r\n\r\n### Expected behaviour\r\n\r\nNothing\r\n\r\n### Actual behaviour\r\n\r\nThis\r\n\r\n### Detailed description\r\n\r\n_No response_\r\n\r\n### Mastodon instance\r\n\r\nmastodon.social\r\n\r\n### Mastodon version\r\n\r\nv4.3.0-nightly.2024-08-21\r\n\r\n### Browser name and version\r\n\r\nchrome\r\n\r\n### Operating system\r\n\r\nwindows 10\r\n\r\n### Technical details\r\n\r\nI have \"Stylus\" hiding a couple of CSS elements but they aren't related to this pane, and turning off Stylus does not change this element.\n\n---\n\nChoice A:\napp/javascript/mastodon/features/notifications/requests.jsx\n@@ -217,7 +217,9 @@ export const NotificationRequests = ({ multiColumn }) => {\n         multiColumn={multiColumn}\n         showBackButton\n         appendContent={\n-          <SelectRow selectionMode={selectionMode} setSelectionMode={setSelectionMode} selectAllChecked={selectAllChecked} toggleSelectAll={toggleSelectAll} selectedItems={checkedRequestIds} />}\n+          notificationRequests.size > 0 && (\n+            <SelectRow selectionMode={selectionMode} setSelectionMode={setSelectionMode} selectAllChecked={selectAllChecked} toggleSelectAll={toggleSelectAll} selectedItems={checkedRequestIds} />\n+          )}\n       >\n         <ColumnSettings />\n       </ColumnHeader>\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/ui/components/column_link.jsx\n@@ -15,15 +15,15 @@ const ColumnLink = ({ icon, activeIcon, iconComponent, activeIconComponent, text\n \n   if (href) {\n     return (\n-      <a href={href} className={className} data-method={method} title={text} {...other}>\n+      <a href={href} className={className} data-method={method} {...other}>\n         {active ? activeIconElement : iconElement}\n         <span>{text}</span>\n         {badgeElement}\n       </a>\n     );\n   } else {\n     return (\n-      <NavLink to={to} className={className} title={text} exact {...other}>\n+      <NavLink to={to} className={className} exact {...other}>\n         {active ? activeIconElement : iconElement}\n         <span>{text}</span>\n         {badgeElement}\n---\n\n\n---\n\nChoice C:\nconfig/initializers/cors.rb\n@@ -22,6 +22,7 @@\n                expose: %w(Link X-RateLimit-Reset X-RateLimit-Limit X-RateLimit-Remaining X-Request-Id),\n                methods: %i(post put delete get patch options)\n       resource '/oauth/token', methods: [:post]\n+      resource '/oauth/revoke', methods: [:post]\n     end\n   end\n end\n---\n\n\n---\n\nChoice D:\napp/models/follow_recommendation.rb\n@@ -18,5 +18,6 @@ class FollowRecommendation < ApplicationRecord\n   belongs_to :account_summary, foreign_key: :account_id, inverse_of: false\n   belongs_to :account\n \n-  scope :localized, ->(locale) { joins(:account_summary).merge(AccountSummary.localized(locale)) }\n+  scope :unsupressed, -> { where.not(FollowRecommendationSuppression.where(FollowRecommendationSuppression.arel_table[:account_id].eq(arel_table[:account_id])).select(1).arel.exists) }\n+  scope :localized, ->(locale) { unsupressed.joins(:account_summary).merge(AccountSummary.localized(locale)) }\n end\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: No line below follow notifications?\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\n- Get followed\r\n- Enter \"all\" tab\r\n\r\n![image](https://github.com/user-attachments/assets/d99d0611-38a2-47e9-89e8-e0cab83127a0)\r\n\r\nEvery notification type has a line above it and below it\u2026 *except* a follow notification.\r\n\r\n### Expected behaviour\r\n\r\nLine should appear between follow notification and mention\r\n\r\n### Actual behaviour\r\n\r\nLine visible above follow notification but not below\r\n\r\n### Detailed description\r\n\r\nIt just looks weird is all. I don't think I've noticed this before so maybe it's new.\r\n\r\nI was messing with my notification filters right before I saw this for the first time, so if this isn't usual, maybe something I did triggered it.\r\n\r\nIf you are intentionally doing a thing where you draw no lines between follow notifications when two follow notifications are in a row, that sounds fine to me, but there should be lines between follow notifications and other notification types or it looks inconsistent.\r\n\r\nSaw on v4.3.0-nightly.2024-08-12, mastodon.social, BOTH advanced and non-advanced mode, BOTH Chrome and Firefox, uBlock Origin is ON, Stylus is OFF.\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -2249,6 +2249,10 @@ a.account__display-name {\n   }\n }\n \n+.notification-follow {\n+  border-bottom: 1px solid var(--background-border-color);\n+}\n+\n .notification-group--link {\n   color: $secondary-text-color;\n   text-decoration: none;\n---\napp/javascript/styles/mastodon/admin.scss\n@@ -872,6 +872,7 @@ a.name-tag,\n \n     .account {\n       padding: 0;\n+      border: none;\n \n       &__avatar-wrapper {\n         margin-inline-start: 0;\n---\napp/javascript/styles/mastodon/components.scss\n@@ -1808,6 +1808,7 @@ body > [data-popper-placement] {\n \n .account {\n   padding: 16px;\n+  border-bottom: 1px solid var(--background-border-color);\n \n   .account__display-name {\n     flex: 1 1 auto;\n---\n\n\n---\n\nChoice B:\napp/controllers/api/v1/notifications/requests_controller.rb\n@@ -52,7 +52,7 @@ def dismiss_bulk\n   private\n \n   def load_requests\n-    requests = NotificationRequest.where(account: current_account).includes(:last_status, from_account: [:account_stat, :user]).to_a_paginated_by_id(\n+    requests = NotificationRequest.where(account: current_account).without_suspended.includes(:last_status, from_account: [:account_stat, :user]).to_a_paginated_by_id(\n       limit_param(DEFAULT_ACCOUNTS_LIMIT),\n       params_slice(:max_id, :since_id, :min_id)\n     )\n---\napp/models/notification_policy.rb\n@@ -62,6 +62,6 @@ def filter_private_mentions=(value)\n   private\n \n   def pending_notification_requests\n-    @pending_notification_requests ||= notification_requests.limit(MAX_MEANINGFUL_COUNT).pick(Arel.sql('count(*), coalesce(sum(notifications_count), 0)::bigint'))\n+    @pending_notification_requests ||= notification_requests.without_suspended.limit(MAX_MEANINGFUL_COUNT).pick(Arel.sql('count(*), coalesce(sum(notifications_count), 0)::bigint'))\n   end\n end\n---\napp/models/notification_request.rb\n@@ -26,6 +26,8 @@ class NotificationRequest < ApplicationRecord\n \n   before_save :prepare_notifications_count\n \n+  scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+\n   def self.preload_cache_collection(requests)\n     cached_statuses_by_id = yield(requests.filter_map(&:last_status)).index_by(&:id) # Call cache_collection in block\n \n---\nspec/models/notification_policy_spec.rb\n@@ -7,19 +7,25 @@\n     subject { Fabricate(:notification_policy) }\n \n     let(:sender) { Fabricate(:account) }\n+    let(:suspended_sender) { Fabricate(:account) }\n \n     before do\n       Fabricate.times(2, :notification, account: subject.account, activity: Fabricate(:status, account: sender), filtered: true, type: :mention)\n       Fabricate(:notification_request, account: subject.account, from_account: sender)\n-      subject.summarize!\n-    end\n \n-    it 'sets pending_requests_count' do\n-      expect(subject.pending_requests_count).to eq 1\n+      Fabricate(:notification, account: subject.account, activity: Fabricate(:status, account: suspended_sender), filtered: true, type: :mention)\n+      Fabricate(:notification_request, account: subject.account, from_account: suspended_sender)\n+\n+      suspended_sender.suspend!\n+\n+      subject.summarize!\n     end\n \n-    it 'sets pending_notifications_count' do\n-      expect(subject.pending_notifications_count).to eq 2\n+    it 'sets pending_requests_count and pending_notifications_count' do\n+      expect(subject).to have_attributes(\n+        pending_requests_count: 1,\n+        pending_notifications_count: 2\n+      )\n     end\n   end\n end\n---\n\n\n---\n\nChoice C:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/components.scss\n@@ -6437,7 +6437,7 @@ a.status-card {\n   }\n \n   .dialog-option .poll__input {\n-    border-color: $inverted-text-color;\n+    border-color: $darker-text-color;\n     color: $ui-secondary-color;\n     display: inline-flex;\n     align-items: center;\n@@ -6451,13 +6451,13 @@ a.status-card {\n     &:active,\n     &:focus,\n     &:hover {\n-      border-color: lighten($inverted-text-color, 15%);\n+      border-color: $valid-value-color;\n       border-width: 4px;\n     }\n \n     &.active {\n-      border-color: $inverted-text-color;\n-      background: $inverted-text-color;\n+      border-color: $valid-value-color;\n+      background: $valid-value-color;\n     }\n   }\n \n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix web UI crash when a encoutering an orphaned notification group\n\nIssue Description:\nFixes #31392\r\n\r\nNote that this is a quick and pretty dirty fix. The underlying issue is that notifications can sometimes be orphaned, that is, their underlying activity has been deleted, which results in them having a `null` activity or activity ID.\r\n\r\nA correct client-side fix would be to update the API and model types accordingly. A correct server-side fix would be to ensure that can never happen in the first place.\n\n---\n\nChoice A:\napp/validators/poll_expiration_validator.rb\n@@ -5,9 +5,12 @@ class PollExpirationValidator < ActiveModel::Validator\n   MIN_EXPIRATION = 5.minutes.freeze\n \n   def validate(poll)\n+    # We have a `presence: true` check for this attribute already\n+    return if poll.expires_at.nil?\n+\n     current_time = Time.now.utc\n \n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice B:\napp/javascript/styles/mastodon/components.scss\n@@ -7580,7 +7580,7 @@ a.status-card {\n   }\n }\n \n-.radio-button.checked::before {\n+.radio-button__input.checked::before {\n   position: absolute;\n   left: 2px;\n   top: 2px;\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/components.scss\n@@ -2249,6 +2249,10 @@ a.account__display-name {\n   }\n }\n \n+.notification-follow {\n+  border-bottom: 1px solid var(--background-border-color);\n+}\n+\n .notification-group--link {\n   color: $secondary-text-color;\n   text-decoration: none;\n---\napp/javascript/styles/mastodon/admin.scss\n@@ -872,6 +872,7 @@ a.name-tag,\n \n     .account {\n       padding: 0;\n+      border: none;\n \n       &__avatar-wrapper {\n         margin-inline-start: 0;\n---\napp/javascript/styles/mastodon/components.scss\n@@ -1808,6 +1808,7 @@ body > [data-popper-placement] {\n \n .account {\n   padding: 16px;\n+  border-bottom: 1px solid var(--background-border-color);\n \n   .account__display-name {\n     flex: 1 1 auto;\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Authorize Interaction padding bug on mobile\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Open a browser on a iOS device\r\n2. Navigate to a mastodon server\r\n3. Click on the \"Follow\" button or favourite/boost button while not logged in\r\n4. See the modal with no padding\r\n\n\n### Expected behaviour\n\nThere should be padding\n\n### Actual behaviour\n\nThere was no padding\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\nmastodon.social\n\n### Mastodon version\n\nv4.3.0-nightly.2024-08-12\n\n### Browser name and version\n\nChrome 127.0.6533.100\n\n### Operating system\n\nmacOS 14.4.1\n\n### Technical details\n\n![IMG_6349](https://github.com/user-attachments/assets/ae0107c2-8468-4d22-997f-cd899bbdffc7)\r\n\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -2836,7 +2836,7 @@ $ui-header-logo-wordmark-width: 99px;\n   overflow: hidden;\n }\n \n-@media screen and (width >= 631px) {\n+@media screen and (width > $mobile-breakpoint) {\n   .columns-area {\n     padding: 0;\n   }\n@@ -5731,7 +5731,7 @@ a.status-card {\n   user-select: text;\n   display: flex;\n \n-  @media screen and (width <= 630px) {\n+  @media screen and (width <= $mobile-breakpoint) {\n     margin-top: auto;\n   }\n }\n@@ -6090,7 +6090,7 @@ a.status-card {\n     border-radius: 0 0 16px 16px;\n     border-top: 0;\n \n-    @media screen and (max-width: $no-gap-breakpoint) {\n+    @media screen and (max-width: $mobile-breakpoint) {\n       border-radius: 0;\n       border-bottom: 0;\n       padding-bottom: 32px;\n@@ -9092,8 +9092,9 @@ noscript {\n   backdrop-filter: var(--background-filter);\n   border: 1px solid var(--modal-border-color);\n   padding: 24px;\n+  box-sizing: border-box;\n \n-  @media screen and (max-width: $no-gap-breakpoint) {\n+  @media screen and (max-width: $mobile-breakpoint) {\n     border-radius: 16px 16px 0 0;\n     border-bottom: 0;\n     padding-bottom: 32px;\n---\napp/javascript/styles/mastodon/variables.scss\n@@ -88,6 +88,7 @@ $media-modal-media-max-width: 100%;\n $media-modal-media-max-height: 80%;\n \n $no-gap-breakpoint: 1175px;\n+$mobile-breakpoint: 630px;\n \n $font-sans-serif: 'mastodon-font-sans-serif' !default;\n $font-display: 'mastodon-font-display' !default;\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -13,6 +13,7 @@ import {\n import type { IconProp } from 'mastodon/components/icon';\n import { Icon } from 'mastodon/components/icon';\n import Status from 'mastodon/containers/status_container';\n+import { getStatusHidden } from 'mastodon/selectors/filters';\n import { useAppSelector, useAppDispatch } from 'mastodon/store';\n \n import { DisplayedName } from './displayed_name';\n@@ -48,6 +49,12 @@ export const NotificationWithStatus: React.FC<{\n     (state) => state.statuses.getIn([statusId, 'visibility']) === 'direct',\n   );\n \n+  const isFiltered = useAppSelector(\n+    (state) =>\n+      statusId &&\n+      getStatusHidden(state, { id: statusId, contextType: 'notifications' }),\n+  );\n+\n   const handlers = useMemo(\n     () => ({\n       open: () => {\n@@ -73,7 +80,7 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n-  if (!statusId) return null;\n+  if (!statusId || isFiltered) return null;\n \n   return (\n     <HotKeys handlers={handlers}>\n---\napp/javascript/mastodon/selectors/filters.ts\n@@ -0,0 +1,50 @@\n+import { createSelector } from '@reduxjs/toolkit';\n+\n+import type { RootState } from 'mastodon/store';\n+import { toServerSideType } from 'mastodon/utils/filters';\n+\n+// TODO: move to `app/javascript/mastodon/models` and use more globally\n+type Filter = Immutable.Map<string, unknown>;\n+\n+// TODO: move to `app/javascript/mastodon/models` and use more globally\n+type FilterResult = Immutable.Map<string, unknown>;\n+\n+export const getFilters = createSelector(\n+  [\n+    (state: RootState) => state.filters as Immutable.Map<string, Filter>,\n+    (_, { contextType }: { contextType: string }) => contextType,\n+  ],\n+  (filters, contextType) => {\n+    if (!contextType) {\n+      return null;\n+    }\n+\n+    const now = new Date();\n+    const serverSideType = toServerSideType(contextType);\n+\n+    return filters.filter((filter) => {\n+      const context = filter.get('context') as Immutable.List<string>;\n+      const expiration = filter.get('expires_at') as Date | null;\n+      return (\n+        context.includes(serverSideType) &&\n+        (expiration === null || expiration > now)\n+      );\n+    });\n+  },\n+);\n+\n+export const getStatusHidden = (\n+  state: RootState,\n+  { id, contextType }: { id: string; contextType: string },\n+) => {\n+  const filters = getFilters(state, { contextType });\n+  if (filters === null) return false;\n+\n+  const filtered = state.statuses.getIn([id, 'filtered']) as\n+    | Immutable.List<FilterResult>\n+    | undefined;\n+  return filtered?.some(\n+    (result) =>\n+      filters.getIn([result.get('filter'), 'filter_action']) === 'hide',\n+  );\n+};\n---\napp/javascript/mastodon/selectors/index.js\n@@ -1,22 +1,11 @@\n import { createSelector } from '@reduxjs/toolkit';\n import { List as ImmutableList, Map as ImmutableMap } from 'immutable';\n \n-import { toServerSideType } from 'mastodon/utils/filters';\n-\n import { me } from '../initial_state';\n \n-export { makeGetAccount } from \"./accounts\";\n-\n-const getFilters = createSelector([state => state.get('filters'), (_, { contextType }) => contextType], (filters, contextType) => {\n-  if (!contextType) {\n-    return null;\n-  }\n+import { getFilters } from './filters';\n \n-  const now = new Date();\n-  const serverSideType = toServerSideType(contextType);\n-\n-  return filters.filter(filter => filter.get('context').includes(serverSideType) && (filter.get('expires_at') === null || filter.get('expires_at') > now));\n-});\n+export { makeGetAccount } from \"./accounts\";\n \n export const makeGetStatus = () => {\n   return createSelector(\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/components/status_action_bar.jsx\n@@ -375,20 +375,29 @@ class StatusActionBar extends ImmutablePureComponent {\n \n     return (\n       <div className='status__action-bar'>\n-        <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n-        <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n-        <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n-        <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n-\n-        <DropdownMenuContainer\n-          scrollKey={scrollKey}\n-          status={status}\n-          items={menu}\n-          icon='ellipsis-h'\n-          iconComponent={MoreHorizIcon}\n-          direction='right'\n-          title={intl.formatMessage(messages.more)}\n-        />\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <DropdownMenuContainer\n+            scrollKey={scrollKey}\n+            status={status}\n+            items={menu}\n+            icon='ellipsis-h'\n+            iconComponent={MoreHorizIcon}\n+            direction='right'\n+            title={intl.formatMessage(messages.more)}\n+          />\n+        </div>\n       </div>\n     );\n   }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -299,6 +299,10 @@\n     }\n   }\n \n+  &--with-counter {\n+    padding-inline-end: 4px;\n+  }\n+\n   &__counter {\n     display: block;\n     width: auto;\n@@ -1465,6 +1469,15 @@ body > [data-popper-placement] {\n     }\n   }\n \n+  &__action-bar__button-wrapper {\n+    flex-basis: 0;\n+    flex-grow: 1;\n+\n+    &:last-child {\n+      flex-grow: 0;\n+    }\n+  }\n+\n   &--first-in-thread {\n     border-top: 1px solid var(--background-border-color);\n   }\n---\n\n\n---\n\nChoice D:\nlib/mastodon/cli/feeds.rb\n@@ -5,6 +5,7 @@\n module Mastodon::CLI\n   class Feeds < Base\n     include Redisable\n+    include DatabaseHelper\n \n     option :all, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n@@ -44,6 +45,38 @@ def clear\n       say('OK', :green)\n     end\n \n+    desc 'vacuum', 'Remove home feeds of inactive users from Redis'\n+    long_desc <<-LONG_DESC\n+      Running this task should not be needed in most cases, as Mastodon will\n+      automatically clean up feeds from inactive accounts every day.\n+\n+      However, this task is more aggressive in order to clean up feeds that\n+      may have been missed because of bugs or database mishaps.\n+    LONG_DESC\n+    def vacuum\n+      with_read_replica do\n+        say('Deleting orphaned home feeds\u2026')\n+        redis.scan_each(match: 'feed:home:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = User.confirmed.signed_in_recently.where(account_id: ids).pluck(:account_id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+\n+        say('Deleting orphaned list feeds\u2026')\n+        redis.scan_each(match: 'feed:list:*').each_slice(1000) do |keys|\n+          ids = keys.map { |key| key.split(':')[2] }.compact_blank\n+\n+          known_ids = List.where(account_id: User.confirmed.signed_in_recently.select(:account_id)).where(id: ids).pluck(:id)\n+\n+          keys_to_delete = keys.filter { |key| known_ids.exclude?(key.split(':')[2]&.to_i) }\n+          redis.del(keys_to_delete)\n+        end\n+      end\n+    end\n+\n     private\n \n     def active_user_accounts\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: IPv6 only\n\nIssue Description:\n### Steps to reproduce the problem\n\nThe **IPv6 only** installation of Mastodon (Docker) seems to have several problems.\n\n### Expected behaviour\n\nrun a single stack IPv6 server\n\n### Actual behaviour\n\nhave to run a dual stack server or an IPv4 server\n\n### Detailed description\n\nIt would be nice to test all new versions of Mastodon on an **IPv6 only** environment.\n\n### Mastodon instance\n\n_No response_\n\n### Mastodon version\n\nv4.x\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/models/account.rb\n@@ -68,7 +68,7 @@ class Account < ApplicationRecord\n   INSTANCE_ACTOR_ID = -99\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n   USERNAME_LENGTH_LIMIT = 30\n---\napp/models/tag.rb\n@@ -37,7 +37,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]\\u0E47-\\u0E4E#{HASHTAG_SEPARATORS}]/\n \n---\nspec/models/account_spec.rb\n@@ -711,6 +711,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/tag_spec.rb\n@@ -95,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,29 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.7] - 2025-04-02\n+\n+### Add\n+\n+- Add delay to profile updates to debounce them (#34137 by @ClearlyClaire)\n+- Add support for paginating partial collections in `SynchronizeFollowersService` (#34272 and #34277 by @ClearlyClaire)\n+\n+### Changed\n+\n+- Change account suspensions to be federated to recently-followed accounts as well (#34294 by @ClearlyClaire)\n+- Change `AccountReachFinder` to consider statuses based on suspension date (#32805 and #34291 by @ClearlyClaire and @mjankowski)\n+- Change user archive signed URL TTL from 10 seconds to 1 hour (#34254 by @ClearlyClaire)\n+\n+### Fixed\n+\n+- Fix static version of animated PNG emojis not being properly extracted (#34337 by @ClearlyClaire)\n+- Fix filters not applying in detailed view, favourites and bookmarks (#34259 and #34260 by @ClearlyClaire)\n+- Fix handling of malformed/unusual HTML (#34201 by @ClearlyClaire)\n+- Fix `CacheBuster` being queued for missing media attachments (#34253 by @ClearlyClaire)\n+- Fix incorrect URL being used when cache busting (#34189 by @ClearlyClaire)\n+- Fix streaming server refusing unix socket path in `DATABASE_URL` (#34091 by @ClearlyClaire)\n+- Fix \u201cx\u201d hotkey not working on boosted filtered posts (#33758 by @ClearlyClaire)\n+\n ## [4.3.6] - 2025-03-13\n \n ### Security\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.6\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -102,7 +102,7 @@ services:\n   sidekiq:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      6\n+      7\n     end\n \n     def default_prerelease\n---\n\n\n---\n\nChoice C:\nconfig/initializers/cors.rb\n@@ -22,6 +22,7 @@\n                expose: %w(Link X-RateLimit-Reset X-RateLimit-Limit X-RateLimit-Remaining X-Request-Id),\n                methods: %i(post put delete get patch options)\n       resource '/oauth/token', methods: [:post]\n+      resource '/oauth/revoke', methods: [:post]\n     end\n   end\n end\n---\n\n\n---\n\nChoice D:\nstreaming/index.js\n@@ -1351,15 +1351,23 @@ const startServer = async () => {\n  * @param {function(string): void} [onSuccess]\n  */\n const attachServerWithConfig = (server, onSuccess) => {\n-  if (process.env.SOCKET || process.env.PORT && isNaN(+process.env.PORT)) {\n-    server.listen(process.env.SOCKET || process.env.PORT, () => {\n+  if (process.env.SOCKET) {\n+    server.listen(process.env.SOCKET, () => {\n       if (onSuccess) {\n         fs.chmodSync(server.address(), 0o666);\n         onSuccess(server.address());\n       }\n     });\n   } else {\n-    server.listen(+(process.env.PORT || 4000), process.env.BIND || '127.0.0.1', () => {\n+    const port = +(process.env.PORT || 4000);\n+    let bind = process.env.BIND ?? '127.0.0.1';\n+    // Web uses the URI syntax for BIND, which means IPv6 addresses may\n+    // be wrapped in square brackets:\n+    if (bind.startsWith('[') && bind.endsWith(']')) {\n+      bind = bind.slice(1, -1);\n+    }\n+\n+    server.listen(port, bind, () => {\n       if (onSuccess) {\n         onSuccess(`${server.address().address}:${server.address().port}`);\n       }\n---\n\n\n---\n\n"}], "ideal": "D"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Browser crashes on Windows 11\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Browse to mastodon.social\r\n2. Log in\n\n### Expected behaviour\n\nLog in and use Mastodon\n\n### Actual behaviour\n\nMy home page flashed, then I got a crash.\n\n### Detailed description\n\n![image](https://github.com/user-attachments/assets/67d2a3d9-3cba-4955-980a-26e9dc4df927)\r\n\r\nHere's the traceback:\r\n\r\n```\r\nTypeError: n is undefined\r\n\r\n\r\n@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1357289\r\n@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:112298\r\ne@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1543509\r\nt.useSyncExternalStoreWithSelector/d</<@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1543714\r\nuseSyncExternalStore@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1448121\r\nt.useSyncExternalStore@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1515745\r\nt.useSyncExternalStoreWithSelector@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1543785\r\nn@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:112339\r\nEe@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1357230\r\nmi@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1441138\r\njc@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1500107\r\nyl@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1489357\r\nbl@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1489285\r\nml@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1489146\r\nol@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1485981\r\ncl@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1486363\r\nBa@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1427512\r\nrl/<@https://mastodon.social/packs/js/common-81e30f7b38745cf6b34f.js:2:1483936\r\n\r\n\r\n\r\nLabelRenderer (webpack:///app/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx:43:6)\r\nselector.name] (webpack:///node_modules/react-redux/dist/react-redux.legacy-esm.js:123:36)\r\nuseSyncExternalStoreWithSelector (webpack:///node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js:11:203)\r\nuseSyncExternalStoreWithSelector (webpack:///node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js:11:419)\r\nuseDeferredValue (webpack:///node_modules/react-dom/cjs/react-dom.production.min.js:178:367)\r\nuseMemo (webpack:///node_modules/react/cjs/react.production.min.js:26:308)\r\nuseSyncExternalStoreWithSelector (webpack:///node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js:11:490)\r\nsubscription (webpack:///node_modules/react-redux/dist/react-redux.legacy-esm.js:177:6)\r\nLabelRenderer (webpack:///app/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx:39:30)\r\nNh (webpack:///node_modules/react-dom/cjs/react-dom.production.min.js:160:136)\r\nVk (webpack:///node_modules/react-dom/cjs/react-dom.production.min.js:289:336)\r\ntj (webpack:///node_modules/react-dom/cjs/react-dom.production.min.js:279:391)\r\ntj (webpack:///node_modules/react-dom/cjs/react-dom.production.min.js:279:322)\r\ntj (webpack:///node_modules/react-dom/cjs/react-dom.production.min.js:279:179)\r\nNk (webpack:///node_modules/react-dom/cjs/react-dom.production.min.js:270:87)\r\nCk (webpack:///node_modules/react-dom/cjs/react-dom.production.min.js:272:299)\r\njg (webpack:///node_modules/react-dom/cjs/react-dom.production.min.js:127:104)\r\nDk (webpack:///node_modules/react-dom/cjs/react-dom.production.min.js:266:272)\r\n```\r\n\n\n### Mastodon instance\n\nhttps://mastodon.social\n\n### Mastodon version\n\nMastodon v4.3.0-nightly.2024-08-12\n\n### Browser name and version\n\nFirefox 129.0 (64-bit). It also crashes on Edge, Chrome and Vivaldi. It's probably not a browser problem!\n\n### Operating system\n\nWindows 11\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/mastodon/features/notifications_v2/components/notification_group.tsx\n@@ -20,6 +20,21 @@ import { NotificationSeveredRelationships } from './notification_severed_relatio\n import { NotificationStatus } from './notification_status';\n import { NotificationUpdate } from './notification_update';\n \n+function missingActivity(notificationGroup: NotificationGroupModel) {\n+  switch (notificationGroup.type) {\n+    case 'reblog':\n+    case 'favourite':\n+    case 'mention':\n+    case 'update':\n+    case 'status':\n+    case 'poll':\n+      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- our type is actually not correct as the server can occasionally have orphaned notifications\n+      return notificationGroup.statusId === null;\n+    default:\n+      return false;\n+  }\n+}\n+\n export const NotificationGroup: React.FC<{\n   notificationGroupId: NotificationGroupModel['group_key'];\n   unread: boolean;\n@@ -60,7 +75,12 @@ export const NotificationGroup: React.FC<{\n     [dispatch, notificationGroupId, accountId, onMoveUp, onMoveDown],\n   );\n \n-  if (!notificationGroup || notificationGroup.type === 'gap') return null;\n+  if (\n+    !notificationGroup ||\n+    notificationGroup.type === 'gap' ||\n+    missingActivity(notificationGroup)\n+  )\n+    return null;\n \n   let content;\n \n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -47,7 +47,7 @@ function dispatchAssociatedRecords(\n       fetchedAccounts.push(notification.moderation_warning.target_account);\n     }\n \n-    if ('status' in notification) {\n+    if ('status' in notification && notification.status) {\n       fetchedStatuses.push(notification.status);\n     }\n   });\n@@ -119,7 +119,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     if (\n       (notification.type === 'mention' || notification.type === 'update') &&\n-      notification.status.filtered\n+      notification.status?.filtered\n     ) {\n       const filters = notification.status.filtered.filter((result) =>\n         result.filter.context.includes('notifications'),\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -60,12 +60,12 @@ export interface BaseNotificationGroupJSON {\n \n interface NotificationGroupWithStatusJSON extends BaseNotificationGroupJSON {\n   type: NotificationWithStatusType;\n-  status_id: string;\n+  status_id: string | null;\n }\n \n interface NotificationWithStatusJSON extends BaseNotificationJSON {\n   type: NotificationWithStatusType;\n-  status: ApiStatusJSON;\n+  status: ApiStatusJSON | null;\n }\n \n interface ReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_mention.tsx\n@@ -37,7 +37,11 @@ export const NotificationMention: React.FC<{\n   unread: boolean;\n }> = ({ notification, unread }) => {\n   const [isDirect, isReply] = useAppSelector((state) => {\n-    const status = state.statuses.get(notification.statusId) as Status;\n+    const status = state.statuses.get(notification.statusId) as\n+      | Status\n+      | undefined;\n+\n+    if (!status) return [false, false] as const;\n \n     return [\n       status.get('visibility') === 'direct',\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_with_status.tsx\n@@ -23,7 +23,7 @@ export const NotificationWithStatus: React.FC<{\n   icon: IconProp;\n   iconId: string;\n   accountIds: string[];\n-  statusId: string;\n+  statusId: string | undefined;\n   count: number;\n   labelRenderer: LabelRenderer;\n   unread: boolean;\n@@ -76,6 +76,8 @@ export const NotificationWithStatus: React.FC<{\n     [dispatch, statusId],\n   );\n \n+  if (!statusId) return null;\n+\n   return (\n     <HotKeys handlers={handlers}>\n       <div\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -21,7 +21,7 @@ interface BaseNotificationGroup\n interface BaseNotificationWithStatus<Type extends NotificationWithStatusType>\n   extends BaseNotificationGroup {\n   type: Type;\n-  statusId: string;\n+  statusId: string | undefined;\n }\n \n interface BaseNotification<Type extends NotificationType>\n@@ -126,7 +126,7 @@ export function createNotificationGroupFromJSON(\n     case 'update': {\n       const { status_id: statusId, ...groupWithoutStatus } = group;\n       return {\n-        statusId,\n+        statusId: statusId ?? undefined,\n         sampleAccountIds,\n         ...groupWithoutStatus,\n       };\n@@ -183,7 +183,7 @@ export function createNotificationGroupFromNotificationJSON(\n     case 'mention':\n     case 'poll':\n     case 'update':\n-      return { ...group, statusId: notification.status.id };\n+      return { ...group, statusId: notification.status?.id };\n     case 'admin.report':\n       return { ...group, report: createReportFromJSON(notification.report) };\n     case 'severed_relationships':\n---\n\n\n---\n\nChoice B:\nconfig/initializers/regexp.rb\n@@ -1,4 +1,4 @@\n # frozen_string_literal: true\n \n-# 0.5s is a fairly high timeout, but that should account for slow servers under load\n-Regexp.timeout = 0.5 if Regexp.respond_to?(:timeout=)\n+# 2s is a fairly high default, but that should account for slow servers under load\n+Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n---\nconfig/initializers/regexp.rb\n@@ -1,4 +0,0 @@\n-# frozen_string_literal: true\n-\n-# 2s is a fairly high default, but that should account for slow servers under load\n-Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n---\nconfig/initializers/regexp.rb\n@@ -1,4 +1,3 @@\n # frozen_string_literal: true\n \n-# 2s is a fairly high default, but that should account for slow servers under load\n-Regexp.timeout = ENV.fetch('REGEXP_TIMEOUT', 2).to_f if Regexp.respond_to?(:timeout=)\n+Regexp.timeout = ENV['REGEXP_TIMEOUT'].to_f if Regexp.respond_to?(:timeout=) && ENV['REGEXP_TIMEOUT']\n---\nGemfile\n@@ -53,7 +53,7 @@ gem 'hiredis', '~> 0.6'\n gem 'htmlentities', '~> 4.3'\n gem 'http', '~> 5.2.0'\n gem 'http_accept_language', '~> 2.1'\n-gem 'httplog', '~> 1.7.0'\n+gem 'httplog', '~> 1.7.0', require: false\n gem 'i18n'\n gem 'idn-ruby', require: 'idn'\n gem 'inline_svg'\n---\nconfig/initializers/httplog.rb\n@@ -1,7 +1,12 @@\n # frozen_string_literal: true\n \n-HttpLog.configure do |config|\n-  config.logger = Rails.logger\n-  config.color = { color: :yellow }\n-  config.compact_log = true\n+# Disable httplog in production unless log_level is `debug`\n+if !Rails.env.production? || Rails.configuration.log_level == :debug\n+  require 'httplog'\n+\n+  HttpLog.configure do |config|\n+    config.logger = Rails.logger\n+    config.color = { color: :yellow }\n+    config.compact_log = true\n+  end\n end\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/rtl.scss\n@@ -35,6 +35,10 @@ body.rtl {\n     direction: rtl;\n   }\n \n+  .column-back-button__icon {\n+    transform: scale(-1, 1);\n+  }\n+\n   .simple_form select {\n     background: $ui-base-color\n       url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 14.933 18.467' height='19.698' width='15.929'><path d='M3.467 14.967l-3.393-3.5H14.86l-3.392 3.5c-1.866 1.925-3.666 3.5-4 3.5-.335 0-2.135-1.575-4-3.5zm.266-11.234L7.467 0 11.2 3.733l3.733 3.734H0l3.733-3.734z' fill='#{hex-color(lighten($ui-base-color, 12%))}'/></svg>\")\n---\n\n\n---\n\nChoice D:\napp/models/account.rb\n@@ -68,7 +68,7 @@ class Account < ApplicationRecord\n   INSTANCE_ACTOR_ID = -99\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n   USERNAME_LENGTH_LIMIT = 30\n---\napp/models/tag.rb\n@@ -37,7 +37,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]\\u0E47-\\u0E4E#{HASHTAG_SEPARATORS}]/\n \n---\nspec/models/account_spec.rb\n@@ -711,6 +711,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/tag_spec.rb\n@@ -95,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Unable to logout on Safari\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Log in your account on mastodon.social\r\n2. Select logout option in menu section beside profile.\r\n3. Click on \"Log out\" in Confirm Log out modal.\n\n### Expected behaviour\n\nShould be able to logout\n\n### Actual behaviour\n\nUnable to logout from my account\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\nmastodon.social\n\n### Mastodon version\n\nv4.3.0-nightly.2024-08-09\n\n### Browser name and version\n\nSafari Version 17.5\n\n### Operating system\n\nmacOS 14.5\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/models/account.rb\n@@ -68,7 +68,7 @@ class Account < ApplicationRecord\n   INSTANCE_ACTOR_ID = -99\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n   USERNAME_LENGTH_LIMIT = 30\n---\napp/models/tag.rb\n@@ -37,7 +37,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]\\u0E47-\\u0E4E#{HASHTAG_SEPARATORS}]/\n \n---\nspec/models/account_spec.rb\n@@ -711,6 +711,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/tag_spec.rb\n@@ -95,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\n\n\n---\n\nChoice B:\napp/javascript/styles/mastodon/components.scss\n@@ -1996,6 +1996,7 @@ body > [data-popper-placement] {\n \n         &__handle {\n           user-select: all;\n+          overflow-wrap: anywhere;\n         }\n       }\n \n---\n\n\n---\n\nChoice C:\napp/controllers/auth/sessions_controller.rb\n@@ -187,4 +187,15 @@ def on_authentication_failure(user, security_measure, failure_reason)\n   def second_factor_attempts_key(user)\n     \"2fa_auth_attempts:#{user.id}:#{Time.now.utc.hour}\"\n   end\n+\n+  def respond_to_on_destroy\n+    respond_to do |format|\n+      format.json do\n+        render json: {\n+          redirect_to: after_sign_out_path_for(resource_name),\n+        }, status: 200\n+      end\n+      format.all { super }\n+    end\n+  end\n end\n---\napp/javascript/mastodon/features/ui/components/confirmation_modals/log_out.tsx\n@@ -25,7 +25,7 @@ export const ConfirmLogOutModal: React.FC<BaseConfirmationModalProps> = ({\n   const intl = useIntl();\n \n   const onConfirm = useCallback(() => {\n-    logOut();\n+    void logOut();\n   }, []);\n \n   return (\n---\napp/javascript/mastodon/utils/log_out.ts\n@@ -1,36 +1,20 @@\n-export const logOut = () => {\n-  const form = document.createElement('form');\n+import api from 'mastodon/api';\n \n-  const methodInput = document.createElement('input');\n-  methodInput.setAttribute('name', '_method');\n-  methodInput.setAttribute('value', 'delete');\n-  methodInput.setAttribute('type', 'hidden');\n-  form.appendChild(methodInput);\n+export async function logOut() {\n+  try {\n+    const response = await api(false).delete<{ redirect_to?: string }>(\n+      '/auth/sign_out',\n+      { headers: { Accept: 'application/json' }, withCredentials: true },\n+    );\n \n-  const csrfToken = document.querySelector<HTMLMetaElement>(\n-    'meta[name=csrf-token]',\n-  );\n-\n-  const csrfParam = document.querySelector<HTMLMetaElement>(\n-    'meta[name=csrf-param]',\n-  );\n-\n-  if (csrfParam && csrfToken) {\n-    const csrfInput = document.createElement('input');\n-    csrfInput.setAttribute('name', csrfParam.content);\n-    csrfInput.setAttribute('value', csrfToken.content);\n-    csrfInput.setAttribute('type', 'hidden');\n-    form.appendChild(csrfInput);\n+    if (response.status === 200 && response.data.redirect_to)\n+      window.location.href = response.data.redirect_to;\n+    else\n+      console.error(\n+        'Failed to log out, got an unexpected non-redirect response from the server',\n+        response,\n+      );\n+  } catch (error) {\n+    console.error('Failed to log out, response was an error', error);\n   }\n-\n-  const submitButton = document.createElement('input');\n-  submitButton.setAttribute('type', 'submit');\n-  form.appendChild(submitButton);\n-\n-  form.method = 'post';\n-  form.action = '/auth/sign_out';\n-  form.style.display = 'none';\n-\n-  document.body.appendChild(form);\n-  submitButton.click();\n-};\n+}\n---\nspec/requests/log_out_spec.rb\n@@ -0,0 +1,30 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+describe 'Log Out' do\n+  include RoutingHelper\n+\n+  describe 'DELETE /auth/sign_out' do\n+    let(:user) { Fabricate(:user) }\n+\n+    before do\n+      sign_in user\n+    end\n+\n+    it 'Logs out the user and redirect' do\n+      delete '/auth/sign_out'\n+\n+      expect(response).to redirect_to('/auth/sign_in')\n+    end\n+\n+    it 'Logs out the user and return a page to redirect to with a JSON request' do\n+      delete '/auth/sign_out', headers: { 'HTTP_ACCEPT' => 'application/json' }\n+\n+      expect(response).to have_http_status(200)\n+      expect(response.media_type).to eq 'application/json'\n+\n+      expect(body_as_json[:redirect_to]).to eq '/auth/sign_in'\n+    end\n+  end\n+end\n---\nspec/system/log_out_spec.rb\n@@ -0,0 +1,43 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+describe 'Log out' do\n+  include ProfileStories\n+\n+  before do\n+    as_a_logged_in_user\n+  end\n+\n+  describe 'Logging out from the preferences' do\n+    it 'logs the user out' do\n+      visit settings_path\n+\n+      within '.sidebar' do\n+        click_on 'Logout'\n+      end\n+\n+      expect(page).to have_title(I18n.t('auth.login'))\n+      expect(page).to have_current_path('/auth/sign_in')\n+    end\n+  end\n+\n+  describe 'Logging out from the JS app', :js, :streaming do\n+    it 'logs the user out' do\n+      visit root_path\n+\n+      within '.navigation-bar' do\n+        click_on 'Menu'\n+      end\n+\n+      within '.dropdown-menu' do\n+        click_on 'Logout'\n+      end\n+\n+      click_on 'Log out'\n+\n+      expect(page).to have_title(I18n.t('auth.login'))\n+      expect(page).to have_current_path('/auth/sign_in')\n+    end\n+  end\n+end\n---\n\n\n---\n\nChoice D:\nspec/lib/search_query_transformer_spec.rb\n@@ -16,6 +16,7 @@\n       ['\"2022-01-01\"', '2022-01-01'],\n       ['12345678', '12345678'],\n       ['\"12345678\"', '12345678'],\n+      ['\"2024-10-31T23:47:20Z\"', '2024-10-31T23:47:20Z'],\n     ].each do |value, parsed|\n       context \"with #{operator}:#{value}\" do\n         let(:query) { \"#{operator}:#{value}\" }\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Preview card for YouTube short urls links to wrong page\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\n1. Post a YouTube short URL like https://youtu.be/C_b6bptI844\r\n2. Open the link in the post, video shows fine\r\n3. Open the link via the preview card, YouTube loads the page of an \"undefined\" YouTube channel or showing a blank page: https://www.youtube.com/undefined\r\n\r\nHappens on Mastodon 4.2.10\r\n\r\n![Screenshot_20240811-102045](https://github.com/user-attachments/assets/c4acf1df-6cbb-4d07-8cff-215e9d1fbe72)\r\n\r\n\r\n\r\n### Expected behaviour\r\n\r\nthe preview card should keep the original name the same.\r\n\r\n### Actual behaviour\r\n\r\na wrong video page is shown\r\n\r\n### Detailed description\r\n\r\n_No response_\r\n\r\n### Mastodon instance\r\n\r\nruhr.social\r\n\r\n### Mastodon version\r\n\r\n4.2.10\r\n\r\n### Browser name and version\r\n\r\nchrome Android Version 127.0.6533.103 and Firefox Android 129.0b9 (Build #2016034799),\r\n\r\n### Operating system\r\n\r\nAndroid 14\r\n\r\n### Technical details\r\n\r\nI tested it with short urls for YouTube shorts and for regular videos, it happens with both of them \n\n---\n\nChoice A:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice B:\napp/models/account_pin.rb\n@@ -5,10 +5,10 @@\n # Table name: account_pins\n #\n #  id                :bigint(8)        not null, primary key\n-#  account_id        :bigint(8)\n-#  target_account_id :bigint(8)\n #  created_at        :datetime         not null\n #  updated_at        :datetime         not null\n+#  account_id        :bigint(8)        not null\n+#  target_account_id :bigint(8)        not null\n #\n \n class AccountPin < ApplicationRecord\n---\ndb/migrate/20241210140838_add_not_null_to_account_pin_account_columns.rb\n@@ -0,0 +1,23 @@\n+# frozen_string_literal: true\n+\n+class AddNotNullToAccountPinAccountColumns < ActiveRecord::Migration[7.2]\n+  def up\n+    connection.execute(<<~SQL.squish)\n+      DELETE FROM account_pins\n+      WHERE account_id IS NULL\n+      OR target_account_id IS NULL\n+    SQL\n+\n+    safety_assured do\n+      change_column_null :account_pins, :account_id, false\n+      change_column_null :account_pins, :target_account_id, false\n+    end\n+  end\n+\n+  def down\n+    safety_assured do\n+      change_column_null :account_pins, :account_id, true\n+      change_column_null :account_pins, :target_account_id, true\n+    end\n+  end\n+end\n---\ndb/schema.rb\n@@ -10,7 +10,7 @@\n #\n # It's strongly recommended that you check this file into your version control system.\n \n-ActiveRecord::Schema[7.2].define(version: 2024_12_05_163118) do\n+ActiveRecord::Schema[7.2].define(version: 2024_12_10_140838) do\n   # These are extensions that must be enabled in order to support this database\n   enable_extension \"plpgsql\"\n \n@@ -82,8 +82,8 @@\n   end\n \n   create_table \"account_pins\", force: :cascade do |t|\n-    t.bigint \"account_id\"\n-    t.bigint \"target_account_id\"\n+    t.bigint \"account_id\", null: false\n+    t.bigint \"target_account_id\", null: false\n     t.datetime \"created_at\", precision: nil, null: false\n     t.datetime \"updated_at\", precision: nil, null: false\n     t.index [\"account_id\", \"target_account_id\"], name: \"index_account_pins_on_account_id_and_target_account_id\", unique: true\n---\n\n\n---\n\nChoice C:\napp/services/fetch_link_card_service.rb\n@@ -106,12 +106,11 @@ def skip_link?(anchor)\n   end\n \n   def attempt_oembed\n-    service         = FetchOEmbedService.new\n-    url_domain      = Addressable::URI.parse(@url).normalized_host\n-    cached_endpoint = Rails.cache.read(\"oembed_endpoint:#{url_domain}\")\n+    service = FetchOEmbedService.new\n \n-    embed   = service.call(@url, cached_endpoint: cached_endpoint) unless cached_endpoint.nil?\n+    embed   = service.call(@url, use_cached_endpoint: true)\n     embed ||= service.call(@url, html: html) unless html.nil?\n+    embed ||= service.call(@url, use_cached_endpoint: true) if @url != @original_url.to_s\n \n     return false if embed.nil?\n \n---\napp/services/fetch_oembed_service.rb\n@@ -10,7 +10,7 @@ def call(url, options = {})\n     @url     = url\n     @options = options\n \n-    if @options[:cached_endpoint]\n+    if @options[:use_cached_endpoint]\n       parse_cached_endpoint!\n     else\n       discover_endpoint!\n@@ -57,9 +57,9 @@ def discover_endpoint!\n   end\n \n   def parse_cached_endpoint!\n-    cached = @options[:cached_endpoint]\n+    cached = Rails.cache.read(cache_key)\n \n-    return if cached[:endpoint].nil? || cached[:format].nil?\n+    return if cached.nil? || cached[:endpoint].nil? || cached[:format].nil?\n \n     @endpoint_url = Addressable::Template.new(cached[:endpoint]).expand(url: @url).to_s\n     @format       = cached[:format]\n@@ -68,14 +68,16 @@ def parse_cached_endpoint!\n   def cache_endpoint!\n     return unless URL_REGEX.match?(@endpoint_url)\n \n-    url_domain = Addressable::URI.parse(@url).normalized_host\n-\n     endpoint_hash = {\n       endpoint: @endpoint_url.gsub(URL_REGEX, '={url}'),\n       format: @format,\n     }\n \n-    Rails.cache.write(\"oembed_endpoint:#{url_domain}\", endpoint_hash, expires_in: ENDPOINT_CACHE_EXPIRES_IN)\n+    Rails.cache.write(cache_key, endpoint_hash, expires_in: ENDPOINT_CACHE_EXPIRES_IN)\n+  end\n+\n+  def cache_key\n+    \"oembed_endpoint:#{Addressable::URI.parse(@url).normalized_host}\"\n   end\n \n   def fetch!\n---\nspec/services/fetch_link_card_service_spec.rb\n@@ -13,6 +13,7 @@\n     stub_request(:get, 'http://example.com/not-found').to_return(status: 404, headers: { 'Content-Type' => 'text/html' }, body: html)\n     stub_request(:get, 'http://example.com/text').to_return(status: 404, headers: { 'Content-Type' => 'text/plain' }, body: 'Hello')\n     stub_request(:get, 'http://example.com/redirect').to_return(status: 302, headers: { 'Location' => 'http://example.com/html' })\n+    stub_request(:get, 'http://example.net/redirect-to-other-domain').to_return(status: 302, headers: { 'Location' => 'http://example.com/html' })\n     stub_request(:get, 'http://example.com/redirect-to-404').to_return(status: 302, headers: { 'Location' => 'http://example.com/not-found' })\n     stub_request(:get, 'http://example.com/oembed?url=http://example.com/html').to_return(headers: { 'Content-Type' => 'application/json' }, body: '{ \"version\": \"1.0\", \"type\": \"link\", \"title\": \"oEmbed title\" }')\n     stub_request(:get, 'http://example.com/oembed?format=json&url=http://example.com/html').to_return(headers: { 'Content-Type' => 'application/json' }, body: '{ \"version\": \"1.0\", \"type\": \"link\", \"title\": \"oEmbed title\" }')\n@@ -264,6 +265,39 @@\n         end\n       end\n \n+      context 'when oEmbed endpoint cache populated with redirect target' do\n+        let(:status) { Fabricate(:status, text: 'http://example.net/redirect-to-other-domain') }\n+        let(:oembed_cache) { { endpoint: 'http://example.com/oembed?format=json&url={url}', format: :json } }\n+\n+        it 'uses the cached oEmbed response' do\n+          expect(a_request(:get, 'http://example.net/redirect-to-other-domain')).to have_been_made\n+          expect(a_request(:get, 'http://example.com/oembed?url=http://example.com/html')).to have_been_made\n+        end\n+\n+        it 'creates preview card' do\n+          expect(status.preview_card).to_not be_nil\n+          expect(status.preview_card.url).to eq 'http://example.com/html'\n+          expect(status.preview_card.title).to eq 'oEmbed title'\n+        end\n+      end\n+\n+      context 'when oEmbed endpoint cache populated with redirect target but page contains no oEmbed tags' do\n+        let(:status) { Fabricate(:status, text: 'http://example.net/redirect-to-other-domain') }\n+        let(:html) { 'Please fill out CAPTCHA' }\n+        let(:oembed_cache) { { endpoint: 'http://example.com/oembed?format=json&url={url}', format: :json } }\n+\n+        it 'uses the cached oEmbed response' do\n+          expect(a_request(:get, 'http://example.net/redirect-to-other-domain')).to have_been_made\n+          expect(a_request(:get, 'http://example.com/oembed?format=json&url=http://example.com/html')).to have_been_made\n+        end\n+\n+        it 'creates preview card' do\n+          expect(status.preview_card).to_not be_nil\n+          expect(status.preview_card.url).to eq 'http://example.com/html'\n+          expect(status.preview_card.title).to eq 'oEmbed title'\n+        end\n+      end\n+\n       # If the original HTML URL for whatever reason (e.g. DOS protection) redirects to\n       # an error page, we can still use the cached oEmbed but should not use the\n       # redirect URL on the card.\n---\nspec/services/fetch_oembed_service_spec.rb\n@@ -160,10 +160,12 @@\n           headers: { 'Content-Type': 'text/html' },\n           body: request_fixture('oembed_json_empty.html')\n         )\n+\n+        Rails.cache.write('oembed_endpoint:www.youtube.com', { endpoint: 'http://www.youtube.com/oembed?format=json&url={url}', format: :json })\n       end\n \n       it 'returns new provider without fetching original URL first' do\n-        subject.call('https://www.youtube.com/watch?v=dqwpQarrDwk', cached_endpoint: { endpoint: 'http://www.youtube.com/oembed?format=json&url={url}', format: :json })\n+        subject.call('https://www.youtube.com/watch?v=dqwpQarrDwk', use_cached_endpoint: true)\n         expect(a_request(:get, 'https://www.youtube.com/watch?v=dqwpQarrDwk')).to_not have_been_made\n         expect(subject.endpoint_url).to eq 'http://www.youtube.com/oembed?format=json&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DdqwpQarrDwk'\n         expect(subject.format).to eq :json\n---\napp/lib/link_details_extractor.rb\n@@ -225,7 +225,7 @@ def host_to_url(str)\n   end\n \n   def valid_url_or_nil(str, same_origin_only: false)\n-    return if str.blank? || str == 'null'\n+    return if str.blank? || str == 'null' || str == 'undefined'\n \n     url = @original_url + Addressable::URI.parse(str)\n \n---\nspec/lib/link_details_extractor_spec.rb\n@@ -33,6 +33,14 @@\n         expect(subject.canonical_url).to eq original_url\n       end\n     end\n+\n+    context 'when canonical URL is set to \"undefined\"' do\n+      let(:url) { 'undefined' }\n+\n+      it 'ignores the canonical URLs' do\n+        expect(subject.canonical_url).to eq original_url\n+      end\n+    end\n   end\n \n   context 'when only basic metadata is present' do\n---\n\n\n---\n\nChoice D:\ndocker-compose.yml\n@@ -88,7 +88,7 @@ services:\n       - internal_network\n     healthcheck:\n       # prettier-ignore\n-      test: ['CMD-SHELL', \"curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1'\"]\n+      test: ['CMD-SHELL', \"curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1\"]\n     ports:\n       - '127.0.0.1:4000:4000'\n     depends_on:\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Mastodon strips s tags \n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Use a server which supports marking up a status\r\n2. Add `<s>some no longer relevant text</s>`\r\n3. See status from mastodon\r\n...\r\n\n\n### Expected behaviour\n\nThe tagged text should appear with a strikethrough\n\n### Actual behaviour\n\nThe text appeared normally, as if tag was stripped\n\n### Detailed description\n\nThe original text within the `s` tag appears normally, the server seems to have stripped the tags.\r\n\r\n1. Original status: https://mediaformat.org/notes/922/\r\n2. How it should appear \r\n![IMG_2100](https://github.com/user-attachments/assets/112b22fd-19cd-4cdf-8acb-d7d52d5f32a2)\r\n\r\n3. How it actually appears on Mastodon\r\n![IMG_2099](https://github.com/user-attachments/assets/39020518-5e44-4b24-b5f4-71d8bceed610)\r\n\n\n### Mastodon instance\n\nsocial.coop\n\n### Mastodon version\n\nv4.2.10\n\n### Technical details\n\nIf this is happening on your own Mastodon server, please fill out those:\r\n- Ruby version: (from `ruby --version`, eg. v3.1.2)\r\n- Node.js version: (from `node --version`, eg. v18.16.0)\r\n\n\n---\n\nChoice A:\napp/presenters/language_presenter.rb\n@@ -1,7 +1,7 @@\n # frozen_string_literal: true\n \n class LanguagePresenter < ActiveModelSerializers::Model\n-  attributes :code, :name, :native_name\n+  attributes :code, :name\n \n   def initialize(code)\n     super()\n@@ -13,8 +13,4 @@ def initialize(code)\n   def name\n     @item[0]\n   end\n-\n-  def native_name\n-    @item[1]\n-  end\n end\n---\nspec/requests/api/v1/instances/languages_spec.rb\n@@ -9,10 +9,21 @@\n     end\n \n     it 'returns http success and includes supported languages' do\n-      expect(response).to have_http_status(200)\n+      expect(response)\n+        .to have_http_status(200)\n       expect(response.content_type)\n         .to start_with('application/json')\n-      expect(response.parsed_body.pluck(:code)).to match_array LanguagesHelper::SUPPORTED_LOCALES.keys.map(&:to_s)\n+      expect(response.parsed_body)\n+        .to match_array(supported_locale_expectations)\n+    end\n+\n+    def supported_locale_expectations\n+      LanguagesHelper::SUPPORTED_LOCALES.map do |key, values|\n+        include(\n+          code: key.to_s,\n+          name: values.first\n+        )\n+      end\n     end\n   end\n end\n---\n\n\n---\n\nChoice B:\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json.fetch('links', []).index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/resolve_account_service.rb\n@@ -106,8 +106,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -122,12 +120,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -33,7 +33,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -51,7 +51,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -72,7 +72,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -95,7 +95,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -111,7 +111,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -33,7 +33,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -51,7 +51,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -72,7 +72,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -95,7 +95,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -111,7 +111,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -215,7 +215,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\n\n\n---\n\nChoice C:\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT = freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li ruby rt rp),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li ruby rt rp),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix click event handling when clicking outside of an open dropdown menu\n\nIssue Description:\nWhile experimenting with designs involving dropdown menus, I encountered a weird bug: clicking on a link while a dropdown is open will prevent the associated javascript event handler (because of `stopPropagation()` I assume) but open the link in a new tab, which can be extremely confusing.\r\n\r\nThis PR fixes that by calling `preventDefault()`.\n\n---\n\nChoice A:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\nCHANGELOG.md\n@@ -3,6 +3,24 @@ Changelog\n \n All notable changes to this project will be documented in this file.\n \n+## [4.1.19] - 2024-08-16\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+\n ## [4.1.18] - 2024-07-04\n \n ### Security\n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.js\n@@ -121,7 +121,7 @@ class ReportReasonSelector extends React.PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.js\n@@ -218,7 +218,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n-    ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id]}) unless uri.nil?\n+    ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -62,7 +62,7 @@ class Account < ApplicationRecord\n   )\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -43,9 +43,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   enum category: {\n     other: 0,\n@@ -147,8 +147,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -33,7 +33,7 @@ class Tag < ApplicationRecord\n   HASTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,18 +49,16 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n+\n       return\n     end\n \n     webfinger                            = webfinger!(\"acct:#{confirmed_username}@#{confirmed_domain}\")\n     @username, @domain                   = split_acct(webfinger.subject)\n \n-    unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-      raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\"\n-    end\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -174,9 +174,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/resolve_account_service.rb\n@@ -108,8 +108,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -124,12 +122,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -138,7 +138,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -4,5 +4,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.18\n+    image: ghcr.io/mastodon/mastodon:v4.1.19\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.18\n+    image: ghcr.io/mastodon/mastodon:v4.1.19\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.18\n+    image: ghcr.io/mastodon/mastodon:v4.1.19\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      18\n+      19\n     end\n \n     def flags\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -698,6 +698,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -137,5 +137,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -35,6 +35,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -90,6 +94,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -37,7 +37,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -62,7 +62,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -88,7 +88,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -120,7 +120,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -143,7 +143,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -37,7 +37,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -62,7 +62,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -88,7 +88,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -120,7 +120,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -143,7 +143,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -3,7 +3,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { ActivityPub::FetchRemoteKeyService.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu3L4vnpNLzVH31MeWI39\\n4F0wKeJFsLDAsNXGeOu0QF2x+h1zLWZw/agqD2R3JPU9/kaDJGPIV2Sn5zLyUA9S\\n6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh\\n8lDET6X4Pyw+ZJU0/OLo/41q9w+OrGtlsTm/PuPIeXnxa6BLqnDaxC+4IcjG/FiP\\nahNCTINl/1F/TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq+t8nhQYkgAkt64euW\\npva3qL5KD1mTIZQEP+LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3Qvu\\nHQIDAQAB\\n-----END PUBLIC KEY-----\\n\"\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nstreaming/index.js\n@@ -726,7 +726,7 @@ const startWorker = async (workerId) => {\n           // If the payload already contains the `filtered` property, it means\n           // that filtering has been applied on the ruby on rails side, as\n           // such, we don't need to construct or apply the filters in streaming:\n-          if (Object.prototype.hasOwnProperty.call(payload, \"filtered\")) {\n+          if (Object.prototype.hasOwnProperty.call(payload, 'filtered')) {\n             transmit(event, payload);\n             return;\n           }\n@@ -813,7 +813,7 @@ const startWorker = async (workerId) => {\n                 results.push({\n                   filter: cachedFilter.filter,\n                   keyword_matches,\n-                  status_matches: null\n+                  status_matches: null,\n                 });\n               }\n \n@@ -828,7 +828,7 @@ const startWorker = async (workerId) => {\n             // filtered: https://docs.joinmastodon.org/entities/Status/#filtered\n             transmit(event, {\n               ...payload,\n-              filtered: filter_results\n+              filtered: filter_results,\n             });\n           } else {\n             transmit(event, payload);\n---\n\n\n---\n\nChoice B:\napp/models/account.rb\n@@ -68,7 +68,7 @@ class Account < ApplicationRecord\n   INSTANCE_ACTOR_ID = -99\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n   USERNAME_LENGTH_LIMIT = 30\n---\napp/models/tag.rb\n@@ -37,7 +37,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]\\u0E47-\\u0E4E#{HASHTAG_SEPARATORS}]/\n \n---\nspec/models/account_spec.rb\n@@ -711,6 +711,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/tag_spec.rb\n@@ -95,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\n\n\n---\n\nChoice C:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/components.scss\n@@ -1996,6 +1996,7 @@ body > [data-popper-placement] {\n \n         &__handle {\n           user-select: all;\n+          overflow-wrap: anywhere;\n         }\n       }\n \n---\n\n\n---\n\n"}], "ideal": "C"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix status processing failing halfway when a remote post has a malformed `replies` attribute\n\nIssue Description:\nFixes #31230\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -6437,7 +6437,7 @@ a.status-card {\n   }\n \n   .dialog-option .poll__input {\n-    border-color: $inverted-text-color;\n+    border-color: $darker-text-color;\n     color: $ui-secondary-color;\n     display: inline-flex;\n     align-items: center;\n@@ -6451,13 +6451,13 @@ a.status-card {\n     &:active,\n     &:focus,\n     &:hover {\n-      border-color: lighten($inverted-text-color, 15%);\n+      border-color: $valid-value-color;\n       border-width: 4px;\n     }\n \n     &.active {\n-      border-color: $inverted-text-color;\n-      background: $inverted-text-color;\n+      border-color: $valid-value-color;\n+      background: $valid-value-color;\n     }\n   }\n \n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\nCHANGELOG.md\n@@ -3,6 +3,24 @@ Changelog\n \n All notable changes to this project will be documented in this file.\n \n+## [4.1.19] - 2024-08-16\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+\n ## [4.1.18] - 2024-07-04\n \n ### Security\n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.js\n@@ -121,7 +121,7 @@ class ReportReasonSelector extends React.PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.js\n@@ -218,7 +218,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n-    ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id]}) unless uri.nil?\n+    ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -62,7 +62,7 @@ class Account < ApplicationRecord\n   )\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -43,9 +43,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   enum category: {\n     other: 0,\n@@ -147,8 +147,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -33,7 +33,7 @@ class Tag < ApplicationRecord\n   HASTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,18 +49,16 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n+\n       return\n     end\n \n     webfinger                            = webfinger!(\"acct:#{confirmed_username}@#{confirmed_domain}\")\n     @username, @domain                   = split_acct(webfinger.subject)\n \n-    unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-      raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\"\n-    end\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -174,9 +174,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/resolve_account_service.rb\n@@ -108,8 +108,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -124,12 +122,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -138,7 +138,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -4,5 +4,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.18\n+    image: ghcr.io/mastodon/mastodon:v4.1.19\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.18\n+    image: ghcr.io/mastodon/mastodon:v4.1.19\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.1.18\n+    image: ghcr.io/mastodon/mastodon:v4.1.19\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      18\n+      19\n     end\n \n     def flags\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -698,6 +698,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -137,5 +137,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -35,6 +35,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -90,6 +94,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -37,7 +37,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -62,7 +62,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -88,7 +88,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -120,7 +120,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -143,7 +143,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -37,7 +37,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -62,7 +62,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -88,7 +88,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -120,7 +120,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -143,7 +143,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -3,7 +3,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { ActivityPub::FetchRemoteKeyService.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu3L4vnpNLzVH31MeWI39\\n4F0wKeJFsLDAsNXGeOu0QF2x+h1zLWZw/agqD2R3JPU9/kaDJGPIV2Sn5zLyUA9S\\n6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh\\n8lDET6X4Pyw+ZJU0/OLo/41q9w+OrGtlsTm/PuPIeXnxa6BLqnDaxC+4IcjG/FiP\\nahNCTINl/1F/TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq+t8nhQYkgAkt64euW\\npva3qL5KD1mTIZQEP+LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3Qvu\\nHQIDAQAB\\n-----END PUBLIC KEY-----\\n\"\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nstreaming/index.js\n@@ -726,7 +726,7 @@ const startWorker = async (workerId) => {\n           // If the payload already contains the `filtered` property, it means\n           // that filtering has been applied on the ruby on rails side, as\n           // such, we don't need to construct or apply the filters in streaming:\n-          if (Object.prototype.hasOwnProperty.call(payload, \"filtered\")) {\n+          if (Object.prototype.hasOwnProperty.call(payload, 'filtered')) {\n             transmit(event, payload);\n             return;\n           }\n@@ -813,7 +813,7 @@ const startWorker = async (workerId) => {\n                 results.push({\n                   filter: cachedFilter.filter,\n                   keyword_matches,\n-                  status_matches: null\n+                  status_matches: null,\n                 });\n               }\n \n@@ -828,7 +828,7 @@ const startWorker = async (workerId) => {\n             // filtered: https://docs.joinmastodon.org/entities/Status/#filtered\n             transmit(event, {\n               ...payload,\n-              filtered: filter_results\n+              filtered: filter_results,\n             });\n           } else {\n             transmit(event, payload);\n---\n\n\n---\n\nChoice C:\napp/models/follow_recommendation.rb\n@@ -18,5 +18,6 @@ class FollowRecommendation < ApplicationRecord\n   belongs_to :account_summary, foreign_key: :account_id, inverse_of: false\n   belongs_to :account\n \n-  scope :localized, ->(locale) { joins(:account_summary).merge(AccountSummary.localized(locale)) }\n+  scope :unsupressed, -> { where.not(FollowRecommendationSuppression.where(FollowRecommendationSuppression.arel_table[:account_id].eq(arel_table[:account_id])).select(1).arel.exists) }\n+  scope :localized, ->(locale) { unsupressed.joins(:account_summary).merge(AccountSummary.localized(locale)) }\n end\n---\n\n\n---\n\nChoice D:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Notifications not generated for mention received from NodeBB\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\n1. [NodeBB] Create a new post and tag a user on a mastodon instance (in this case, it was @julian@bb.devnull.land to @devnull@crag.social)\r\n2. [Mastodon] Navigate to the sender's profile (https://crag.social/@julian@bb.devnull.land)\r\n3. [Mastodon] Note that the post has been correctly received, and contains a mention, but that your notification inbox remains empty\r\n\r\n### Expected behaviour\r\n\r\nI should have been notified due to the mention\r\n\r\n### Actual behaviour\r\n\r\nI was not notified\r\n\r\n### Detailed description\r\n\r\nAdditional details here: https://community.nodebb.org/topic/18210/mentions-and-notifications-over-the-fediverse\r\n\r\nHere is the full Note object containing two mentions, when queried via S2S API:\r\n\r\n```\r\n{\r\n\t\"@context\":\"https://www.w3.org/ns/activitystreams\",\r\n\t\"id\":\"https://bb.devnull.land/post/72\",\r\n\t\"type\":\"Note\",\r\n\t\"to\":[\r\n\t\t\"https://www.w3.org/ns/activitystreams#Public\",\r\n\t\t\"https://bb.devnull.land/uid/1\"\r\n\t],\r\n\t\"cc\":[\r\n\t\t\"https://bb.devnull.land/uid/1/followers\",\r\n\t\t\"https://crag.social/users/devnull\",\r\n\t\t\"https://activitypub.academy/users/babeta_zondaist\"\r\n\t],\r\n\t\"inReplyTo\":\"https://bb.devnull.land/post/71\",\r\n\t\"published\":\"2024-07-30T02:49:42.616Z\",\r\n\t\"url\":\"https://bb.devnull.land/post/72\",\r\n\t\"attributedTo\":\"https://bb.devnull.land/uid/1\",\r\n\t\"context\":\"https://bb.devnull.land/topic/38\",\r\n\t\"audience\":\"https://bb.devnull.land/category/-1\",\r\n\t\"sensitive\":false,\r\n\t\"summary\":null,\r\n\t\"name\":\"Re: Testing a notification\",\r\n\t\"content\":\"<p>no context or audience <a href=\\\"https://crag.social/@devnull\\\">@devnull@crag.social</a> <a href=\\\"https://activitypub.academy/@babeta_zondaist\\\">@babeta_zondaist@activitypub.academy</a></p> \",\r\n\t\"source\":{\r\n\t\t\"content\":\"no context or audience @devnull@crag.social @babeta_zondaist@activitypub.academy\",\r\n\t\t\"mediaType\":\"text/markdown\"\r\n\t},\r\n\t\"tag\":[\r\n\t\t{\r\n\t\t\t\"type\":\"Mention\",\r\n\t\t\t\"href\":\"https://crag.social/users/devnull\",\r\n\t\t\t\"name\":\"@devnull@crag.social\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"type\":\"Mention\",\r\n\t\t\t\"href\":\"https://activitypub.academy/users/babeta_zondaist\",\r\n\t\t\t\"name\":\"@babeta_zondaist@activitypub.academy\"\r\n\t\t}\r\n\t],\r\n\t\"attachment\":[\r\n\t],\r\n\t\"replies\":[\r\n\t]\r\n}\r\n```\r\n\r\n### Mastodon instance\r\n\r\ncrag.social, mastodon.social\r\n\r\n### Mastodon version\r\n\r\nv4.2.10\r\n\r\n### Technical details\r\n\r\n`crag.social` is hosted via masto.host, but @trwnh, who originally notified me of this issue, has an account on `mastodon.social`.\r\n\r\nI was directed to post an issue here by @renchap \n\n---\n\nChoice A:\napp/lib/activitypub/activity/create.rb\n@@ -336,13 +336,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\n\n\n---\n\nChoice B:\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -3611,6 +3611,7 @@ $ui-header-logo-wordmark-width: 99px;\n   overflow-y: auto;\n   width: 100%;\n   height: 100%;\n+  z-index: 0;\n }\n \n .drawer__inner__mastodon {\n---\n\n\n---\n\nChoice D:\nspec/lib/search_query_transformer_spec.rb\n@@ -16,6 +16,7 @@\n       ['\"2022-01-01\"', '2022-01-01'],\n       ['12345678', '12345678'],\n       ['\"12345678\"', '12345678'],\n+      ['\"2024-10-31T23:47:20Z\"', '2024-10-31T23:47:20Z'],\n     ].each do |value, parsed|\n       context \"with #{operator}:#{value}\" do\n         let(:query) { \"#{operator}:#{value}\" }\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Rspec Runtime Errors From email_spec Dependency\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Create a dev environment using Vagrant, per [Setting up a dev environment](https://docs.joinmastodon.org/dev/setup/)\r\n2. Execute the `rspec` tests (`vagrant ssh -c \"cd /vagrant && rspec\"`)\r\n3. Observe errors in output\n\n### Expected behaviour\n\nRspec tests run without runtime errors from the test framework itself\n\n### Actual behaviour\n\nRspec fails with an error bubbled up from the email_spec dependency\n\n### Detailed description\n\nI have provided an output example below executing a single test for brevity, but the error occurs when running the full test suite as well. I have not reproduced in a non-Vagrant dev environment but nothing about this scenario seems specific to Vagrant.\r\n\r\n```\r\nmastodon>vagrant ssh -c \"cd /vagrant && rspec ./spec/routing/accounts_routing_spec.rb:9\"\r\nResolving dependencies...\r\n[dotenv] Set ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY, ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT, and ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\r\n[dotenv] Loaded .env.development\r\n\r\nAn error occurred while loading ./spec/routing/accounts_routing_spec.rb.\r\nFailure/Error: require 'email_spec/rspec'\r\n\r\nNameError:\r\n  uninitialized constant EmailSpec\r\n# /usr/share/rvm/gems/ruby-3.3.4@mastodon/gems/email_spec-2.3.0/lib/email_spec/rspec.rb:2:in `block in <top (required)>'\r\n# /usr/share/rvm/gems/ruby-3.3.4@mastodon/gems/email_spec-2.3.0/lib/email_spec/rspec.rb:1:in `<top (required)>'\r\n# /usr/share/rvm/gems/ruby-3.3.4@mastodon/gems/bootsnap-1.18.3/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'\r\n# /usr/share/rvm/gems/ruby-3.3.4@mastodon/gems/zeitwerk-2.6.16/lib/zeitwerk/kernel.rb:34:in `require'\r\n# ./spec/rails_helper.rb:44:in `<top (required)>'\r\n# ./spec/routing/accounts_routing_spec.rb:3:in `<top (required)>'\r\nRun options: include {:locations=>{\"./spec/routing/accounts_routing_spec.rb\"=>[9]}}\r\n\r\nAll examples were filtered out\r\n 0/0 |============================================ 100 ============================================>| Time: 00:00:00\r\n\r\nFinished in 0.00042 seconds (files took 6.25 seconds to load)\r\n0 examples, 0 failures, 1 error occurred outside of examples\r\nCoverage report generated for RSpec to /vagrant/coverage. 1156 / 41014 LOC (2.82%) covered.\r\nStopped processing SimpleCov as a previous error not related to SimpleCov has been detected\r\n```\n\n### Mastodon instance\n\nlocal\n\n### Mastodon version\n\nmain\n\n### Technical details\n\nHappening in local development environment (Vagrant)\n\n---\n\nChoice A:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\nChoice B:\nspec/rails_helper.rb\n@@ -37,11 +37,14 @@\n \n require 'spec_helper'\n require 'rspec/rails'\n+require 'rspec-sidekiq'\n require 'webmock/rspec'\n require 'paperclip/matchers'\n require 'capybara/rspec'\n require 'chewy/rspec'\n+require 'email_spec'\n require 'email_spec/rspec'\n+require 'database_cleaner/active_record'\n require 'test_prof/recipes/rspec/before_all'\n \n Dir[Rails.root.join('spec', 'support', '**', '*.rb')].each { |f| require f }\n---\n\n\n---\n\nChoice C:\napp/lib/feed_manager.rb\n@@ -558,7 +558,7 @@ def build_crutches(receiver_id, statuses)\n       arr = crutches[:active_mentions][s.id] || []\n       arr.push(s.account_id)\n \n-      if s.reblog?\n+      if s.reblog? && s.reblog.present?\n         arr.push(s.reblog.account_id)\n         arr.concat(crutches[:active_mentions][s.reblog_of_id] || [])\n       end\n---\n\n\n---\n\nChoice D:\napp/workers/web/push_notification_worker.rb\n@@ -55,12 +55,8 @@ def web_push_request\n   end\n \n   def push_notification_json\n-    Oj.dump(serialized_notification_in_subscription_locale.as_json)\n-  end\n-\n-  def serialized_notification_in_subscription_locale\n     I18n.with_locale(@subscription.locale.presence || I18n.default_locale) do\n-      serialized_notification\n+      Oj.dump(serialized_notification.as_json)\n     end\n   end\n \n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix reblogging after refactor\n\nIssue Description:\nFix regression from #31102\n\n---\n\nChoice A:\napp/lib/request.rb\n@@ -81,8 +81,11 @@ def initialize(verb, url, **options)\n         max_hops: 3,\n         on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n       },\n+    }.merge(options).merge(\n       socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n-    }.merge(options)\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n---\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/actions/interactions.js\n@@ -1,7 +1,11 @@\n+import { boostModal } from 'mastodon/initial_state';\n+\n import api, { getLinks } from '../api';\n \n import { fetchRelationships } from './accounts';\n import { importFetchedAccounts, importFetchedStatus } from './importer';\n+import { unreblog, reblog } from './interactions_typed';\n+import { openModal } from './modal';\n \n export const REBLOGS_EXPAND_REQUEST = 'REBLOGS_EXPAND_REQUEST';\n export const REBLOGS_EXPAND_SUCCESS = 'REBLOGS_EXPAND_SUCCESS';\n@@ -432,3 +436,49 @@ export function unpinFail(status, error) {\n     skipLoading: true,\n   };\n }\n+\n+function toggleReblogWithoutConfirmation(status, privacy) {\n+  return (dispatch) => {\n+    if (status.get('reblogged')) {\n+      dispatch(unreblog({ statusId: status.get('id') }));\n+    } else {\n+      dispatch(reblog({ statusId: status.get('id'), privacy }));\n+    }\n+  };\n+}\n+\n+export function toggleReblog(statusId, skipModal = false) {\n+  return (dispatch, getState) => {\n+    const state = getState();\n+    let status = state.statuses.get(statusId);\n+\n+    if (!status)\n+      return;\n+\n+    // The reblog modal expects a pre-filled account in status\n+    // TODO: fix this by having the reblog modal get a statusId and do the work itself\n+    status = status.set('account', state.accounts.get(status.get('account')));\n+\n+    if (boostModal && !skipModal) {\n+      dispatch(openModal({ modalType: 'BOOST', modalProps: { status, onReblog: toggleReblogWithoutConfirmation } }));\n+    } else {\n+      toggleReblogWithoutConfirmation(status);\n+    }\n+  };\n+}\n+\n+export function toggleFavourite(statusId) {\n+  return (dispatch, getState) => {\n+    const state = getState();\n+    const status = state.statuses.get(statusId);\n+\n+    if (!status)\n+      return;\n+\n+    if (status.get('favourited')) {\n+      dispatch(unfavourite(status));\n+    } else {\n+      dispatch(favourite(status));\n+    }\n+  };\n+}\n---\napp/javascript/mastodon/containers/status_container.jsx\n@@ -21,11 +21,9 @@ import {\n   initAddFilter,\n } from '../actions/filters';\n import {\n-  reblog,\n-  favourite,\n+  toggleReblog,\n+  toggleFavourite,\n   bookmark,\n-  unreblog,\n-  unfavourite,\n   unbookmark,\n   pin,\n   unpin,\n@@ -46,7 +44,7 @@ import {\n   undoStatusTranslation,\n } from '../actions/statuses';\n import Status from '../components/status';\n-import { boostModal, deleteModal } from '../initial_state';\n+import { deleteModal } from '../initial_state';\n import { makeGetStatus, makeGetPictureInPicture } from '../selectors';\n \n const messages = defineMessages({\n@@ -94,28 +92,12 @@ const mapDispatchToProps = (dispatch, { intl, contextType }) => ({\n     });\n   },\n \n-  onModalReblog (status, privacy) {\n-    if (status.get('reblogged')) {\n-      dispatch(unreblog({ statusId: status.get('id') }));\n-    } else {\n-      dispatch(reblog({ statusId: status.get('id'), visibility: privacy }));\n-    }\n-  },\n-\n   onReblog (status, e) {\n-    if ((e && e.shiftKey) || !boostModal) {\n-      this.onModalReblog(status);\n-    } else {\n-      dispatch(openModal({ modalType: 'BOOST', modalProps: { status, onReblog: this.onModalReblog } }));\n-    }\n+    dispatch(toggleReblog(status.get('id'), e.shiftKey));\n   },\n \n   onFavourite (status) {\n-    if (status.get('favourited')) {\n-      dispatch(unfavourite(status));\n-    } else {\n-      dispatch(favourite(status));\n-    }\n+    dispatch(toggleFavourite(status.get('id')));\n   },\n \n   onBookmark (status) {\n---\napp/javascript/mastodon/features/notifications/containers/notification_container.js\n@@ -2,17 +2,13 @@ import { connect } from 'react-redux';\n \n import { mentionCompose } from '../../../actions/compose';\n import {\n-  reblog,\n-  favourite,\n-  unreblog,\n-  unfavourite,\n+  toggleFavourite,\n+  toggleReblog,\n } from '../../../actions/interactions';\n-import { openModal } from '../../../actions/modal';\n import {\n   hideStatus,\n   revealStatus,\n } from '../../../actions/statuses';\n-import { boostModal } from '../../../initial_state';\n import { makeGetNotification, makeGetStatus, makeGetReport } from '../../../selectors';\n import Notification from '../components/notification';\n \n@@ -38,28 +34,12 @@ const mapDispatchToProps = dispatch => ({\n     dispatch(mentionCompose(account));\n   },\n \n-  onModalReblog (status, privacy) {\n-    dispatch(reblog({ statusId: status.get('id'), visibility: privacy }));\n-  },\n-\n   onReblog (status, e) {\n-    if (status.get('reblogged')) {\n-      dispatch(unreblog({ statusId: status.get('id') }));\n-    } else {\n-      if (e.shiftKey || !boostModal) {\n-        this.onModalReblog(status);\n-      } else {\n-        dispatch(openModal({ modalType: 'BOOST', modalProps: { status, onReblog: this.onModalReblog } }));\n-      }\n-    }\n+    dispatch(toggleReblog(status.get('id'), e.shiftKey));\n   },\n \n   onFavourite (status) {\n-    if (status.get('favourited')) {\n-      dispatch(unfavourite(status));\n-    } else {\n-      dispatch(favourite(status));\n-    }\n+    dispatch(toggleFavourite(status.get('id')));\n   },\n \n   onToggleHidden (status) {\n---\napp/javascript/mastodon/features/picture_in_picture/components/footer.jsx\n@@ -15,11 +15,11 @@ import ReplyIcon from '@/material-icons/400-24px/reply.svg?react';\n import ReplyAllIcon from '@/material-icons/400-24px/reply_all.svg?react';\n import StarIcon from '@/material-icons/400-24px/star.svg?react';\n import { replyCompose } from 'mastodon/actions/compose';\n-import { reblog, favourite, unreblog, unfavourite } from 'mastodon/actions/interactions';\n+import { toggleReblog, toggleFavourite } from 'mastodon/actions/interactions';\n import { openModal } from 'mastodon/actions/modal';\n import { IconButton } from 'mastodon/components/icon_button';\n import { identityContextPropShape, withIdentity } from 'mastodon/identity_context';\n-import { me, boostModal } from 'mastodon/initial_state';\n+import { me } from 'mastodon/initial_state';\n import { makeGetStatus } from 'mastodon/selectors';\n import { WithRouterPropTypes } from 'mastodon/utils/react_router';\n \n@@ -104,11 +104,7 @@ class Footer extends ImmutablePureComponent {\n     const { signedIn } = this.props.identity;\n \n     if (signedIn) {\n-      if (status.get('favourited')) {\n-        dispatch(unfavourite(status));\n-      } else {\n-        dispatch(favourite(status));\n-      }\n+      dispatch(toggleFavourite(status.get('id')));\n     } else {\n       dispatch(openModal({\n         modalType: 'INTERACTION',\n@@ -121,23 +117,12 @@ class Footer extends ImmutablePureComponent {\n     }\n   };\n \n-  _performReblog = (status, privacy) => {\n-    const { dispatch } = this.props;\n-    dispatch(reblog({ statusId: status.get('id'), visibility: privacy }));\n-  };\n-\n   handleReblogClick = e => {\n     const { dispatch, status } = this.props;\n     const { signedIn } = this.props.identity;\n \n     if (signedIn) {\n-      if (status.get('reblogged')) {\n-        dispatch(unreblog({ statusId: status.get('id') }));\n-      } else if ((e && e.shiftKey) || !boostModal) {\n-        this._performReblog(status);\n-      } else {\n-        dispatch(openModal({ modalType: 'BOOST', modalProps: { status, onReblog: this._performReblog } }));\n-      }\n+      dispatch(toggleReblog(status.get('id'), e && e.shiftKey));\n     } else {\n       dispatch(openModal({\n         modalType: 'INTERACTION',\n---\napp/javascript/mastodon/features/status/containers/detailed_status_container.js\n@@ -10,10 +10,8 @@ import {\n   directCompose,\n } from '../../../actions/compose';\n import {\n-  reblog,\n-  favourite,\n-  unreblog,\n-  unfavourite,\n+  toggleReblog,\n+  toggleFavourite,\n   pin,\n   unpin,\n } from '../../../actions/interactions';\n@@ -27,7 +25,7 @@ import {\n   hideStatus,\n   revealStatus,\n } from '../../../actions/statuses';\n-import { boostModal, deleteModal } from '../../../initial_state';\n+import { deleteModal } from '../../../initial_state';\n import { makeGetStatus, makeGetPictureInPicture } from '../../../selectors';\n import DetailedStatus from '../components/detailed_status';\n \n@@ -73,28 +71,12 @@ const mapDispatchToProps = (dispatch, { intl }) => ({\n     });\n   },\n \n-  onModalReblog (status, privacy) {\n-    dispatch(reblog({ statusId: status.get('id'), visibility: privacy }));\n-  },\n-\n   onReblog (status, e) {\n-    if (status.get('reblogged')) {\n-      dispatch(unreblog({ statusId: status.get('id') }));\n-    } else {\n-      if (e.shiftKey || !boostModal) {\n-        this.onModalReblog(status);\n-      } else {\n-        dispatch(openModal({ modalType: 'BOOST', modalProps: { status, onReblog: this.onModalReblog } }));\n-      }\n-    }\n+    dispatch(toggleReblog(status.get('id'), e.shiftKey));\n   },\n \n   onFavourite (status) {\n-    if (status.get('favourited')) {\n-      dispatch(unfavourite(status));\n-    } else {\n-      dispatch(favourite(status));\n-    }\n+    dispatch(toggleFavourite(status.get('id')));\n   },\n \n   onPin (status) {\n---\napp/javascript/mastodon/features/status/index.jsx\n@@ -38,12 +38,10 @@ import {\n   unblockDomain,\n } from '../../actions/domain_blocks';\n import {\n-  favourite,\n-  unfavourite,\n+  toggleFavourite,\n   bookmark,\n   unbookmark,\n-  reblog,\n-  unreblog,\n+  toggleReblog,\n   pin,\n   unpin,\n } from '../../actions/interactions';\n@@ -64,7 +62,7 @@ import {\n import ColumnHeader from '../../components/column_header';\n import { textForScreenReader, defaultMediaVisibility } from '../../components/status';\n import StatusContainer from '../../containers/status_container';\n-import { boostModal, deleteModal } from '../../initial_state';\n+import { deleteModal } from '../../initial_state';\n import { makeGetStatus, makeGetPictureInPicture } from '../../selectors';\n import Column from '../ui/components/column';\n import { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\n@@ -244,11 +242,7 @@ class Status extends ImmutablePureComponent {\n     const { signedIn } = this.props.identity;\n \n     if (signedIn) {\n-      if (status.get('favourited')) {\n-        dispatch(unfavourite(status));\n-      } else {\n-        dispatch(favourite(status));\n-      }\n+      dispatch(toggleFavourite(status.get('id')));\n     } else {\n       dispatch(openModal({\n         modalType: 'INTERACTION',\n@@ -298,24 +292,12 @@ class Status extends ImmutablePureComponent {\n     }\n   };\n \n-  handleModalReblog = (status, privacy) => {\n-    this.props.dispatch(reblog({ statusId: status.get('id'), visibility: privacy }));\n-  };\n-\n   handleReblogClick = (status, e) => {\n     const { dispatch } = this.props;\n     const { signedIn } = this.props.identity;\n \n     if (signedIn) {\n-      if (status.get('reblogged')) {\n-        dispatch(unreblog({ statusId: status.get('id') }));\n-      } else {\n-        if ((e && e.shiftKey) || !boostModal) {\n-          this.handleModalReblog(status);\n-        } else {\n-          dispatch(openModal({ modalType: 'BOOST', modalProps: { status, onReblog: this.handleModalReblog } }));\n-        }\n-      }\n+      dispatch(toggleReblog(status.get('id'), e && e.shiftKey));\n     } else {\n       dispatch(openModal({\n         modalType: 'INTERACTION',\n---\n\n\n---\n\nChoice C:\napp/workers/web/push_notification_worker.rb\n@@ -55,12 +55,8 @@ def web_push_request\n   end\n \n   def push_notification_json\n-    Oj.dump(serialized_notification_in_subscription_locale.as_json)\n-  end\n-\n-  def serialized_notification_in_subscription_locale\n     I18n.with_locale(@subscription.locale.presence || I18n.default_locale) do\n-      serialized_notification\n+      Oj.dump(serialized_notification.as_json)\n     end\n   end\n \n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Fix duplicate `orderedItems` in user archive's `outbox.json`\n\nIssue Description:\nFixes #31091\r\n\r\nThis was introduced #30653. The underlying issue was the inconsistent use of string VS symbol keys in that hash. This PR changes it to only use symbols, and adds tests for the issue.\n\n---\n\nChoice A:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\nChoice B:\napp/javascript/styles/mastodon/reset.scss\n@@ -56,7 +56,6 @@ table {\n @supports not selector(::-webkit-scrollbar) {\n   html {\n     scrollbar-color: $action-button-color var(--background-border-color);\n-    scrollbar-width: thin;\n   }\n }\n \n---\napp/javascript/styles/mastodon-light/diff.scss\n@@ -524,14 +524,3 @@ a.sparkline {\n     color: $dark-text-color;\n   }\n }\n-\n-@supports not selector(::-webkit-scrollbar) {\n-  html {\n-    scrollbar-color: rgba($action-button-color, 0.25)\n-      var(--background-border-color);\n-  }\n-}\n-\n-::-webkit-scrollbar-thumb {\n-  opacity: 0.25;\n-}\n---\napp/javascript/styles/mastodon/reset.scss\n@@ -52,32 +52,3 @@ table {\n   border-collapse: collapse;\n   border-spacing: 0;\n }\n-\n-@supports not selector(::-webkit-scrollbar) {\n-  html {\n-    scrollbar-color: $action-button-color var(--background-border-color);\n-    scrollbar-width: thin;\n-  }\n-}\n-\n-::-webkit-scrollbar {\n-  width: 8px;\n-  height: 8px;\n-}\n-\n-::-webkit-scrollbar-thumb {\n-  background-color: $action-button-color;\n-  border: 2px var(--background-border-color);\n-  border-radius: 12px;\n-  width: 6px;\n-  box-shadow: inset 0 0 0 2px var(--background-border-color);\n-}\n-\n-::-webkit-scrollbar-track {\n-  background-color: var(--background-border-color);\n-  border-radius: 0px;\n-}\n-\n-::-webkit-scrollbar-corner {\n-  background: transparent;\n-}\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -1996,6 +1996,7 @@ body > [data-popper-placement] {\n \n         &__handle {\n           user-select: all;\n+          overflow-wrap: anywhere;\n         }\n       }\n \n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/api_types/accounts.ts\n@@ -13,7 +13,7 @@ export interface ApiAccountRoleJSON {\n }\n \n // See app/serializers/rest/account_serializer.rb\n-export interface ApiAccountJSON {\n+export interface BaseApiAccountJSON {\n   acct: string;\n   avatar: string;\n   avatar_static: string;\n@@ -45,3 +45,12 @@ export interface ApiAccountJSON {\n   memorial?: boolean;\n   hide_collections: boolean;\n }\n+\n+// See app/serializers/rest/muted_account_serializer.rb\n+export interface ApiMutedAccountJSON extends BaseApiAccountJSON {\n+  mute_expires_at?: string | null;\n+}\n+\n+// For now, we have the same type representing both `Account` and `MutedAccount`\n+// objects, but we should refactor this in the future.\n+export type ApiAccountJSON = ApiMutedAccountJSON;\n---\napp/javascript/mastodon/models/account.ts\n@@ -95,6 +95,9 @@ export const accountDefaultValues: AccountShape = {\n   limited: false,\n   moved: null,\n   hide_collections: false,\n+  // This comes from `ApiMutedAccountJSON`, but we should eventually\n+  // store that in a different object.\n+  mute_expires_at: null,\n };\n \n const AccountFactory = ImmutableRecord<AccountShape>(accountDefaultValues);\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Duplicate key \"orderedItems\" in outbox.json when exporting a user's archive\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Export a user's archive\r\n2. Download & extract the archive\r\n3. Look at outbox.json\r\n4. There's two \"orderedItems\" keys!\r\n![image](https://github.com/user-attachments/assets/eb69d63e-eb76-462e-a0f1-69b4600337ca)\r\n\r\n(originally [reported on glitch-soc](https://github.com/glitch-soc/mastodon/issues/2787) but was told that it's also happening upstream)\n\n### Expected behaviour\n\nThere should only be one \"orderedItems\" key\n\n### Actual behaviour\n\nThere were two \"orderedItems\" keys, one of which was a blank array\n\n### Detailed description\n\n_No response_\n\n### Mastodon instance\n\n_No response_\n\n### Mastodon version\n\nv4.3.0-alpha.5+glitch\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\nChoice B:\nCHANGELOG.md\n@@ -2,6 +2,24 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.3] - 2025-01-16\n+\n+### Security\n+\n+- Fix insufficient validation of account URIs ([GHSA-5wxh-3p65-r4g6](https://github.com/mastodon/mastodon/security/advisories/GHSA-5wxh-3p65-r4g6))\n+- Update dependencies\n+\n+### Fixed\n+\n+- Fix `libyaml` missing from `Dockerfile` build stage (#33591 by @vmstan)\n+- Fix incorrect notification settings migration for non-followers (#33348 by @ClearlyClaire)\n+- Fix down clause for notification policy v2 migrations (#33340 by @jesseplusplus)\n+- Fix error decrementing status count when `FeaturedTags#last_status_at` is `nil` (#33320 by @ClearlyClaire)\n+- Fix last paginated notification group only including data on a single notification (#33271 by @ClearlyClaire)\n+- Fix processing of mentions for post edits with an existing corresponding silent mention (#33227 by @ClearlyClaire)\n+- Fix deletion of unconfirmed users with Webauthn set (#33186 by @ClearlyClaire)\n+- Fix empty authors preview card serialization (#33151, #33466 by @mjankowski and @ClearlyClaire)\n+\n ## [4.3.2] - 2024-12-03\n \n ### Added\n@@ -135,7 +153,7 @@ The following changelog entries focus on changes visible to users, administrator\n - **Add notifications of severed relationships** (#27511, #29665, #29668, #29670, #29700, #29714, #29712, and #29731 by @ClearlyClaire and @Gargron)\\\n   Notify local users when they lose relationships as a result of a local moderator blocking a remote account or server, allowing the affected user to retrieve the list of broken relationships.\\\n   Note that this does not notify remote users.\\\n-  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`relationship_severance_event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n+  This adds the `severed_relationships` notification type to the REST API and streaming, with a new [`event` attribute](https://docs.joinmastodon.org/entities/Notification/#relationship_severance_event).\n - **Add hover cards in web UI** (#30754, #30864, #30850, #30879, #30928, #30949, #30948, #30931, and #31300 by @ClearlyClaire, @Gargron, and @renchap)\\\n   Hovering over an avatar or username will now display a hover card with the first two lines of the user's description and their first two profile fields.\\\n   This can be disabled in the \u201cAnimations and accessibility\u201d section of the preferences.\n---\nDockerfile\n@@ -150,6 +150,7 @@ RUN \\\n     libpq-dev \\\n     libssl-dev \\\n     libtool \\\n+    libyaml-dev \\\n     meson \\\n     nasm \\\n     pkg-config \\\n---\nGemfile.lock\n@@ -10,51 +10,51 @@ GIT\n GEM\n   remote: https://rubygems.org/\n   specs:\n-    actioncable (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actioncable (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nio4r (~> 2.0)\n       websocket-driver (>= 0.6.1)\n       zeitwerk (~> 2.6)\n-    actionmailbox (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailbox (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (>= 2.7.1)\n       net-imap\n       net-pop\n       net-smtp\n-    actionmailer (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionmailer (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       mail (~> 2.5, >= 2.5.4)\n       net-imap\n       net-pop\n       net-smtp\n       rails-dom-testing (~> 2.2)\n-    actionpack (7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionpack (7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       nokogiri (>= 1.8.5)\n       racc\n       rack (>= 2.2.4)\n       rack-session (>= 1.0.1)\n       rack-test (>= 0.6.3)\n       rails-dom-testing (~> 2.2)\n       rails-html-sanitizer (~> 1.6)\n-    actiontext (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actiontext (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.6.0)\n       nokogiri (>= 1.8.5)\n-    actionview (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    actionview (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       builder (~> 3.1)\n       erubi (~> 1.11)\n       rails-dom-testing (~> 2.2)\n@@ -64,30 +64,33 @@ GEM\n       activemodel (>= 4.1)\n       case_transform (>= 0.2)\n       jsonapi-renderer (>= 0.1.1.beta1, < 0.3)\n-    activejob (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activejob (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       globalid (>= 0.3.6)\n-    activemodel (7.1.4.1)\n-      activesupport (= 7.1.4.1)\n-    activerecord (7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activemodel (7.1.5.1)\n+      activesupport (= 7.1.5.1)\n+    activerecord (7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       timeout (>= 0.4.0)\n-    activestorage (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    activestorage (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       marcel (~> 1.0)\n-    activesupport (7.1.4.1)\n+    activesupport (7.1.5.1)\n       base64\n+      benchmark (>= 0.3)\n       bigdecimal\n       concurrent-ruby (~> 1.0, >= 1.0.2)\n       connection_pool (>= 2.2.5)\n       drb\n       i18n (>= 1.6, < 2)\n+      logger (>= 1.4.2)\n       minitest (>= 5.1)\n       mutex_m\n+      securerandom (>= 0.3)\n       tzinfo (~> 2.0)\n     addressable (2.8.7)\n       public_suffix (>= 2.0.2, < 7.0)\n@@ -126,6 +129,7 @@ GEM\n     base64 (0.2.0)\n     bcp47_spec (0.2.1)\n     bcrypt (3.1.20)\n+    benchmark (0.4.0)\n     better_errors (2.10.1)\n       erubi (>= 1.0.0)\n       rack (>= 0.9.0)\n@@ -454,7 +458,7 @@ GEM\n     net-smtp (0.5.0)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.7)\n+    nokogiri (1.16.8)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -638,20 +642,20 @@ GEM\n     rackup (1.0.0)\n       rack (< 3)\n       webrick\n-    rails (7.1.4.1)\n-      actioncable (= 7.1.4.1)\n-      actionmailbox (= 7.1.4.1)\n-      actionmailer (= 7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      actiontext (= 7.1.4.1)\n-      actionview (= 7.1.4.1)\n-      activejob (= 7.1.4.1)\n-      activemodel (= 7.1.4.1)\n-      activerecord (= 7.1.4.1)\n-      activestorage (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    rails (7.1.5.1)\n+      actioncable (= 7.1.5.1)\n+      actionmailbox (= 7.1.5.1)\n+      actionmailer (= 7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      actiontext (= 7.1.5.1)\n+      actionview (= 7.1.5.1)\n+      activejob (= 7.1.5.1)\n+      activemodel (= 7.1.5.1)\n+      activerecord (= 7.1.5.1)\n+      activestorage (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       bundler (>= 1.15.0)\n-      railties (= 7.1.4.1)\n+      railties (= 7.1.5.1)\n     rails-controller-testing (1.0.5)\n       actionpack (>= 5.0.1.rc1)\n       actionview (>= 5.0.1.rc1)\n@@ -660,15 +664,15 @@ GEM\n       activesupport (>= 5.0.0)\n       minitest\n       nokogiri (>= 1.6)\n-    rails-html-sanitizer (1.6.0)\n+    rails-html-sanitizer (1.6.2)\n       loofah (~> 2.21)\n-      nokogiri (~> 1.14)\n+      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)\n     rails-i18n (7.0.9)\n       i18n (>= 0.7, < 2)\n       railties (>= 6.0.0, < 8)\n-    railties (7.1.4.1)\n-      actionpack (= 7.1.4.1)\n-      activesupport (= 7.1.4.1)\n+    railties (7.1.5.1)\n+      actionpack (= 7.1.5.1)\n+      activesupport (= 7.1.5.1)\n       irb\n       rackup (>= 1.0.0)\n       rake (>= 12.2)\n@@ -781,6 +785,7 @@ GEM\n     scenic (1.8.0)\n       activerecord (>= 4.0.0)\n       railties (>= 4.0.0)\n+    securerandom (0.4.1)\n     selenium-webdriver (4.25.0)\n       base64 (~> 0.2)\n       logger (~> 1.4)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -80,10 +80,31 @@ def load_grouped_notifications\n     return [] if @notifications.empty?\n \n     MastodonOTELTracer.in_span('Api::V2::NotificationsController#load_grouped_notifications') do\n-      NotificationGroup.from_notifications(@notifications, pagination_range: (@notifications.last.id)..(@notifications.first.id), grouped_types: params[:grouped_types])\n+      pagination_range = (@notifications.last.id)..@notifications.first.id\n+\n+      # If the page is incomplete, we know we are on the last page\n+      if incomplete_page?\n+        if paginating_up?\n+          pagination_range = @notifications.last.id...(params[:max_id]&.to_i)\n+        else\n+          range_start = params[:since_id]&.to_i\n+          range_start += 1 unless range_start.nil?\n+          pagination_range = range_start..(@notifications.first.id)\n+        end\n+      end\n+\n+      NotificationGroup.from_notifications(@notifications, pagination_range: pagination_range, grouped_types: params[:grouped_types])\n     end\n   end\n \n+  def incomplete_page?\n+    @notifications.size < limit_param(DEFAULT_NOTIFICATIONS_LIMIT)\n+  end\n+\n+  def paginating_up?\n+    params[:min_id].present?\n+  end\n+\n   def browserable_account_notifications\n     current_account.notifications.without_suspended.browserable(\n       types: Array(browserable_params[:types]),\n---\napp/models/featured_tag.rb\n@@ -47,7 +47,7 @@ def increment(timestamp)\n   def decrement(deleted_status)\n     if statuses_count <= 1\n       update(statuses_count: 0, last_status_at: nil)\n-    elsif last_status_at > deleted_status.created_at\n+    elsif last_status_at.present? && last_status_at > deleted_status.created_at\n       update(statuses_count: statuses_count - 1)\n     else\n       # Fetching the latest status creation time can be expensive, so only perform it\n---\napp/models/notification_group.rb\n@@ -63,21 +63,31 @@ def load_groups_data(account_id, group_keys, pagination_range: nil)\n         binds = [\n           account_id,\n           SAMPLE_ACCOUNTS_SIZE,\n-          pagination_range.begin,\n-          pagination_range.end,\n           ActiveRecord::Relation::QueryAttribute.new('group_keys', group_keys, ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(ActiveModel::Type::String.new)),\n+          pagination_range.begin || 0,\n         ]\n+        binds << pagination_range.end unless pagination_range.end.nil?\n+\n+        upper_bound_cond = begin\n+          if pagination_range.end.nil?\n+            ''\n+          elsif pagination_range.exclude_end?\n+            'AND id < $5'\n+          else\n+            'AND id <= $5'\n+          end\n+        end\n \n         ActiveRecord::Base.connection.select_all(<<~SQL.squish, 'grouped_notifications', binds).cast_values.to_h { |k, *values| [k, values] }\n           SELECT\n             groups.group_key,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1),\n-            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT $2),\n-            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4) AS notifications_count,\n-            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $3 ORDER BY id ASC LIMIT 1) AS min_id,\n-            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id <= $4 ORDER BY id DESC LIMIT 1)\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1),\n+            array(SELECT from_account_id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT $2),\n+            (SELECT count(*) FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond}) AS notifications_count,\n+            (SELECT id FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key AND id >= $4 ORDER BY id ASC LIMIT 1) AS min_id,\n+            (SELECT created_at FROM notifications WHERE notifications.account_id = $1 AND notifications.group_key = groups.group_key #{upper_bound_cond} ORDER BY id DESC LIMIT 1)\n           FROM\n-            unnest($5::text[]) AS groups(group_key);\n+            unnest($3::text[]) AS groups(group_key);\n         SQL\n       else\n         binds = [\n---\napp/models/preview_card.rb\n@@ -134,7 +134,7 @@ def history\n   end\n \n   def authors\n-    @authors ||= [PreviewCard::Author.new(self)]\n+    @authors ||= Array(serialized_authors)\n   end\n \n   class Author < ActiveModelSerializers::Model\n@@ -169,6 +169,13 @@ def image_styles(file)\n \n   private\n \n+  def serialized_authors\n+    if author_name? || author_url? || author_account_id?\n+      PreviewCard::Author\n+        .new(self)\n+    end\n+  end\n+\n   def extract_dimensions\n     file = image.queued_for_write[:original]\n \n---\napp/services/activitypub/process_status_update_service.rb\n@@ -188,40 +188,30 @@ def update_tags!\n   end\n \n   def update_mentions!\n-    previous_mentions = @status.active_mentions.includes(:account).to_a\n-    current_mentions  = []\n     unresolved_mentions = []\n \n-    @raw_mentions.each do |href|\n+    currently_mentioned_account_ids = @raw_mentions.filter_map do |href|\n       next if href.blank?\n \n       account   = ActivityPub::TagManager.instance.uri_to_resource(href, Account)\n       account ||= ActivityPub::FetchRemoteAccountService.new.call(href, request_id: @request_id)\n \n-      next if account.nil?\n-\n-      mention   = previous_mentions.find { |x| x.account_id == account.id }\n-      mention ||= account.mentions.new(status: @status)\n-\n-      current_mentions << mention\n+      account&.id\n     rescue Mastodon::UnexpectedResponseError, HTTP::TimeoutError, HTTP::ConnectionError, OpenSSL::SSL::SSLError\n       # Since previous mentions are about already-known accounts,\n       # they don't try to resolve again and won't fall into this case.\n       # In other words, this failure case is only for new mentions and won't\n       # affect `removed_mentions` so they can safely be retried asynchronously\n       unresolved_mentions << href\n+      nil\n     end\n \n-    current_mentions.each do |mention|\n-      mention.save if mention.new_record?\n-    end\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n-    removed_mentions = previous_mentions - current_mentions\n-\n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    @status.mentions.where.not(account_id: currently_mentioned_account_ids).update_all(silent: true)\n \n     # Queue unresolved mentions for later\n     unresolved_mentions.uniq.each do |uri|\n---\napp/services/process_mentions_service.rb\n@@ -13,7 +13,7 @@ def call(status, save_records: true)\n \n     return unless @status.local?\n \n-    @previous_mentions = @status.active_mentions.includes(:account).to_a\n+    @previous_mentions = @status.mentions.includes(:account).to_a\n     @current_mentions  = []\n \n     Status.transaction do\n@@ -57,6 +57,8 @@ def scan_text!\n       mention ||= @current_mentions.find  { |x| x.account_id == mentioned_account.id }\n       mention ||= @status.mentions.new(account: mentioned_account)\n \n+      mention.silent = false\n+\n       @current_mentions << mention\n \n       \"@#{mentioned_account.acct}\"\n@@ -78,15 +80,15 @@ def assign_mentions!\n     end\n \n     @current_mentions.each do |mention|\n-      mention.save if mention.new_record? && @save_records\n+      mention.save if (mention.new_record? || mention.silent_changed?) && @save_records\n     end\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n     # received a notification might be more confusing\n     removed_mentions = @previous_mentions - @current_mentions\n \n-    Mention.where(id: removed_mentions.map(&:id)).update_all(silent: true) unless removed_mentions.empty?\n+    Mention.where(id: removed_mentions.map(&:id), silent: false).update_all(silent: true) unless removed_mentions.empty?\n   end\n \n   def mention_undeliverable?(mentioned_account)\n---\napp/workers/mention_resolve_worker.rb\n@@ -16,7 +16,7 @@ def perform(status_id, uri, options = {})\n \n     return if account.nil?\n \n-    status.mentions.create!(account: account, silent: false)\n+    status.mentions.upsert({ account_id: account.id, silent: false }, unique_by: %w(status_id account_id))\n   rescue ActiveRecord::RecordNotFound\n     # Do nothing\n   rescue Mastodon::UnexpectedResponseError => e\n---\napp/workers/scheduler/user_cleanup_scheduler.rb\n@@ -19,6 +19,7 @@ def clean_unconfirmed_accounts!\n     User.unconfirmed.where(confirmation_sent_at: ..UNCONFIRMED_ACCOUNTS_MAX_AGE_DAYS.days.ago).find_in_batches do |batch|\n       # We have to do it separately because of missing database constraints\n       AccountModerationNote.where(target_account_id: batch.map(&:account_id)).delete_all\n+      WebauthnCredential.where(user_id: batch.map(&:id)).delete_all\n       Account.where(id: batch.map(&:account_id)).delete_all\n       User.where(id: batch.map(&:id)).delete_all\n     end\n---\ndb/migrate/20240808124338_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndb/post_migrate/20240808124339_post_deployment_migrate_notifications_policy_v2.rb\n@@ -9,7 +9,7 @@ class NotificationPolicy < ApplicationRecord; end\n   def up\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       for_not_following = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n-      for_not_followers = CASE filter_not_following WHEN true THEN 1 ELSE 0 END,\n+      for_not_followers = CASE filter_not_followers WHEN true THEN 1 ELSE 0 END,\n       for_new_accounts = CASE filter_new_accounts WHEN true THEN 1 ELSE 0 END,\n       for_private_mentions = CASE filter_private_mentions WHEN true THEN 1 ELSE 0 END\n     SQL\n@@ -18,7 +18,7 @@ def up\n   def down\n     NotificationPolicy.in_batches.update_all(<<~SQL.squish)\n       filter_not_following = CASE for_not_following WHEN 0 THEN false ELSE true END,\n-      filter_not_following = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n+      filter_not_followers = CASE for_not_followers WHEN 0 THEN false ELSE true END,\n       filter_new_accounts = CASE for_new_accounts WHEN 0 THEN false ELSE true END,\n       filter_private_mentions = CASE for_private_mentions WHEN 0 THEN false ELSE true END\n     SQL\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.2\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -101,7 +101,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.2\n+    image: ghcr.io/mastodon/mastodon:v4.3.3\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      2\n+      3\n     end\n \n     def default_prerelease\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -143,6 +143,55 @@\n       end\n     end\n \n+    context 'when there are numerous notifications for the same final group' do\n+      before do\n+        user.account.notifications.destroy_all\n+        5.times.each { FavouriteService.new.call(Fabricate(:account), user.account.statuses.first) }\n+      end\n+\n+      context 'with no options' do\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+\n+      context 'with min_id param' do\n+        let(:params) { { min_id: user.account.notifications.reload.first.id - 1 } }\n+\n+        it 'returns a notification group covering all notifications' do\n+          subject\n+\n+          notification_ids = user.account.notifications.reload.pluck(:id)\n+\n+          expect(response).to have_http_status(200)\n+          expect(response.content_type)\n+            .to start_with('application/json')\n+          expect(response.parsed_body[:notification_groups]).to contain_exactly(\n+            a_hash_including(\n+              type: 'favourite',\n+              sample_account_ids: have_attributes(size: 5),\n+              page_min_id: notification_ids.first.to_s,\n+              page_max_id: notification_ids.last.to_s\n+            )\n+          )\n+        end\n+      end\n+    end\n+\n     context 'with no options' do\n       it 'returns expected notification types', :aggregate_failures do\n         subject\n---\nspec/serializers/rest/preview_card_serializer_spec.rb\n@@ -0,0 +1,58 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe REST::PreviewCardSerializer do\n+  subject do\n+    serialized_record_json(\n+      preview_card,\n+      described_class\n+    )\n+  end\n+\n+  context 'when preview card does not have author data' do\n+    let(:preview_card) { Fabricate.build :preview_card }\n+\n+    it 'includes empty authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(be_empty)\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_account: Fabricate(:account) }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                account: be_present\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+\n+  context 'when preview card has non-fediverse author data' do\n+    let(:preview_card) { Fabricate.build :preview_card, author_name: 'Name', author_url: 'https://host.example/123' }\n+\n+    it 'includes populated authors array' do\n+      expect(subject.deep_symbolize_keys)\n+        .to include(\n+          authors: be_an(Array).and(\n+            contain_exactly(\n+              include(\n+                name: 'Name',\n+                url: 'https://host.example/123'\n+              )\n+            )\n+          )\n+        )\n+    end\n+  end\n+end\n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -32,7 +32,7 @@\n   let(:media_attachments) { [] }\n \n   before do\n-    mentions.each { |a| Fabricate(:mention, status: status, account: a) }\n+    mentions.each { |(account, silent)| Fabricate(:mention, status: status, account: account, silent: silent) }\n     tags.each { |t| status.tags << t }\n     media_attachments.each { |m| status.media_attachments << m }\n     stub_request(:get, bogus_mention).to_raise(HTTP::ConnectionError)\n@@ -280,7 +280,19 @@\n     end\n \n     context 'when originally with mentions' do\n-      let(:mentions) { [alice, bob] }\n+      let(:mentions) { [[alice, false], [bob, false]] }\n+\n+      before do\n+        subject.call(status, json, json)\n+      end\n+\n+      it 'updates mentions' do\n+        expect(status.active_mentions.reload.map(&:account_id)).to eq [alice.id]\n+      end\n+    end\n+\n+    context 'when originally with silent mentions' do\n+      let(:mentions) { [[alice, true], [bob, true]] }\n \n       before do\n         subject.call(status, json, json)\n---\nspec/services/update_status_service_spec.rb\n@@ -150,6 +150,14 @@\n         .to eq [bob.id]\n       expect(status.mentions.pluck(:account_id))\n         .to contain_exactly(alice.id, bob.id)\n+\n+      # Going back when a mention was switched to silence should still be possible\n+      subject.call(status, status.account_id, text: 'Hello @alice')\n+\n+      expect(status.active_mentions.pluck(:account_id))\n+        .to eq [alice.id]\n+      expect(status.mentions.pluck(:account_id))\n+        .to contain_exactly(alice.id, bob.id)\n     end\n   end\n \n---\nspec/workers/scheduler/user_cleanup_scheduler_spec.rb\n@@ -9,6 +9,7 @@\n   let!(:old_unconfirmed_user) { Fabricate(:user) }\n   let!(:confirmed_user)       { Fabricate(:user) }\n   let!(:moderation_note)      { Fabricate(:account_moderation_note, account: Fabricate(:account), target_account: old_unconfirmed_user.account) }\n+  let!(:webauthn_credential)  { Fabricate(:webauthn_credential, user_id: old_unconfirmed_user.id) }\n \n   describe '#perform' do\n     before do\n@@ -26,6 +27,8 @@\n         .from(true).to(false)\n       expect { moderation_note.reload }\n         .to raise_error(ActiveRecord::RecordNotFound)\n+      expect { webauthn_credential.reload }\n+        .to raise_error(ActiveRecord::RecordNotFound)\n       expect_preservation_of(new_unconfirmed_user)\n       expect_preservation_of(confirmed_user)\n     end\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -2249,6 +2249,10 @@ a.account__display-name {\n   }\n }\n \n+.notification-follow {\n+  border-bottom: 1px solid var(--background-border-color);\n+}\n+\n .notification-group--link {\n   color: $secondary-text-color;\n   text-decoration: none;\n---\napp/javascript/styles/mastodon/admin.scss\n@@ -872,6 +872,7 @@ a.name-tag,\n \n     .account {\n       padding: 0;\n+      border: none;\n \n       &__avatar-wrapper {\n         margin-inline-start: 0;\n---\napp/javascript/styles/mastodon/components.scss\n@@ -1808,6 +1808,7 @@ body > [data-popper-placement] {\n \n .account {\n   padding: 16px;\n+  border-bottom: 1px solid var(--background-border-color);\n \n   .account__display-name {\n     flex: 1 1 auto;\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/components/status_action_bar.jsx\n@@ -375,20 +375,29 @@ class StatusActionBar extends ImmutablePureComponent {\n \n     return (\n       <div className='status__action-bar'>\n-        <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n-        <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n-        <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n-        <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n-\n-        <DropdownMenuContainer\n-          scrollKey={scrollKey}\n-          status={status}\n-          items={menu}\n-          icon='ellipsis-h'\n-          iconComponent={MoreHorizIcon}\n-          direction='right'\n-          title={intl.formatMessage(messages.more)}\n-        />\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button' title={replyTitle} icon={isReply ? 'reply' : replyIcon} iconComponent={isReply ? ReplyIcon : replyIconComponent} onClick={this.handleReplyClick} counter={status.get('replies_count')} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className={classNames('status__action-bar__button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} counter={withCounters ? status.get('reblogs_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} counter={withCounters ? status.get('favourites_count') : undefined} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <IconButton className='status__action-bar__button bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} />\n+        </div>\n+        <div className='status__action-bar__button-wrapper'>\n+          <DropdownMenuContainer\n+            scrollKey={scrollKey}\n+            status={status}\n+            items={menu}\n+            icon='ellipsis-h'\n+            iconComponent={MoreHorizIcon}\n+            direction='right'\n+            title={intl.formatMessage(messages.more)}\n+          />\n+        </div>\n       </div>\n     );\n   }\n---\napp/javascript/styles/mastodon/components.scss\n@@ -299,6 +299,10 @@\n     }\n   }\n \n+  &--with-counter {\n+    padding-inline-end: 4px;\n+  }\n+\n   &__counter {\n     display: block;\n     width: auto;\n@@ -1465,6 +1469,15 @@ body > [data-popper-placement] {\n     }\n   }\n \n+  &__action-bar__button-wrapper {\n+    flex-basis: 0;\n+    flex-grow: 1;\n+\n+    &:last-child {\n+      flex-grow: 0;\n+    }\n+  }\n+\n   &--first-in-thread {\n     border-top: 1px solid var(--background-border-color);\n   }\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Mastodon rejects multiple rel=self links in webfinger, breaching webfinger spec\n\nIssue Description:\n### Steps to reproduce the problem\r\n\r\n1. implement webfinger endpoint with multiple ``rel: self`` entries in the ``links`` array, but using different ``type``s (example: application/json & application/activity+json)\r\n2. query it using mastodon (for example @aprl@social.lysand.org), see that the user isnt resolved\r\n3. query webfinger yourself, and see that there are multiple rel tags indeed (for example: https://social.lysand.org/.well-known/webfinger?resource=acct:aprl@social.lysand.org )\r\n\r\n### Expected behaviour\r\n\r\nMastodon picks rel=self with type=application/activity+json\r\n\r\n### Actual behaviour\r\n\r\nmastodon shits itself\r\n\r\n### Detailed description\r\n\r\nThis is valid, in spec webfinger, and thus every other fedi server for example akkoma and misskey support such webfinger, but mastodon discards it as invalid for some reason. I did not find the place in code yet but this issue has been around for a long time but never got fixed. Afaik this breaches webfinger spec because the spec never mentions there only being one rel=self tag. it instead should scan for a rel=self & type=application/activity+json tag\r\n\r\n### Mastodon instance\r\n\r\nany\r\n\r\n### Mastodon version\r\n\r\nv4.2.10\r\n\r\n### Technical details\r\n\r\nIf this is happening on your own Mastodon server, please fill out those:\r\n- Ruby version: (from `ruby --version`, eg. v3.1.2)\r\n- Node.js version: (from `node --version`, eg. v18.16.0)\r\n\n\n---\n\nChoice A:\napp/lib/request.rb\n@@ -81,8 +81,11 @@ def initialize(verb, url, **options)\n         max_hops: 3,\n         on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n       },\n+    }.merge(options).merge(\n       socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n-    }.merge(options)\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n---\n.env.production.sample\n@@ -50,7 +50,7 @@ OTP_SECRET=\n # Must be available (and set to same values) for all server processes\n # These are private/secret values, do not share outside hosting environment\n # Use `bin/rails db:encryption:init` to generate fresh secrets\n-# Do not change these secrets once in use, as this would cause data loss and other issues\n+# Do NOT change these secrets once in use, as this would cause data loss and other issues\n # ------------------\n # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=\n # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=\n---\nGemfile.lock\n@@ -266,7 +266,7 @@ GEM\n       faraday (~> 1.0)\n     fast_blank (1.0.1)\n     fastimage (2.3.1)\n-    ffi (1.16.3)\n+    ffi (1.17.1)\n     ffi-compiler (1.3.2)\n       ffi (>= 1.15.5)\n       rake\n@@ -410,7 +410,7 @@ GEM\n     llhttp-ffi (0.5.0)\n       ffi-compiler (~> 1.0)\n       rake (~> 13.0)\n-    logger (1.6.1)\n+    logger (1.6.6)\n     lograge (0.14.0)\n       actionpack (>= 4)\n       activesupport (>= 4)\n@@ -437,7 +437,7 @@ GEM\n       mime-types-data (~> 3.2015)\n     mime-types-data (3.2024.0820)\n     mini_mime (1.1.5)\n-    mini_portile2 (2.8.7)\n+    mini_portile2 (2.8.8)\n     minitest (5.25.1)\n     msgpack (1.7.2)\n     multi_json (1.15.0)\n@@ -447,18 +447,18 @@ GEM\n       uri\n     net-http-persistent (4.0.2)\n       connection_pool (~> 2.2)\n-    net-imap (0.4.15)\n+    net-imap (0.4.19)\n       date\n       net-protocol\n     net-ldap (0.19.0)\n     net-pop (0.1.2)\n       net-protocol\n     net-protocol (0.2.2)\n       timeout\n-    net-smtp (0.5.0)\n+    net-smtp (0.5.1)\n       net-protocol\n     nio4r (2.7.3)\n-    nokogiri (1.16.8)\n+    nokogiri (1.18.3)\n       mini_portile2 (~> 2.8.2)\n       racc (~> 1.4)\n     oj (3.16.6)\n@@ -619,7 +619,7 @@ GEM\n       activesupport (>= 3.0.0)\n     raabro (1.4.0)\n     racc (1.8.1)\n-    rack (2.2.9)\n+    rack (2.2.11)\n     rack-attack (6.7.0)\n       rack (>= 1.0, < 4)\n     rack-cors (2.0.2)\n@@ -770,7 +770,7 @@ GEM\n     ruby-saml (1.17.0)\n       nokogiri (>= 1.13.10)\n       rexml\n-    ruby-vips (2.2.2)\n+    ruby-vips (2.2.3)\n       ffi (~> 1.12)\n       logger\n     ruby2_keywords (0.0.5)\n@@ -842,7 +842,7 @@ GEM\n     test-prof (1.4.2)\n     thor (1.3.2)\n     tilt (2.4.0)\n-    timeout (0.4.1)\n+    timeout (0.4.3)\n     tpm-key_attestation (0.12.1)\n       bindata (~> 2.4)\n       openssl (> 2.0)\n---\napp/controllers/api/v2/notifications_controller.rb\n@@ -46,7 +46,7 @@ def unread_count\n   end\n \n   def show\n-    @notification = current_account.notifications.without_suspended.find_by!(group_key: params[:group_key])\n+    @notification = current_account.notifications.without_suspended.by_group_key(params[:group_key]).take!\n     presenter = GroupedNotificationsPresenter.new(NotificationGroup.from_notifications([@notification]))\n     render json: presenter, serializer: REST::DedupNotificationGroupSerializer\n   end\n@@ -57,7 +57,7 @@ def clear\n   end\n \n   def dismiss\n-    current_account.notifications.where(group_key: params[:group_key]).destroy_all\n+    current_account.notifications.by_group_key(params[:group_key]).destroy_all\n     render_empty\n   end\n \n---\napp/controllers/concerns/signature_verification.rb\n@@ -117,7 +117,7 @@ def signed_headers\n \n   def verify_signature_strength!\n     raise SignatureVerificationError, 'Mastodon requires the Date header or (created) pseudo-header to be signed' unless signed_headers.include?('date') || signed_headers.include?('(created)')\n-    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(Request::REQUEST_TARGET) || signed_headers.include?('digest')\n+    raise SignatureVerificationError, 'Mastodon requires the Digest header or (request-target) pseudo-header to be signed' unless signed_headers.include?(HttpSignatureDraft::REQUEST_TARGET) || signed_headers.include?('digest')\n     raise SignatureVerificationError, 'Mastodon requires the Host header to be signed when doing a GET request' if request.get? && !signed_headers.include?('host')\n     raise SignatureVerificationError, 'Mastodon requires the Digest header to be signed when doing a POST request' if request.post? && !signed_headers.include?('digest')\n   end\n@@ -155,14 +155,14 @@ def verify_signature(actor, signature, compare_signed_string)\n   def build_signed_string(include_query_string: true)\n     signed_headers.map do |signed_header|\n       case signed_header\n-      when Request::REQUEST_TARGET\n+      when HttpSignatureDraft::REQUEST_TARGET\n         if include_query_string\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.original_fullpath}\"\n         else\n           # Current versions of Mastodon incorrectly omit the query string from the (request-target) pseudo-header.\n           # Therefore, temporarily support such incorrect signatures for compatibility.\n           # TODO: remove eventually some time after release of the fixed version\n-          \"#{Request::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n+          \"#{HttpSignatureDraft::REQUEST_TARGET}: #{request.method.downcase} #{request.path}\"\n         end\n       when '(created)'\n         raise SignatureVerificationError, 'Invalid pseudo-header (created) for rsa-sha256' unless signature_algorithm == 'hs2019'\n---\napp/javascript/mastodon/actions/notification_groups.ts\n@@ -141,6 +141,9 @@ export const pollRecentNotifications = createDataLoadingThunk(\n \n     return { notifications };\n   },\n+  {\n+    useLoadingBar: false,\n+  },\n );\n \n export const processNewNotificationForGroups = createAppAsyncThunk(\n@@ -152,7 +155,7 @@ export const processNewNotificationForGroups = createAppAsyncThunk(\n \n     const showInColumn =\n       activeFilter === 'all'\n-        ? notificationShows[notification.type]\n+        ? notificationShows[notification.type] !== false\n         : activeFilter === notification.type;\n \n     if (!showInColumn) return;\n---\napp/javascript/mastodon/components/status.jsx\n@@ -520,7 +520,7 @@ class Status extends ImmutablePureComponent {\n           </Bundle>\n         );\n       }\n-    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n+    } else if (status.get('card')) {\n       media = (\n         <Card\n           onOpenMedia={this.handleOpenMedia}\n---\napp/javascript/mastodon/features/emoji/__tests__/emoji-test.js\n@@ -22,40 +22,40 @@ describe('emoji', () => {\n \n     it('does unicode', () => {\n       expect(emojify('\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66\" title=\":woman-woman-boy-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466-200d-1f466.svg\">');\n       expect(emojify('\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\"></picture>');\n-      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67\" title=\":man-woman-girl-girl:\" src=\"/emoji/1f468-200d-1f469-200d-1f467-200d-1f467.svg\">');\n+      expect(emojify('\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\" title=\":woman-woman-boy:\" src=\"/emoji/1f469-200d-1f469-200d-1f466.svg\">');\n       expect(emojify('\\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n     });\n \n     it('does multiple unicode', () => {\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757#\\uFE0F\\u20E3')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\">');\n       expect(emojify('\\u2757 #\\uFE0F\\u20E3 \\u2757')).toEqual(\n-        '<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture>');\n+        '<img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\">');\n       expect(emojify('foo \\u2757 #\\uFE0F\\u20E3 bar')).toEqual(\n-        'foo <picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"></picture> bar');\n+        'foo <img draggable=\"false\" class=\"emojione\" alt=\"\u2757\" title=\":exclamation:\" src=\"/emoji/2757.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"#\ufe0f\u20e3\" title=\":hash:\" src=\"/emoji/23-20e3.svg\"> bar');\n     });\n \n     it('ignores unicode inside of tags', () => {\n       expect(emojify('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>')).toEqual('<p data-foo=\"\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\"></p>');\n     });\n \n     it('does multiple emoji properly (issue 5188)', () => {\n-      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n-      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"></picture> <picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture>');\n+      expect(emojify('\ud83d\udc4c\ud83c\udf08\ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n+      expect(emojify('\ud83d\udc4c \ud83c\udf08 \ud83d\udc95')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" src=\"/emoji/1f44c.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83c\udf08\" title=\":rainbow:\" src=\"/emoji/1f308.svg\"> <img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\">');\n     });\n \n     it('does an emoji that has no shortcode', () => {\n-      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\"></picture>');\n+      expect(emojify('\ud83d\udc41\u200d\ud83d\udde8')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc41\u200d\ud83d\udde8\" title=\"\" src=\"/emoji/1f441-200d-1f5e8.svg\">');\n     });\n \n     it('does an emoji whose filename is irregular', () => {\n-      expect(emojify('\u2199\ufe0f')).toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\"></picture>');\n+      expect(emojify('\u2199\ufe0f')).toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2199\ufe0f\" title=\":arrow_lower_left:\" src=\"/emoji/2199.svg\">');\n     });\n \n     it('avoid emojifying on invisible text', () => {\n@@ -67,11 +67,11 @@ describe('emoji', () => {\n \n     it('avoid emojifying on invisible text with nested tags', () => {\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"foo\">bar</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<span class=\"invisible\">\ud83d\ude15</span>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n       expect(emojify('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span>\ud83d\ude07'))\n-        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\"></picture>');\n+        .toEqual('<span class=\"invisible\">\ud83d\ude04<br>\ud83d\ude34</span><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\ude07\" title=\":innocent:\" src=\"/emoji/1f607.svg\">');\n     });\n \n     it('does not emojify emojis with textual presentation VS15 character', () => {\n@@ -81,17 +81,17 @@ describe('emoji', () => {\n \n     it('does a simple emoji properly', () => {\n       expect(emojify('\u2640\u2642'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\u2640\" title=\":female_sign:\" src=\"/emoji/2640.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\u2642\" title=\":male_sign:\" src=\"/emoji/2642.svg\">');\n     });\n \n     it('does an emoji containing ZWJ properly', () => {\n       expect(emojify('\ud83d\udc82\u200d\u2640\ufe0f\ud83d\udc82\u200d\u2642\ufe0f'))\n-        .toEqual('<picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"></picture><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\"></picture>');\n+        .toEqual('<img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2640\ufe0f\" title=\":female-guard:\" src=\"/emoji/1f482-200d-2640-fe0f_border.svg\"><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc82\\u200D\u2642\ufe0f\" title=\":male-guard:\" src=\"/emoji/1f482-200d-2642-fe0f_border.svg\">');\n     });\n \n     it('keeps ordering as expected (issue fixed by PR 20677)', () => {\n-      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n-        .toEqual('<p><picture><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"></picture> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n+      expect(emojify('<p>\ud83d\udc95 <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>'))\n+        .toEqual('<p><img draggable=\"false\" class=\"emojione\" alt=\"\ud83d\udc95\" title=\":two_hearts:\" src=\"/emoji/1f495.svg\"> <a class=\"hashtag\" href=\"https://example.com/tags/foo\" rel=\"nofollow noopener\" target=\"_blank\">#<span>foo</span></a> test: foo.</p>');\n     });\n   });\n });\n---\napp/javascript/mastodon/features/emoji/emoji.js\n@@ -97,30 +97,30 @@ const emojifyTextNode = (node, customEmojis) => {\n       const { filename, shortCode } = unicodeMapping[unicode_emoji];\n       const title = shortCode ? `:${shortCode}:` : '';\n \n-      replacement = document.createElement('picture');\n-\n       const isSystemTheme = !!document.body?.classList.contains('theme-system');\n \n-      if(isSystemTheme) {\n-        let source = document.createElement('source');\n-        source.setAttribute('media', '(prefers-color-scheme: dark)');\n-        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, \"dark\")}.svg`);\n-        replacement.appendChild(source);\n-      }\n+      const theme = (isSystemTheme || document.body?.classList.contains('theme-mastodon-light')) ? 'light' : 'dark';\n+\n+      const imageFilename = emojiFilename(filename, theme);\n \n-      let img = document.createElement('img');\n+      const img = document.createElement('img');\n       img.setAttribute('draggable', 'false');\n       img.setAttribute('class', 'emojione');\n       img.setAttribute('alt', unicode_emoji);\n       img.setAttribute('title', title);\n+      img.setAttribute('src', `${assetHost}/emoji/${imageFilename}.svg`);\n \n-      let theme = \"light\";\n+      if (isSystemTheme && imageFilename !== emojiFilename(filename, 'dark')) {\n+        replacement = document.createElement('picture');\n \n-      if(!isSystemTheme && !document.body?.classList.contains('theme-mastodon-light'))\n-        theme = \"dark\";\n-\n-      img.setAttribute('src', `${assetHost}/emoji/${emojiFilename(filename, theme)}.svg`);\n-      replacement.appendChild(img);\n+        const source = document.createElement('source');\n+        source.setAttribute('media', '(prefers-color-scheme: dark)');\n+        source.setAttribute('srcset', `${assetHost}/emoji/${emojiFilename(filename, 'dark')}.svg`);\n+        replacement.appendChild(source);\n+        replacement.appendChild(img);\n+      } else {\n+        replacement = img;\n+      }\n     }\n \n     // Add the processed-up-to-now string and the emoji replacement\n@@ -135,7 +135,7 @@ const emojifyTextNode = (node, customEmojis) => {\n };\n \n const emojifyNode = (node, customEmojis) => {\n-  for (const child of node.childNodes) {\n+  for (const child of Array.from(node.childNodes)) {\n     switch(child.nodeType) {\n     case Node.TEXT_NODE:\n       emojifyTextNode(child, customEmojis);\n---\napp/javascript/styles/mastodon/components.scss\n@@ -7136,6 +7136,8 @@ a.status-card {\n   }\n \n   &--layout-3 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n@@ -7155,6 +7157,8 @@ a.status-card {\n   }\n \n   &--layout-4 {\n+    min-height: calc(64px * 2 + 8px);\n+\n     & > .media-gallery__item:nth-child(1) {\n       border-end-end-radius: 0;\n       border-start-end-radius: 0;\n---\napp/javascript/styles/mastodon/forms.scss\n@@ -668,6 +668,10 @@ code {\n       }\n     }\n   }\n+\n+  .status-card {\n+    contain: unset;\n+  }\n }\n \n .block-icon {\n---\napp/javascript/styles/mastodon/widgets.scss\n@@ -82,6 +82,7 @@\n \n .accounts-table {\n   width: 100%;\n+  table-layout: fixed;\n \n   .account {\n     padding: 0;\n---\napp/lib/activitypub/activity/create.rb\n@@ -53,6 +53,7 @@ def process_status\n     ApplicationRecord.transaction do\n       @status = Status.create!(@params)\n       attach_tags(@status)\n+      attach_mentions(@status)\n     end\n \n     resolve_thread(@status)\n@@ -160,6 +161,15 @@ def attach_tags(status)\n     # not a big deal\n     Trends.tags.register(status)\n \n+    # Update featured tags\n+    return if @tags.empty? || !status.distributable?\n+\n+    @account.featured_tags.where(tag_id: @tags.pluck(:id)).find_each do |featured_tag|\n+      featured_tag.increment(status.created_at)\n+    end\n+  end\n+\n+  def attach_mentions(status)\n     @mentions.each do |mention|\n       mention.status = status\n       mention.save\n---\napp/lib/feed_manager.rb\n@@ -32,26 +32,33 @@ def key(type, id, subtype = nil)\n     \"feed:#{type}:#{id}:#{subtype}\"\n   end\n \n-  # Check if the status should not be added to a feed\n+  # The filter result of the status to a particular feed\n   # @param [Symbol] timeline_type\n   # @param [Status] status\n   # @param [Account|List] receiver\n-  # @return [Boolean]\n-  def filter?(timeline_type, status, receiver)\n+  # @return [void|Symbol] nil, :filter, or :skip_home\n+  def filter(timeline_type, status, receiver)\n     case timeline_type\n     when :home\n-      filter_from_home?(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n+      filter_from_home(status, receiver.id, build_crutches(receiver.id, [status]), :home)\n     when :list\n-      filter_from_list?(status, receiver) || filter_from_home?(status, receiver.account_id, build_crutches(receiver.account_id, [status]), :list)\n+      (filter_from_list?(status, receiver) ? :filter : nil) || filter_from_home(status, receiver.account_id, build_crutches(receiver.account_id, [status], list: receiver), :list)\n     when :mentions\n-      filter_from_mentions?(status, receiver.id)\n+      filter_from_mentions?(status, receiver.id) ? :filter : nil\n     when :tags\n-      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status]))\n-    else\n-      false\n+      filter_from_tags?(status, receiver.id, build_crutches(receiver.id, [status])) ? :filter : nil\n     end\n   end\n \n+  # Check if the status should not be added to a feed\n+  # @param [Symbol] timeline_type\n+  # @param [Status] status\n+  # @param [Account|List] receiver\n+  # @return [Boolean]\n+  def filter?(timeline_type, status, receiver)\n+    !!filter(timeline_type, status, receiver)\n+  end\n+\n   # Add a status to a home feed and send a streaming API update\n   # @param [Account] account\n   # @param [Status] status\n@@ -114,7 +121,7 @@ def merge_into_home(from_account, into_account)\n \n     timeline_key = key(:home, into_account.id)\n     aggregate    = into_account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n@@ -125,7 +132,7 @@ def merge_into_home(from_account, into_account)\n     crutches = build_crutches(into_account.id, statuses)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, into_account.id, crutches)\n+      next if filter_from_home(status, into_account.id, crutches)\n \n       add_to_feed(:home, into_account.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -142,18 +149,18 @@ def merge_into_list(from_account, list)\n \n     timeline_key = key(:list, list.id)\n     aggregate    = list.account.user&.aggregates_reblogs?\n-    query        = from_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n+    query        = from_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(FeedManager::MAX_ITEMS / 4)\n \n     if redis.zcard(timeline_key) >= FeedManager::MAX_ITEMS / 4\n       oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n       query = query.where('id > ?', oldest_home_score)\n     end\n \n     statuses = query.to_a\n-    crutches = build_crutches(list.account_id, statuses)\n+    crutches = build_crutches(list.account_id, statuses, list: list)\n \n     statuses.each do |status|\n-      next if filter_from_home?(status, list.account_id, crutches) || filter_from_list?(status, list)\n+      next if filter_from_home(status, list.account_id, crutches, :list)\n \n       add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n     end\n@@ -265,27 +272,36 @@ def populate_home(account)\n     limit        = FeedManager::MAX_ITEMS / 2\n     aggregate    = account.user&.aggregates_reblogs?\n     timeline_key = key(:home, account.id)\n+    over_limit = false\n \n     account.statuses.limit(limit).each do |status|\n       add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n     end\n \n     account.following.includes(:account_stat).reorder(nil).find_each do |target_account|\n-      if redis.zcard(timeline_key) >= limit\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n         oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n-        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at)\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n \n         # If the feed is full and this account has not posted more recently\n         # than the last item on the feed, then we can skip the whole account\n         # because none of its statuses would stay on the feed anyway\n         next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n       end\n \n-      statuses = target_account.statuses.list_eligible_visibility.includes(:preloadable_poll, :media_attachments, :account, reblog: :account).limit(limit)\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n       crutches = build_crutches(account.id, statuses)\n \n       statuses.each do |status|\n-        next if filter_from_home?(status, account.id, crutches)\n+        next if filter_from_home(status, account.id, crutches)\n \n         add_to_feed(:home, account.id, status, aggregate_reblogs: aggregate)\n       end\n@@ -294,6 +310,47 @@ def populate_home(account)\n     end\n   end\n \n+  # Populate list feed of account from scratch\n+  # @param [List] list\n+  # @return [void]\n+  def populate_list(list)\n+    limit        = FeedManager::MAX_ITEMS / 2\n+    aggregate    = list.account.user&.aggregates_reblogs?\n+    timeline_key = key(:list, list.id)\n+    over_limit = false\n+\n+    list.active_accounts.includes(:account_stat).reorder(nil).find_each do |target_account|\n+      query = target_account.statuses.list_eligible_visibility.includes(reblog: :account).limit(limit)\n+\n+      over_limit ||= redis.zcard(timeline_key) >= limit\n+      if over_limit\n+        oldest_home_score = redis.zrange(timeline_key, 0, 0, with_scores: true).first.last.to_i\n+        last_status_score = Mastodon::Snowflake.id_at(target_account.last_status_at, with_random: false)\n+\n+        # If the feed is full and this account has not posted more recently\n+        # than the last item on the feed, then we can skip the whole account\n+        # because none of its statuses would stay on the feed anyway\n+        next if last_status_score < oldest_home_score\n+\n+        # No need to get older statuses\n+        query = query.where(id: oldest_home_score...)\n+      end\n+\n+      statuses = query.to_a\n+      next if statuses.empty?\n+\n+      crutches = build_crutches(list.account_id, statuses, list: list)\n+\n+      statuses.each do |status|\n+        next if filter_from_home(status, list.account_id, crutches, :list)\n+\n+        add_to_feed(:list, list.id, status, aggregate_reblogs: aggregate)\n+      end\n+\n+      trim(:list, list.id)\n+    end\n+  end\n+\n   # Completely clear multiple feeds at once\n   # @param [Symbol] type\n   # @param [Array<Integer>] ids\n@@ -378,12 +435,12 @@ def blocks_or_mutes?(receiver_id, account_ids, context)\n   # @param [Status] status\n   # @param [Integer] receiver_id\n   # @param [Hash] crutches\n-  # @return [Boolean]\n-  def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n-    return false if receiver_id == status.account_id\n-    return true  if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n-    return true if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n-    return true if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n+  # @return [void|Symbol] nil, :skip_home, or :filter\n+  def filter_from_home(status, receiver_id, crutches, timeline_type = :home)\n+    return            if receiver_id == status.account_id\n+    return :filter    if status.reply? && (status.in_reply_to_id.nil? || status.in_reply_to_account_id.nil?)\n+    return :skip_home if timeline_type != :list && crutches[:exclusive_list_users][status.account_id].present?\n+    return :filter    if crutches[:languages][status.account_id].present? && status.language.present? && !crutches[:languages][status.account_id].include?(status.language)\n \n     check_for_blocks = crutches[:active_mentions][status.id] || []\n     check_for_blocks.push(status.account_id)\n@@ -393,24 +450,22 @@ def filter_from_home?(status, receiver_id, crutches, timeline_type = :home)\n       check_for_blocks.concat(crutches[:active_mentions][status.reblog_of_id] || [])\n     end\n \n-    return true if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n-    return true if crutches[:blocked_by][status.account_id]\n+    return :filter if check_for_blocks.any? { |target_account_id| crutches[:blocking][target_account_id] || crutches[:muting][target_account_id] }\n+    return :filter if crutches[:blocked_by][status.account_id]\n \n     if status.reply? && !status.in_reply_to_account_id.nil?                                                                      # Filter out if it's a reply\n       should_filter   = !crutches[:following][status.in_reply_to_account_id]                                                     # and I'm not following the person it's a reply to\n       should_filter &&= receiver_id != status.in_reply_to_account_id                                                             # and it's not a reply to me\n       should_filter &&= status.account_id != status.in_reply_to_account_id                                                       # and it's not a self-reply\n-\n-      return !!should_filter\n     elsif status.reblog?                                                                                                         # Filter out a reblog\n       should_filter   = crutches[:hiding_reblogs][status.account_id]                                                             # if the reblogger's reblogs are suppressed\n       should_filter ||= crutches[:blocked_by][status.reblog.account_id]                                                          # or if the author of the reblogged status is blocking me\n       should_filter ||= crutches[:domain_blocking][status.reblog.account.domain]                                                 # or the author's domain is blocked\n-\n-      return !!should_filter\n+    else\n+      should_filter = false\n     end\n \n-    false\n+    should_filter ? :filter : nil\n   end\n \n   # Check if status should not be added to the mentions feed\n@@ -555,8 +610,9 @@ def remove_from_feed(timeline_type, account_id, status, aggregate_reblogs: true)\n   # are going to be checked by the filtering methods\n   # @param [Integer] receiver_id\n   # @param [Array<Status>] statuses\n+  # @param [List] list\n   # @return [Hash]\n-  def build_crutches(receiver_id, statuses)\n+  def build_crutches(receiver_id, statuses, list: nil)\n     crutches = {}\n \n     crutches[:active_mentions] = crutches_active_mentions(statuses)\n@@ -573,20 +629,33 @@ def build_crutches(receiver_id, statuses)\n       arr\n     end\n \n-    lists = List.where(account_id: receiver_id, exclusive: true)\n-\n-    crutches[:following]            = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    crutches[:following]            = crutches_following(receiver_id, statuses, list)\n     crutches[:languages]            = Follow.where(account_id: receiver_id, target_account_id: statuses.map(&:account_id)).pluck(:target_account_id, :languages).to_h\n     crutches[:hiding_reblogs]       = Follow.where(account_id: receiver_id, target_account_id: statuses.filter_map { |s| s.account_id if s.reblog? }, show_reblogs: false).pluck(:target_account_id).index_with(true)\n     crutches[:blocking]             = Block.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:muting]               = Mute.where(account_id: receiver_id, target_account_id: check_for_blocks).pluck(:target_account_id).index_with(true)\n     crutches[:domain_blocking]      = AccountDomainBlock.where(account_id: receiver_id, domain: statuses.flat_map { |s| [s.account.domain, s.reblog&.account&.domain] }.compact).pluck(:domain).index_with(true)\n     crutches[:blocked_by]           = Block.where(target_account_id: receiver_id, account_id: statuses.map { |s| [s.account_id, s.reblog&.account_id] }.flatten.compact).pluck(:account_id).index_with(true)\n-    crutches[:exclusive_list_users] = ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+    crutches[:exclusive_list_users] = crutches_exclusive_list_users(receiver_id, statuses) if list.blank?\n \n     crutches\n   end\n \n+  def crutches_exclusive_list_users(recipient_id, statuses)\n+    lists = List.where(account_id: recipient_id, exclusive: true)\n+    ListAccount.where(list: lists, account_id: statuses.map(&:account_id)).pluck(:account_id).index_with(true)\n+  end\n+\n+  def crutches_following(recipient_id, statuses, list)\n+    if list.blank? || list.show_followed?\n+      Follow.where(account_id: recipient_id, target_account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:target_account_id).index_with(true)\n+    elsif list.show_list?\n+      ListAccount.where(list_id: list.id, account_id: statuses.filter_map(&:in_reply_to_account_id)).pluck(:account_id).index_with(true)\n+    else\n+      {}\n+    end\n+  end\n+\n   def crutches_active_mentions(statuses)\n     Mention\n       .active\n---\napp/lib/http_signature_draft.rb\n@@ -0,0 +1,31 @@\n+# frozen_string_literal: true\n+\n+# This implements an older draft of HTTP Signatures:\n+# https://datatracker.ietf.org/doc/html/draft-cavage-http-signatures\n+\n+class HttpSignatureDraft\n+  REQUEST_TARGET = '(request-target)'\n+\n+  def initialize(keypair, key_id, full_path: true)\n+    @keypair = keypair\n+    @key_id = key_id\n+    @full_path = full_path\n+  end\n+\n+  def request_target(verb, url)\n+    if url.query.nil? || !@full_path\n+      \"#{verb} #{url.path}\"\n+    else\n+      \"#{verb} #{url.path}?#{url.query}\"\n+    end\n+  end\n+\n+  def sign(signed_headers, verb, url)\n+    signed_headers = signed_headers.merge(REQUEST_TARGET => request_target(verb, url))\n+    signed_string = signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n+    algorithm = 'rsa-sha256'\n+    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+\n+    \"keyId=\\\"#{@key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n+  end\n+end\n---\napp/lib/request.rb\n@@ -61,8 +61,6 @@ def readpartial(size, buffer = nil)\n end\n \n class Request\n-  REQUEST_TARGET = '(request-target)'\n-\n   # We enforce a 5s timeout on DNS resolving, 5s timeout on socket opening\n   # and 5s timeout on the TLS handshake, meaning the worst case should take\n   # about 15s in total\n@@ -78,11 +76,21 @@ def initialize(verb, url, **options)\n     @http_client = options.delete(:http_client)\n     @allow_local = options.delete(:allow_local)\n     @full_path   = !options.delete(:omit_query_string)\n-    @options     = options.merge(socket_class: use_proxy? || @allow_local ? ProxySocket : Socket)\n-    @options     = @options.merge(timeout_class: PerOperationWithDeadline, timeout_options: TIMEOUT)\n+    @options     = {\n+      follow: {\n+        max_hops: 3,\n+        on_redirect: ->(response, request) { re_sign_on_redirect(response, request) },\n+      },\n+    }.merge(options).merge(\n+      socket_class: use_proxy? || @allow_local ? ProxySocket : Socket,\n+      timeout_class: PerOperationWithDeadline,\n+      timeout_options: TIMEOUT\n+    )\n     @options     = @options.merge(proxy_url) if use_proxy?\n     @headers     = {}\n \n+    @signing = nil\n+\n     raise Mastodon::HostValidationError, 'Instance does not support hidden service connections' if block_hidden_service?\n \n     set_common_headers!\n@@ -92,8 +100,9 @@ def initialize(verb, url, **options)\n   def on_behalf_of(actor, sign_with: nil)\n     raise ArgumentError, 'actor must not be nil' if actor.nil?\n \n-    @actor         = actor\n-    @keypair       = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : @actor.keypair\n+    key_id = ActivityPub::TagManager.instance.key_uri_for(actor)\n+    keypair = sign_with.present? ? OpenSSL::PKey::RSA.new(sign_with) : actor.keypair\n+    @signing = HttpSignatureDraft.new(keypair, key_id, full_path: @full_path)\n \n     self\n   end\n@@ -125,7 +134,7 @@ def perform\n   end\n \n   def headers\n-    (@actor ? @headers.merge('Signature' => signature) : @headers).without(REQUEST_TARGET)\n+    (@signing ? @headers.merge('Signature' => signature) : @headers)\n   end\n \n   class << self\n@@ -140,14 +149,13 @@ def valid_url?(url)\n     end\n \n     def http_client\n-      HTTP.use(:auto_inflate).follow(max_hops: 3)\n+      HTTP.use(:auto_inflate)\n     end\n   end\n \n   private\n \n   def set_common_headers!\n-    @headers[REQUEST_TARGET]    = request_target\n     @headers['User-Agent']      = Mastodon::Version.user_agent\n     @headers['Host']            = @url.host\n     @headers['Date']            = Time.now.utc.httpdate\n@@ -158,31 +166,28 @@ def set_digest!\n     @headers['Digest'] = \"SHA-256=#{Digest::SHA256.base64digest(@options[:body])}\"\n   end\n \n-  def request_target\n-    if @url.query.nil? || !@full_path\n-      \"#{@verb} #{@url.path}\"\n-    else\n-      \"#{@verb} #{@url.path}?#{@url.query}\"\n-    end\n+  def signature\n+    @signing.sign(@headers.without('User-Agent', 'Accept-Encoding'), @verb, @url)\n   end\n \n-  def signature\n-    algorithm = 'rsa-sha256'\n-    signature = Base64.strict_encode64(@keypair.sign(OpenSSL::Digest.new('SHA256'), signed_string))\n+  def re_sign_on_redirect(_response, request)\n+    # Delete existing signature if there is one, since it will be invalid\n+    request.headers.delete('Signature')\n \n-    \"keyId=\\\"#{key_id}\\\",algorithm=\\\"#{algorithm}\\\",headers=\\\"#{signed_headers.keys.join(' ').downcase}\\\",signature=\\\"#{signature}\\\"\"\n-  end\n+    return unless @signing.present? && @verb == :get\n \n-  def signed_string\n-    signed_headers.map { |key, value| \"#{key.downcase}: #{value}\" }.join(\"\\n\")\n-  end\n+    signed_headers = request.headers.to_h.slice(*@headers.keys)\n+    unless @headers.keys.all? { |key| signed_headers.key?(key) }\n+      # We have lost some headers in the process, so don't sign the new\n+      # request, in order to avoid issuing a valid signature with fewer\n+      # conditions than expected.\n \n-  def signed_headers\n-    @headers.without('User-Agent', 'Accept-Encoding')\n-  end\n+      Rails.logger.warn { \"Some headers (#{@headers.keys - signed_headers.keys}) have been lost on redirect from {@uri} to #{request.uri}, this should not happen. Skipping signatures\" }\n+      return\n+    end\n \n-  def key_id\n-    ActivityPub::TagManager.instance.key_uri_for(@actor)\n+    signature_value = @signing.sign(signed_headers.without('User-Agent', 'Accept-Encoding'), @verb, Addressable::URI.parse(request.uri))\n+    request.headers['Signature'] = signature_value\n   end\n \n   def http_client\n---\napp/models/list.rb\n@@ -24,6 +24,7 @@ class List < ApplicationRecord\n \n   has_many :list_accounts, inverse_of: :list, dependent: :destroy\n   has_many :accounts, through: :list_accounts\n+  has_many :active_accounts, -> { merge(ListAccount.active) }, through: :list_accounts, source: :account\n \n   validates :title, presence: true\n \n---\napp/models/list_account.rb\n@@ -20,6 +20,8 @@ class ListAccount < ApplicationRecord\n   validates :account_id, uniqueness: { scope: :list_id }\n   validate :validate_relationship\n \n+  scope :active, -> { where.not(follow_id: nil) }\n+\n   before_validation :set_follow, unless: :list_owner_account_is_account?\n \n   private\n---\napp/models/notification.rb\n@@ -106,6 +106,7 @@ class Notification < ApplicationRecord\n   validates :type, inclusion: { in: TYPES }\n \n   scope :without_suspended, -> { joins(:from_account).merge(Account.without_suspended) }\n+  scope :by_group_key, ->(group_key) { group_key&.start_with?('ungrouped-') ? where(id: group_key.delete_prefix('ungrouped-')) : where(group_key: group_key) }\n \n   def type\n     @type ||= (super || LEGACY_TYPE_CLASS_MAP[activity_type]).to_sym\n---\napp/models/poll.rb\n@@ -37,7 +37,8 @@ class Poll < ApplicationRecord\n \n   validates :options, presence: true\n   validates :expires_at, presence: true, if: :local?\n-  validates_with PollValidator, on: :create, if: :local?\n+  validates_with PollOptionsValidator, if: :local?\n+  validates_with PollExpirationValidator, if: -> { local? && expires_at_changed? }\n \n   scope :attached, -> { where.not(status_id: nil) }\n   scope :unattached, -> { where(status_id: nil) }\n---\napp/models/user_role.rb\n@@ -142,6 +142,10 @@ def overrides?(other_role)\n     other_role.nil? || position > other_role.position\n   end\n \n+  def bypass_block?(role)\n+    overrides?(role) && highlighted? && can?(*Flags::CATEGORIES[:moderation])\n+  end\n+\n   def computed_permissions\n     # If called on the everyone role, no further computation needed\n     return permissions if everyone?\n---\napp/serializers/rest/instance_serializer.rb\n@@ -86,10 +86,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n \n       translation: {\n---\napp/serializers/rest/v1/instance_serializer.rb\n@@ -78,10 +78,10 @@ def configuration\n       },\n \n       polls: {\n-        max_options: PollValidator::MAX_OPTIONS,\n-        max_characters_per_option: PollValidator::MAX_OPTION_CHARS,\n-        min_expiration: PollValidator::MIN_EXPIRATION,\n-        max_expiration: PollValidator::MAX_EXPIRATION,\n+        max_options: PollOptionsValidator::MAX_OPTIONS,\n+        max_characters_per_option: PollOptionsValidator::MAX_OPTION_CHARS,\n+        min_expiration: PollExpirationValidator::MIN_EXPIRATION,\n+        max_expiration: PollExpirationValidator::MAX_EXPIRATION,\n       },\n     }\n   end\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -184,7 +184,26 @@ def update_metadata!\n   end\n \n   def update_tags!\n-    @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+    previous_tags = @status.tags.to_a\n+    current_tags = @status.tags = Tag.find_or_create_by_names(@raw_tags)\n+\n+    return unless @status.distributable?\n+\n+    added_tags = current_tags - previous_tags\n+\n+    unless added_tags.empty?\n+      @account.featured_tags.where(tag_id: added_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.increment(@status.created_at)\n+      end\n+    end\n+\n+    removed_tags = previous_tags - current_tags\n+\n+    unless removed_tags.empty?\n+      @account.featured_tags.where(tag_id: removed_tags.pluck(:id)).find_each do |featured_tag|\n+        featured_tag.decrement(@status)\n+      end\n+    end\n   end\n \n   def update_mentions!\n@@ -206,7 +225,7 @@ def update_mentions!\n       nil\n     end\n \n-    @status.mentions.upsert_all(currently_mentioned_account_ids.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n+    @status.mentions.upsert_all(currently_mentioned_account_ids.uniq.map { |id| { account_id: id, silent: false } }, unique_by: %w(status_id account_id))\n \n     # If previous mentions are no longer contained in the text, convert them\n     # to silent mentions, since withdrawing access from someone who already\n---\napp/services/notify_service.rb\n@@ -32,6 +32,7 @@ def initialize(notification)\n       @sender = notification.from_account\n       @notification = notification\n       @policy = NotificationPolicy.find_or_initialize_by(account: @recipient)\n+      @from_staff = @sender.local? && @sender.user.present? && @sender.user_role&.bypass_block?(@recipient.user_role)\n     end\n \n     private\n@@ -61,6 +62,14 @@ def from_limited?\n       @sender.silenced? && not_following?\n     end\n \n+    def message?\n+      @notification.type == :mention\n+    end\n+\n+    def from_staff?\n+      @from_staff\n+    end\n+\n     def private_mention_not_in_response?\n       @notification.type == :mention && @notification.target_status.direct_visibility? && !response_to_recipient?\n     end\n@@ -127,14 +136,6 @@ def blocked_mention?\n       FeedManager.instance.filter?(:mentions, @notification.target_status, @recipient)\n     end\n \n-    def message?\n-      @notification.type == :mention\n-    end\n-\n-    def from_staff?\n-      @sender.local? && @sender.user.present? && @sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && @sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n-    end\n-\n     def from_self?\n       @recipient.id == @sender.id\n     end\n@@ -172,6 +173,7 @@ class FilterCondition < BaseCondition\n     def filter?\n       return false unless filterable_type?\n       return false if override_for_sender?\n+      return false if message? && from_staff?\n \n       filtered_by_limited_accounts_policy? ||\n         filtered_by_not_following_policy? ||\n---\napp/services/precompute_feed_service.rb\n@@ -5,6 +5,10 @@ class PrecomputeFeedService < BaseService\n \n   def call(account)\n     FeedManager.instance.populate_home(account)\n+\n+    account.owned_lists.each do |list|\n+      FeedManager.instance.populate_list(list)\n+    end\n   ensure\n     redis.del(\"account:#{account.id}:regeneration\")\n   end\n---\napp/validators/poll_expiration_validator.rb\n@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class PollExpirationValidator < ActiveModel::Validator\n+  MAX_EXPIRATION = 1.month.freeze\n+  MIN_EXPIRATION = 5.minutes.freeze\n+\n+  def validate(poll)\n+    current_time = Time.now.utc\n+\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n+    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n+  end\n+end\n---\napp/validators/poll_options_validator.rb\n@@ -1,19 +1,13 @@\n # frozen_string_literal: true\n \n-class PollValidator < ActiveModel::Validator\n+class PollOptionsValidator < ActiveModel::Validator\n   MAX_OPTIONS      = 4\n   MAX_OPTION_CHARS = 50\n-  MAX_EXPIRATION   = 1.month.freeze\n-  MIN_EXPIRATION   = 5.minutes.freeze\n \n   def validate(poll)\n-    current_time = Time.now.utc\n-\n     poll.errors.add(:options, I18n.t('polls.errors.too_few_options')) unless poll.options.size > 1\n     poll.errors.add(:options, I18n.t('polls.errors.too_many_options', max: MAX_OPTIONS)) if poll.options.size > MAX_OPTIONS\n     poll.errors.add(:options, I18n.t('polls.errors.over_character_limit', max: MAX_OPTION_CHARS)) if poll.options.any? { |option| option.mb_chars.grapheme_length > MAX_OPTION_CHARS }\n     poll.errors.add(:options, I18n.t('polls.errors.duplicate_options')) unless poll.options.uniq.size == poll.options.size\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_long')) if poll.expires_at.nil? || poll.expires_at - current_time > MAX_EXPIRATION\n-    poll.errors.add(:expires_at, I18n.t('polls.errors.duration_too_short')) if poll.expires_at.present? && (poll.expires_at - current_time).ceil < MIN_EXPIRATION\n   end\n end\n---\napp/workers/feed_insert_worker.rb\n@@ -29,27 +29,31 @@ def perform(status_id, id, type = 'home', options = {})\n   private\n \n   def check_and_insert\n-    if feed_filtered?\n+    filter_result = feed_filter\n+\n+    if filter_result\n       perform_unpush if update?\n     else\n       perform_push\n-      perform_notify if notify?\n     end\n+\n+    perform_notify if notify?(filter_result)\n   end\n \n-  def feed_filtered?\n+  def feed_filter\n     case @type\n     when :home\n-      FeedManager.instance.filter?(:home, @status, @follower)\n+      FeedManager.instance.filter(:home, @status, @follower)\n     when :tags\n-      FeedManager.instance.filter?(:tags, @status, @follower)\n+      FeedManager.instance.filter(:tags, @status, @follower)\n     when :list\n-      FeedManager.instance.filter?(:list, @status, @list)\n+      FeedManager.instance.filter(:list, @status, @list)\n     end\n   end\n \n-  def notify?\n-    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id)\n+  def notify?(filter_result)\n+    return false if @type != :home || @status.reblog? || (@status.reply? && @status.in_reply_to_account_id != @status.account_id) ||\n+                    filter_result == :filter\n \n     Follow.find_by(account: @follower, target_account: @status.account)&.notify?\n   end\n---\nlib/tasks/db.rake\n@@ -11,16 +11,35 @@ namespace :db do\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY\n-      ).any? { |key| ENV.key?(key) }\n+      ).any? { |key| ENV[key].present? }\n+        unless ENV['IGNORE_ALREADY_SET_SECRETS'] == 'true'\n+          puts <<~MSG\n+            Secrets for this server have already been set, this step can likely be ignored!\n+            In the unlikely event you need to generate new secrets, re-run this command with `IGNORE_ALREADY_SET_SECRETS=true`.\n+          MSG\n+\n+          next\n+        end\n+\n         pastel = Pastel.new\n         puts pastel.red(<<~MSG)\n-          WARNING: It looks like encryption secrets have already been set. Please ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: It looks like encryption secrets have already been set.\n+          WARNING: Ensure you are not changing secrets for a Mastodon installation that already uses them, as this will cause data loss and other issues that are difficult to recover from.\n+          WARNING: Only proceed if you are absolutely sure of what you are doing!\n+        MSG\n+\n+        puts <<~MSG\n+          If you are sure of what you are doing, add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n+        MSG\n+      else\n+        puts <<~MSG\n+          Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n         MSG\n       end\n \n       puts <<~MSG\n-        Add the following secret environment variables to your Mastodon environment (e.g. .env.production), ensure they are shared across all your nodes and do not change them after they are set:#{' '}\n \n+        # Do NOT change these variables once they are set\n         ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=#{SecureRandom.alphanumeric(32)}\n         ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=#{SecureRandom.alphanumeric(32)}\n---\nlib/tasks/mastodon.rake\n@@ -8,16 +8,16 @@ namespace :mastodon do\n     prompt = TTY::Prompt.new\n     env    = {}\n \n-    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n-    # This happens before application environment configuration and sets REDIS_URL etc.\n-    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n-    # out so they don't interfere with our new configuration.\n-    ENV.delete('REDIS_URL')\n-    ENV.delete('CACHE_REDIS_URL')\n-    ENV.delete('SIDEKIQ_REDIS_URL')\n+    if ENV['LOCAL_DOMAIN']\n+      prompt.warn \"It looks like you already configured Mastodon for domain '#{ENV['LOCAL_DOMAIN']}'.\"\n+      prompt.warn 'Never re-run this task on an already-configured running server.'\n+      next prompt.warn 'Nothing saved. Bye!' if prompt.no?('Continue anyway?')\n+    end\n+\n+    clear_environment!\n \n     begin\n-      errors = false\n+      errors = []\n \n       prompt.say('Your instance is identified by its domain name. Changing it afterward will break things.')\n       env['LOCAL_DOMAIN'] = prompt.ask('Domain name:') do |q|\n@@ -109,7 +109,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Database connection could not be established.'\n             break\n           end\n         end\n@@ -155,7 +155,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'Redis connection could not be established.'\n             break\n           end\n         end\n@@ -450,7 +450,7 @@ namespace :mastodon do\n           unless prompt.yes?('Try again?')\n             return prompt.warn 'Nothing saved. Bye!' unless prompt.yes?('Continue anyway?')\n \n-            errors = true\n+            errors << 'E-email was not sent successfully.'\n             break\n           end\n         end\n@@ -498,7 +498,7 @@ namespace :mastodon do\n             prompt.ok 'Done!'\n           else\n             prompt.error 'That failed! Perhaps your configuration is not right'\n-            errors = true\n+            errors << 'Preparing the database failed'\n           end\n         end\n \n@@ -515,14 +515,15 @@ namespace :mastodon do\n               prompt.say 'Done!'\n             else\n               prompt.error 'That failed! Maybe you need swap space?'\n-              errors = true\n+              errors << 'Compiling assets failed.'\n             end\n           end\n         end\n \n         prompt.say \"\\n\"\n-        if errors\n-          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them.'\n+        if errors.any?\n+          prompt.warn 'Your Mastodon server is set up, but there were some errors along the way, you may have to fix them:'\n+          errors.each { |error| prompt.warn \"- #{error}\" }\n         else\n           prompt.ok 'All done! You can now power on the Mastodon server \ud83d\udc18'\n         end\n@@ -579,6 +580,17 @@ namespace :mastodon do\n \n   private\n \n+  def clear_environment!\n+    # When the application code gets loaded, it runs `lib/mastodon/redis_configuration.rb`.\n+    # This happens before application environment configuration and sets REDIS_URL etc.\n+    # These variables are then used even when REDIS_HOST etc. are changed, so clear them\n+    # out so they don't interfere with our new configuration.\n+\n+    ENV.delete('REDIS_URL')\n+    ENV.delete('CACHE_REDIS_URL')\n+    ENV.delete('SIDEKIQ_REDIS_URL')\n+  end\n+\n   def generate_header(include_warning)\n     default_message = \"# Generated with mastodon:setup on #{Time.now.utc}\\n\\n\"\n \n---\nspec/lib/activitypub/activity/create_spec.rb\n@@ -37,10 +37,16 @@\n         content: '@bob lorem ipsum',\n         published: 1.hour.ago.utc.iso8601,\n         updated: 1.hour.ago.utc.iso8601,\n-        tag: {\n-          type: 'Mention',\n-          href: ActivityPub::TagManager.instance.uri_for(follower),\n-        },\n+        tag: [\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+          {\n+            type: 'Mention',\n+            href: ActivityPub::TagManager.instance.uri_for(follower),\n+          },\n+        ],\n       }\n     end\n \n@@ -160,10 +166,6 @@ def activity_for_object(json)\n     context 'when fetching' do\n       subject { described_class.new(json, sender) }\n \n-      before do\n-        subject.perform\n-      end\n-\n       context 'when object publication date is below ISO8601 range' do\n         let(:object_json) do\n           {\n@@ -175,6 +177,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -195,6 +199,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with a valid creation date', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -216,6 +222,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with appropriate creation and edition dates', :aggregate_failures do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -239,17 +247,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n-          status = sender.statuses.first\n-\n-          expect(status).to_not be_nil\n-          expect(status.text).to eq 'Lorem ipsum'\n-        end\n+        it 'creates status and does not mark it as edited' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n \n-        it 'does not mark status as edited' do\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n+          expect(status.text).to eq 'Lorem ipsum'\n           expect(status.edited?).to be false\n         end\n       end\n@@ -264,7 +268,7 @@ def activity_for_object(json)\n         end\n \n         it 'does not create a status' do\n-          expect(sender.statuses.count).to be_zero\n+          expect { subject.perform }.to_not change(sender.statuses, :count)\n         end\n       end\n \n@@ -278,13 +282,17 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.text).to eq 'Lorem ipsum'\n         end\n \n         it 'missing to/cc defaults to direct privacy' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -303,6 +311,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -321,6 +331,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -339,6 +351,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -357,6 +371,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -375,6 +391,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -393,6 +411,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -411,6 +431,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -433,6 +455,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -452,15 +476,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a silent mention' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n           expect(status.visibility).to eq 'limited'\n-        end\n-\n-        it 'creates silent mention' do\n-          status = sender.statuses.first\n           expect(status.mentions.first).to be_silent\n         end\n       end\n@@ -482,6 +504,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -502,6 +526,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -530,6 +556,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -552,6 +580,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -579,6 +609,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status with correctly-ordered media attachments' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -605,6 +637,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -630,6 +664,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -655,6 +691,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -678,6 +716,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -700,6 +740,42 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n+          status = sender.statuses.first\n+\n+          expect(status).to_not be_nil\n+          expect(status.tags.map(&:name)).to include('test')\n+        end\n+      end\n+\n+      context 'with featured hashtags' do\n+        let(:object_json) do\n+          {\n+            id: [ActivityPub::TagManager.instance.uri_for(sender), '#bar'].join,\n+            type: 'Note',\n+            content: 'Lorem ipsum',\n+            to: 'https://www.w3.org/ns/activitystreams#Public',\n+            tag: [\n+              {\n+                type: 'Hashtag',\n+                href: 'http://example.com/blah',\n+                name: '#test',\n+              },\n+            ],\n+          }\n+        end\n+\n+        before do\n+          sender.featured_tags.create!(name: 'test')\n+        end\n+\n+        it 'creates status and updates featured tag' do\n+          expect { subject.perform }\n+            .to change(sender.statuses, :count).by(1)\n+            .and change { sender.featured_tags.first.reload.statuses_count }.by(1)\n+            .and change { sender.featured_tags.first.reload.last_status_at }.from(nil).to(be_present)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -723,6 +799,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -745,6 +823,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -769,6 +849,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -795,6 +877,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n \n           expect(status).to_not be_nil\n@@ -820,6 +904,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -841,6 +927,8 @@ def activity_for_object(json)\n         end\n \n         it 'creates status' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n         end\n@@ -871,13 +959,13 @@ def activity_for_object(json)\n           }\n         end\n \n-        it 'creates status' do\n+        it 'creates status with a poll' do\n+          expect { subject.perform }.to change(sender.statuses, :count).by(1)\n+\n           status = sender.statuses.first\n           expect(status).to_not be_nil\n           expect(status.poll).to_not be_nil\n-        end\n \n-        it 'creates a poll' do\n           poll = sender.polls.first\n           expect(poll).to_not be_nil\n           expect(poll.status).to_not be_nil\n@@ -900,6 +988,8 @@ def activity_for_object(json)\n         end\n \n         it 'adds a vote to the poll with correct uri' do\n+          expect { subject.perform }.to change(poll.votes, :count).by(1)\n+\n           vote = poll.votes.first\n           expect(vote).to_not be_nil\n           expect(vote.uri).to eq object_json[:id]\n@@ -925,6 +1015,8 @@ def activity_for_object(json)\n         end\n \n         it 'does not add a vote to the poll' do\n+          expect { subject.perform }.to_not change(poll.votes, :count)\n+\n           expect(poll.votes.first).to be_nil\n         end\n       end\n---\nspec/lib/activitypub/linked_data_signature_spec.rb\n@@ -13,10 +13,13 @@\n     {\n       '@context' => 'https://www.w3.org/ns/activitystreams',\n       'id' => 'http://example.com/hello-world',\n+      'type' => 'Note',\n+      'content' => 'Hello world',\n     }\n   end\n \n-  let(:json) { raw_json.merge('signature' => signature) }\n+  let(:signed_json) { raw_json.merge('signature' => signature) }\n+  let(:json) { signed_json }\n \n   describe '#verify_actor!' do\n     context 'when signature matches' do\n@@ -90,6 +93,54 @@\n         expect(subject.verify_actor!).to be_nil\n       end\n     end\n+\n+    context 'when an attribute has been removed from the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.without('content') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an attribute has been added to the document' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('attributedTo' => 'http://example.com/bob') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n+\n+    context 'when an existing attribute has been changed' do\n+      let(:signature) { raw_signature.merge('type' => 'RsaSignature2017', 'signatureValue' => sign(sender, raw_signature, raw_json)) }\n+      let(:json) { signed_json.merge('content' => 'oops') }\n+\n+      let(:raw_signature) do\n+        {\n+          'creator' => 'http://example.com/alice',\n+          'created' => '2017-09-23T20:21:34Z',\n+        }\n+      end\n+\n+      it 'returns nil' do\n+        expect(subject.verify_actor!).to be_nil\n+      end\n+    end\n   end\n \n   describe '#sign!' do\n---\nspec/lib/feed_manager_spec.rb\n@@ -162,6 +162,7 @@\n         allow(List).to receive(:where).and_return(list)\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         expect(described_class.instance.filter?(:home, status, alice)).to be true\n+        expect(described_class.instance.filter(:home, status, alice)).to be :skip_home\n       end\n \n       it 'returns true for reblog from followee on exclusive list' do\n@@ -172,6 +173,7 @@\n         status = Fabricate(:status, text: 'I post a lot', account: bob)\n         reblog = Fabricate(:status, reblog: status, account: jeff)\n         expect(described_class.instance.filter?(:home, reblog, alice)).to be true\n+        expect(described_class.instance.filter(:home, reblog, alice)).to be :skip_home\n       end\n \n       it 'returns false for post from followee on non-exclusive list' do\n@@ -192,6 +194,28 @@\n       end\n     end\n \n+    context 'with list feed' do\n+      let(:list) { Fabricate(:list, account: bob) }\n+\n+      before do\n+        bob.follow!(alice)\n+        list.list_accounts.create!(account: alice)\n+      end\n+\n+      it \"returns false for followee's status\" do\n+        status = Fabricate(:status, text: 'Hello world', account: alice)\n+\n+        expect(described_class.instance.filter?(:list, status, list)).to be false\n+      end\n+\n+      it 'returns false for reblog by followee' do\n+        status = Fabricate(:status, text: 'Hello world', account: jeff)\n+        reblog = Fabricate(:status, reblog: status, account: alice)\n+\n+        expect(described_class.instance.filter?(:list, reblog, list)).to be false\n+      end\n+    end\n+\n     context 'with mentions feed' do\n       it 'returns true for status that mentions blocked account' do\n         bob.block!(jeff)\n---\nspec/lib/request_spec.rb\n@@ -58,16 +58,12 @@\n         expect(a_request(:get, 'http://example.com')).to have_been_made.once\n       end\n \n-      it 'sets headers' do\n-        expect { |block| subject.perform(&block) }.to yield_control\n-        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n-      end\n-\n-      it 'closes underlying connection' do\n+      it 'makes a request with expected headers, yields, and closes the underlying connection' do\n         allow(subject.send(:http_client)).to receive(:close)\n \n         expect { |block| subject.perform(&block) }.to yield_control\n \n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made\n         expect(subject.send(:http_client)).to have_received(:close)\n       end\n \n@@ -78,6 +74,29 @@\n       end\n     end\n \n+    context 'with a redirect and HTTP signatures' do\n+      let(:account) { Fabricate(:account) }\n+\n+      before do\n+        stub_request(:get, 'http://example.com').to_return(status: 301, headers: { Location: 'http://redirected.example.com/foo' })\n+        stub_request(:get, 'http://redirected.example.com/foo').to_return(body: 'lorem ipsum')\n+      end\n+\n+      it 'makes a request with expected headers and follows redirects' do\n+        expect { |block| subject.on_behalf_of(account).perform(&block) }.to yield_control\n+\n+        # request.headers includes the `Signature` sent for the first request\n+        expect(a_request(:get, 'http://example.com').with(headers: subject.headers)).to have_been_made.once\n+\n+        # request.headers includes the `Signature`, but it has changed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.merge({ 'Host' => 'redirected.example.com' }))).to_not have_been_made\n+\n+        # `with(headers: )` matching tests for inclusion, so strip `Signature`\n+        # This doesn't actually test that there is a signature, but it tests that the original signature is not passed\n+        expect(a_request(:get, 'http://redirected.example.com/foo').with(headers: subject.headers.without('Signature').merge({ 'Host' => 'redirected.example.com' }))).to have_been_made.once\n+      end\n+    end\n+\n     context 'with private host' do\n       around do |example|\n         WebMock.disable!\n---\nspec/requests/api/v2/instance_spec.rb\n@@ -56,7 +56,7 @@ def include_configuration_limits\n             max_media_attachments: Status::MEDIA_ATTACHMENTS_LIMIT\n           ),\n           polls: include(\n-            max_options: PollValidator::MAX_OPTIONS\n+            max_options: PollOptionsValidator::MAX_OPTIONS\n           )\n         )\n       )\n---\nspec/requests/api/v2/notifications_spec.rb\n@@ -153,7 +153,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -175,7 +175,7 @@\n         it 'returns a notification group covering all notifications' do\n           subject\n \n-          notification_ids = user.account.notifications.reload.pluck(:id)\n+          notification_ids = user.account.notifications.order(id: :asc).pluck(:id)\n \n           expect(response).to have_http_status(200)\n           expect(response.content_type)\n@@ -365,6 +365,18 @@ def body_json_types\n         .to start_with('application/json')\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'returns http success' do\n+        get \"/api/v2/notifications/ungrouped-#{notification.id}\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n@@ -396,6 +408,19 @@ def body_json_types\n       expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n     end\n \n+    context 'with an ungrouped notification' do\n+      let(:notification) { Fabricate(:notification, account: user.account, type: :favourite) }\n+\n+      it 'destroys the notification' do\n+        post \"/api/v2/notifications/ungrouped-#{notification.id}/dismiss\", headers: headers\n+\n+        expect(response).to have_http_status(200)\n+        expect(response.content_type)\n+          .to start_with('application/json')\n+        expect { notification.reload }.to raise_error(ActiveRecord::RecordNotFound)\n+      end\n+    end\n+\n     context 'when notification belongs to someone else' do\n       let(:notification) { Fabricate(:notification, group_key: 'foobar') }\n \n---\nspec/services/activitypub/process_status_update_service_spec.rb\n@@ -18,6 +18,7 @@\n       tag: [\n         { type: 'Hashtag', name: 'hoge' },\n         { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n+        { type: 'Mention', href: ActivityPub::TagManager.instance.uri_for(alice) },\n         { type: 'Mention', href: bogus_mention },\n       ],\n     }\n@@ -256,16 +257,22 @@\n           updated: '2021-09-08T22:39:25Z',\n           tag: [\n             { type: 'Hashtag', name: 'foo' },\n+            { type: 'Hashtag', name: 'bar' },\n           ],\n         }\n       end\n \n       before do\n-        subject.call(status, json, json)\n+        status.account.featured_tags.create!(name: 'bar')\n+        status.account.featured_tags.create!(name: 'test')\n       end\n \n-      it 'updates tags' do\n-        expect(status.tags.reload.map(&:name)).to eq %w(foo)\n+      it 'updates tags and featured tags' do\n+        expect { subject.call(status, json, json) }\n+          .to change { status.tags.reload.pluck(:name) }.from(%w(test foo)).to(%w(foo bar))\n+          .and change { status.account.featured_tags.find_by(name: 'test').statuses_count }.by(-1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').statuses_count }.by(1)\n+          .and change { status.account.featured_tags.find_by(name: 'bar').last_status_at }.from(nil).to(be_present)\n       end\n     end\n \n---\nspec/services/notify_service_spec.rb\n@@ -319,6 +319,16 @@\n           end\n         end\n \n+        context 'when sender is a moderator' do\n+          let(:sender_role) { Fabricate(:user_role, highlighted: true, permissions: UserRole::FLAGS[:manage_users]) }\n+          let(:sender) { Fabricate(:user, role: sender_role).account }\n+          let(:activity) { Fabricate(:mention, status: Fabricate(:status, account: sender)) }\n+\n+          it 'returns false' do\n+            expect(subject.filter?).to be false\n+          end\n+        end\n+\n         context 'when sender is followed by recipient' do\n           before do\n             notification.account.follow!(notification.from_account)\n---\nspec/services/precompute_feed_service_spec.rb\n@@ -7,31 +7,69 @@\n \n   describe 'call' do\n     let(:account) { Fabricate(:account) }\n+    let!(:list) { Fabricate(:list, account: account, exclusive: false) }\n \n-    it 'fills a user timeline with statuses' do\n-      account = Fabricate(:account)\n-      status = Fabricate(:status, account: account)\n+    context 'when no eligible status exist' do\n+      it 'raises no error and results in an empty timeline' do\n+        expect { subject.call(account) }.to_not raise_error\n \n-      subject.call(account)\n-\n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), status.id)).to be_within(0.1).of(status.id.to_f)\n+        expect(redis.zcard(FeedManager.instance.key(:home, account.id))).to eq(0)\n+      end\n     end\n \n-    it 'does not raise an error even if it could not find any status' do\n-      account = Fabricate(:account)\n-      expect { subject.call(account) }.to_not raise_error\n-    end\n+    context 'with eligible statuses' do\n+      let(:muted_account) { Fabricate(:account) }\n+      let!(:followed_account) { Fabricate(:account) }\n+      let!(:requested_account) { Fabricate(:account) }\n+      let!(:own_status) { Fabricate(:status, account: account) }\n+      let!(:followed_status) { Fabricate(:status, account: followed_account) }\n+      let!(:unreadable_dm_from_followed) { Fabricate(:status, account: followed_account, visibility: :direct) }\n+      let!(:requested_status) { Fabricate(:status, account: requested_account) }\n+      let!(:muted_status) { Fabricate(:status, account: muted_account) }\n+      let!(:muted_reblog) { Fabricate(:status, account: followed_account, reblog: muted_status) }\n+      let!(:known_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: own_status.id) }\n+      let!(:unknown_reply) { Fabricate(:status, account: followed_account, in_reply_to_id: requested_status.id) }\n+\n+      before do\n+        account.follow!(followed_account)\n+        account.request_follow!(requested_account)\n+        account.mute!(muted_account)\n+\n+        list.accounts << followed_account\n+      end\n+\n+      it \"fills a user's home and list timelines with the expected posts\" do\n+        subject.call(account)\n+\n+        home_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:home, account.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+        list_timeline_ids = redis.zrevrangebyscore(FeedManager.instance.key(:list, list.id), '(+inf', '(-inf', limit: [0, 30], with_scores: true).map { |id| id.first.to_i }\n+\n+        expect(home_timeline_ids).to include(\n+          own_status.id,\n+          followed_status.id,\n+          known_reply.id\n+        )\n \n-    it 'filters statuses' do\n-      account = Fabricate(:account)\n-      muted_account = Fabricate(:account)\n-      Fabricate(:mute, account: account, target_account: muted_account)\n-      reblog = Fabricate(:status, account: muted_account)\n-      Fabricate(:status, account: account, reblog: reblog)\n+        expect(list_timeline_ids).to include(\n+          followed_status.id\n+        )\n \n-      subject.call(account)\n+        expect(home_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n \n-      expect(redis.zscore(FeedManager.instance.key(:home, account.id), reblog.id)).to be_nil\n+        expect(list_timeline_ids).to_not include(\n+          requested_status.id,\n+          unknown_reply.id,\n+          unreadable_dm_from_followed.id,\n+          muted_status.id,\n+          muted_reblog.id\n+        )\n+      end\n     end\n   end\n end\n---\nspec/validators/poll_expiration_validator_spec.rb\n@@ -2,7 +2,7 @@\n \n require 'rails_helper'\n \n-RSpec.describe PollValidator do\n+RSpec.describe PollExpirationValidator do\n   describe '#validate' do\n     before do\n       validator.validate(poll)\n@@ -14,16 +14,24 @@\n     let(:options) { %w(foo bar) }\n     let(:expires_at) { 1.day.from_now }\n \n-    it 'have no errors' do\n+    it 'has no errors' do\n       expect(errors).to_not have_received(:add)\n     end\n \n-    context 'when expires is just 5 min ago' do\n+    context 'when the poll expires in 5 min from now' do\n       let(:expires_at) { 5.minutes.from_now }\n \n-      it 'not calls errors add' do\n+      it 'has no errors' do\n         expect(errors).to_not have_received(:add)\n       end\n     end\n+\n+    context 'when the poll expires in the past' do\n+      let(:expires_at) { 5.minutes.ago }\n+\n+      it 'has errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n   end\n end\n---\nspec/validators/poll_options_validator_spec.rb\n@@ -0,0 +1,45 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe PollOptionsValidator do\n+  describe '#validate' do\n+    before do\n+      validator.validate(poll)\n+    end\n+\n+    let(:validator) { described_class.new }\n+    let(:poll) { instance_double(Poll, options: options, expires_at: expires_at, errors: errors) }\n+    let(:errors) { instance_double(ActiveModel::Errors, add: nil) }\n+    let(:options) { %w(foo bar) }\n+    let(:expires_at) { 1.day.from_now }\n+\n+    it 'has no errors' do\n+      expect(errors).to_not have_received(:add)\n+    end\n+\n+    context 'when the poll has duplicate options' do\n+      let(:options) { %w(foo foo) }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has no options' do\n+      let(:options) { [] }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+\n+    context 'when the poll has too many options' do\n+      let(:options) { Array.new(described_class::MAX_OPTIONS + 1) { |i| \"option #{i}\" } }\n+\n+      it 'adds errors' do\n+        expect(errors).to have_received(:add)\n+      end\n+    end\n+  end\n+end\n---\nspec/workers/feed_insert_worker_spec.rb\n@@ -32,7 +32,7 @@\n \n     context 'when there are real records' do\n       it 'skips the push when there is a filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: true)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: true, filter: :filter)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id)\n \n@@ -41,7 +41,7 @@\n       end\n \n       it 'pushes the status onto the home timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :home)\n \n@@ -50,7 +50,7 @@\n       end\n \n       it 'pushes the status onto the tags timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_home: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_home: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, follower.id, :tags)\n \n@@ -59,7 +59,7 @@\n       end\n \n       it 'pushes the status onto the list timeline without filter' do\n-        instance = instance_double(FeedManager, push_to_list: nil, filter?: false)\n+        instance = instance_double(FeedManager, push_to_list: nil, filter?: false, filter: nil)\n         allow(FeedManager).to receive(:instance).and_return(instance)\n         result = subject.perform(status.id, list.id, :list)\n \n---\n\n\n---\n\nChoice B:\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json.fetch('links', []).index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/resolve_account_service.rb\n@@ -106,8 +106,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -122,12 +120,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -33,7 +33,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -51,7 +51,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -72,7 +72,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -95,7 +95,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -111,7 +111,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -33,7 +33,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -51,7 +51,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -72,7 +72,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -95,7 +95,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -111,7 +111,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -215,7 +215,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\n\n\n---\n\nChoice C:\napp/javascript/styles/mastodon/components.scss\n@@ -6437,7 +6437,7 @@ a.status-card {\n   }\n \n   .dialog-option .poll__input {\n-    border-color: $inverted-text-color;\n+    border-color: $darker-text-color;\n     color: $ui-secondary-color;\n     display: inline-flex;\n     align-items: center;\n@@ -6451,13 +6451,13 @@ a.status-card {\n     &:active,\n     &:focus,\n     &:hover {\n-      border-color: lighten($inverted-text-color, 15%);\n+      border-color: $valid-value-color;\n       border-width: 4px;\n     }\n \n     &.active {\n-      border-color: $inverted-text-color;\n-      background: $inverted-text-color;\n+      border-color: $valid-value-color;\n+      background: $valid-value-color;\n     }\n   }\n \n---\n\n\n---\n\nChoice D:\napp/javascript/styles/mastodon/rtl.scss\n@@ -35,6 +35,10 @@ body.rtl {\n     direction: rtl;\n   }\n \n+  .column-back-button__icon {\n+    transform: scale(-1, 1);\n+  }\n+\n   .simple_form select {\n     background: $ui-base-color\n       url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 14.933 18.467' height='19.698' width='15.929'><path d='M3.467 14.967l-3.393-3.5H14.86l-3.392 3.5c-1.866 1.925-3.666 3.5-4 3.5-.335 0-2.135-1.575-4-3.5zm.266-11.234L7.467 0 11.2 3.733l3.733 3.734H0l3.733-3.734z' fill='#{hex-color(lighten($ui-base-color, 12%))}'/></svg>\")\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Mentioned handles are rendered as plaintext without link if the sharp s ('\u00df') character appears in the previous word\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Write a post with the following content and send it\r\n\r\n`Gem\u00e4\u00df @Gargron@mastodon.social`\n\n### Expected behaviour\n\nThe handle is rendered with a link to the profile: Gem\u00e4\u00df @Gargron\n\n### Actual behaviour\n\nThe handle is rendered as plaintext: Gem\u00e4\u00df @Gargron@mastodon.social\n\n### Detailed description\n\nApparently when a handle is mentioned after a \"\u00df\" (sharp s) character it is always rendered as plaintext.\r\n\r\nPlease find the following post where it was first observed:\r\nhttps://nrw.social/@melsdung/112784007422571926\r\n\r\nThe issue could also be reproduced with the 3rd party app \"Tusky\" using mastodon.online.\n\n### Mastodon instance\n\nmastodon.online and nrw.social\n\n### Mastodon version\n\nv4.2.10 (nrw.social) and v4.3.0-nightly.2024-07-11 (mastodon.online)\n\n### Technical details\n\nIf this is happening on your own Mastodon server, please fill out those:\r\n- Ruby version: (from `ruby --version`, eg. v3.1.2)\r\n- Node.js version: (from `node --version`, eg. v18.16.0)\r\n\n\n---\n\nChoice A:\napp/models/account.rb\n@@ -68,7 +68,7 @@ class Account < ApplicationRecord\n   INSTANCE_ACTOR_ID = -99\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n   USERNAME_LENGTH_LIMIT = 30\n---\napp/models/tag.rb\n@@ -37,7 +37,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]\\u0E47-\\u0E4E#{HASHTAG_SEPARATORS}]/\n \n---\nspec/models/account_spec.rb\n@@ -711,6 +711,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/tag_spec.rb\n@@ -95,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\n\n\n---\n\nChoice B:\napp/models/user_role.rb\n@@ -41,7 +41,7 @@ class UserRole < ApplicationRecord\n   EVERYONE_ROLE_ID = -99\n   NOBODY_POSITION = -1\n \n-  POSITION_LIMIT = 2**31\n+  POSITION_LIMIT = (2**31) - 1\n \n   module Flags\n     NONE = 0\n@@ -91,7 +91,7 @@ module Flags\n \n   validates :name, presence: true, unless: :everyone?\n   validates :color, format: { with: /\\A#?(?:[A-F0-9]{3}){1,2}\\z/i }, unless: -> { color.blank? }\n-  validates :position, numericality: { greater_than_or_equal_to: -POSITION_LIMIT, less_than_or_equal_to: POSITION_LIMIT }\n+  validates :position, numericality: { in: (-POSITION_LIMIT..POSITION_LIMIT) }\n \n   validate :validate_permissions_elevation\n   validate :validate_position_elevation\n---\nspec/models/user_role_spec.rb\n@@ -21,11 +21,9 @@\n     describe 'position' do\n       subject { Fabricate.build :user_role }\n \n-      let(:excess) { 2**32 }\n-      let(:limit) { 2**31 }\n+      let(:limit) { described_class::POSITION_LIMIT }\n \n-      it { is_expected.to_not allow_values(-excess, excess).for(:position) }\n-      it { is_expected.to allow_values(-limit, limit).for(:position) }\n+      it { is_expected.to validate_numericality_of(:position).is_in(-limit..limit) }\n     end\n \n     describe 'color' do\n---\n\n\n---\n\nChoice C:\napp/workers/web/push_notification_worker.rb\n@@ -55,12 +55,8 @@ def web_push_request\n   end\n \n   def push_notification_json\n-    Oj.dump(serialized_notification_in_subscription_locale.as_json)\n-  end\n-\n-  def serialized_notification_in_subscription_locale\n     I18n.with_locale(@subscription.locale.presence || I18n.default_locale) do\n-      serialized_notification\n+      Oj.dump(serialized_notification.as_json)\n     end\n   end\n \n---\n\n\n---\n\nChoice D:\nCHANGELOG.md\n@@ -2,6 +2,29 @@\n \n All notable changes to this project will be documented in this file.\n \n+## [4.3.7] - 2025-04-02\n+\n+### Add\n+\n+- Add delay to profile updates to debounce them (#34137 by @ClearlyClaire)\n+- Add support for paginating partial collections in `SynchronizeFollowersService` (#34272 and #34277 by @ClearlyClaire)\n+\n+### Changed\n+\n+- Change account suspensions to be federated to recently-followed accounts as well (#34294 by @ClearlyClaire)\n+- Change `AccountReachFinder` to consider statuses based on suspension date (#32805 and #34291 by @ClearlyClaire and @mjankowski)\n+- Change user archive signed URL TTL from 10 seconds to 1 hour (#34254 by @ClearlyClaire)\n+\n+### Fixed\n+\n+- Fix static version of animated PNG emojis not being properly extracted (#34337 by @ClearlyClaire)\n+- Fix filters not applying in detailed view, favourites and bookmarks (#34259 and #34260 by @ClearlyClaire)\n+- Fix handling of malformed/unusual HTML (#34201 by @ClearlyClaire)\n+- Fix `CacheBuster` being queued for missing media attachments (#34253 by @ClearlyClaire)\n+- Fix incorrect URL being used when cache busting (#34189 by @ClearlyClaire)\n+- Fix streaming server refusing unix socket path in `DATABASE_URL` (#34091 by @ClearlyClaire)\n+- Fix \u201cx\u201d hotkey not working on boosted filtered posts (#33758 by @ClearlyClaire)\n+\n ## [4.3.6] - 2025-03-13\n \n ### Security\n---\ndocker-compose.yml\n@@ -59,7 +59,7 @@ services:\n   web:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec puma -C config/puma.rb\n@@ -83,7 +83,7 @@ services:\n     # build:\n     #   dockerfile: ./streaming/Dockerfile\n     #   context: .\n-    image: ghcr.io/mastodon/mastodon-streaming:v4.3.6\n+    image: ghcr.io/mastodon/mastodon-streaming:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: node ./streaming/index.js\n@@ -102,7 +102,7 @@ services:\n   sidekiq:\n     # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes\n     # build: .\n-    image: ghcr.io/mastodon/mastodon:v4.3.6\n+    image: ghcr.io/mastodon/mastodon:v4.3.7\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      6\n+      7\n     end\n \n     def default_prerelease\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: LinkCrawlWorker NoMethodError: undefined method `encode' for an instance of Array\n\nIssue Description:\n### Steps to reproduce the problem\n\nSeen on these pages:\r\n\r\nhttps://www.smithsonianmag.com/history/how-the-rise-of-the-camera-launched-a-fight-to-protect-gilded-age-americans-privacy-180984656/\r\nhttps://www.bostonglobe.com/2024/07/05/metro/wampanoag-plymouth-dei-cape-cod/\r\n\r\n![CleanShot 2024-07-05 at 17 51 00@2x](https://github.com/mastodon/mastodon/assets/3002053/e05b590b-ccb5-4866-9bba-ee020283d867)\r\n\n\n### Expected behaviour\n\nNo error\n\n### Actual behaviour\n\nError\n\n### Detailed description\n\nI seems like these are triggered from the author details on the page being listed in an array.\n\n### Mastodon instance\n\nvmst.io\n\n### Mastodon version\n\nv4.3.0-alpha.5\n\n### Technical details\n\nLatest `main`\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/widgets.scss\n@@ -1,3 +1,85 @@\n+.directory {\n+  &__tag {\n+    box-sizing: border-box;\n+    margin-bottom: 10px;\n+\n+    & > a,\n+    & > div {\n+      display: flex;\n+      align-items: center;\n+      justify-content: space-between;\n+      border: 1px solid var(--background-border-color);\n+      border-radius: 4px;\n+      padding: 15px;\n+      text-decoration: none;\n+      color: inherit;\n+      box-shadow: 0 0 15px rgba($base-shadow-color, 0.2);\n+    }\n+\n+    & > a {\n+      &:hover,\n+      &:active,\n+      &:focus {\n+        background: $ui-base-color;\n+      }\n+    }\n+\n+    &.active > a {\n+      background: $ui-highlight-color;\n+      cursor: default;\n+    }\n+\n+    &.disabled > div {\n+      opacity: 0.5;\n+      cursor: default;\n+    }\n+\n+    h4 {\n+      flex: 1 1 auto;\n+      font-size: 18px;\n+      font-weight: 700;\n+      color: $primary-text-color;\n+      white-space: nowrap;\n+      overflow: hidden;\n+      text-overflow: ellipsis;\n+\n+      .fa {\n+        color: $darker-text-color;\n+      }\n+\n+      small {\n+        display: block;\n+        font-weight: 400;\n+        font-size: 15px;\n+        margin-top: 8px;\n+        color: $darker-text-color;\n+      }\n+    }\n+\n+    &.active h4 {\n+      &,\n+      .fa,\n+      small,\n+      .trends__item__current {\n+        color: $primary-text-color;\n+      }\n+    }\n+\n+    .avatar-stack {\n+      flex: 0 0 auto;\n+      width: (36px + 4px) * 3;\n+    }\n+\n+    &.active .avatar-stack .account__avatar {\n+      border-color: $ui-highlight-color;\n+    }\n+\n+    .trends__item__current {\n+      padding-inline-end: 0;\n+    }\n+  }\n+}\n+\n .accounts-table {\n   width: 100%;\n \n---\n\n\n---\n\nChoice B:\napp/lib/link_details_extractor.rb\n@@ -62,7 +62,8 @@ def date_modified\n     end\n \n     def author_name\n-      author['name']\n+      name = author['name']\n+      name.is_a?(Array) ? name.join(', ') : name\n     end\n \n     def author_url\n@@ -294,7 +295,7 @@ def detector\n   def html_entities_decode(string)\n     return if string.nil?\n \n-    unicode_string = string.encode('UTF-8')\n+    unicode_string = string.to_s.encode('UTF-8')\n     raise EncodingError, 'cannot convert string to valid UTF-8' unless unicode_string.valid_encoding?\n \n     html_entities.decode(unicode_string)\n---\nspec/lib/link_details_extractor_spec.rb\n@@ -192,6 +192,35 @@\n \n       include_examples 'structured data'\n     end\n+\n+    context 'with author names as array' do\n+      let(:ld_json) do\n+        {\n+          '@context' => 'https://schema.org',\n+          '@type' => 'NewsArticle',\n+          'headline' => 'A lot of authors',\n+          'description' => 'But we decided to cram them into one',\n+          'author' => {\n+            '@type' => 'Person',\n+            'name' => ['Author 1', 'Author 2'],\n+          },\n+        }.to_json\n+      end\n+      let(:html) { <<~HTML }\n+        <!doctype html>\n+        <html>\n+        <body>\n+          <script type=\"application/ld+json\">\n+            #{ld_json}\n+          </script>\n+        </body>\n+        </html>\n+      HTML\n+\n+      it 'joins author names' do\n+        expect(subject.author_name).to eq 'Author 1, Author 2'\n+      end\n+    end\n   end\n \n   context 'when Open Graph protocol data is present' do\n---\n\n\n---\n\nChoice C:\ndocker-compose.yml\n@@ -88,7 +88,7 @@ services:\n       - internal_network\n     healthcheck:\n       # prettier-ignore\n-      test: ['CMD-SHELL', \"curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1'\"]\n+      test: ['CMD-SHELL', \"curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1\"]\n     ports:\n       - '127.0.0.1:4000:4000'\n     depends_on:\n---\n\n\n---\n\nChoice D:\nstreaming/redis.js\n@@ -50,9 +50,9 @@ function getSentinelConfiguration(env, commonOptions) {\n   return {\n     db: redisDatabase,\n     name: env.REDIS_SENTINEL_MASTER,\n-    username: env.REDIS_USERNAME,\n+    username: env.REDIS_USER,\n     password: env.REDIS_PASSWORD,\n-    sentinelUsername: env.REDIS_SENTINEL_USERNAME ?? env.REDIS_USERNAME,\n+    sentinelUsername: env.REDIS_SENTINEL_USERNAME ?? env.REDIS_USER,\n     sentinelPassword: env.REDIS_SENTINEL_PASSWORD ?? env.REDIS_PASSWORD,\n     sentinels,\n     ...commonOptions,\n@@ -104,7 +104,7 @@ export function configFromEnv(env) {\n     host: env.REDIS_HOST ?? '127.0.0.1',\n     port: redisPort,\n     db: redisDatabase,\n-    username: env.REDIS_USERNAME,\n+    username: env.REDIS_USER,\n     password: env.REDIS_PASSWORD,\n     ...commonOptions,\n   };\n---\n\n\n---\n\n"}], "ideal": "B"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Overflow on hover cards with long URl descriptions\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. View the hover card of `@media_dept@mastodon.social`\r\n2. Notice the overflow\r\n3.  ![Screenshot from 2024-07-04 23-42-41](https://github.com/mastodon/mastodon/assets/837136/07e44a70-29b2-4b64-97bb-b51e25caa76a)\r\n\n\n### Expected behaviour\n\nText should not overflow the bounds of the hover card\n\n### Actual behaviour\n\nLong URl descriptions break the look and feel.\n\n### Detailed description\n\nThe user appears to have very long descriptions of their URls. For example `Voting options for UK General Election, Thursday 4th July 2024`\r\n![Screenshot 2024-07-04 at 23-43-50 Games Games Games (@media_dept@mastodon social) - Mastodon](https://github.com/mastodon/mastodon/assets/837136/cda3ffb3-6b85-4d9f-9b00-fe8704db7167)\r\n\n\n### Mastodon instance\n\nmastodon.social\n\n### Mastodon version\n\nv4.3.0-nightly.2024-07-05-security\n\n### Browser name and version\n\nFirefox 127\n\n### Operating system\n\nUbuntu 22.04\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\napp/javascript/styles/mastodon/components.scss\n@@ -10453,7 +10453,7 @@ noscript {\n       gap: 4px;\n \n       dt {\n-        flex: 0 0 auto;\n+        flex: 0 1 auto;\n         color: $dark-text-color;\n         min-width: 0;\n         overflow: hidden;\n---\n\n\n---\n\nChoice B:\napp/javascript/mastodon/components/status.jsx\n@@ -397,6 +397,7 @@ class Status extends ImmutablePureComponent {\n     const connectUp = previousId && previousId === status.get('in_reply_to_id');\n     const connectToRoot = rootId && rootId === status.get('in_reply_to_id');\n     const connectReply = nextInReplyToId && nextInReplyToId === status.get('id');\n+    const matchedFilters = status.get('matched_filters');\n \n     if (featured) {\n       prepend = (\n@@ -432,7 +433,6 @@ class Status extends ImmutablePureComponent {\n       );\n     }\n \n-    const matchedFilters = status.get('matched_filters');\n     const expanded = (!matchedFilters || this.state.showDespiteFilter) && (!status.get('hidden') || status.get('spoiler_text').length === 0);\n \n     if (hidden) {\n---\n\n\n---\n\nChoice C:\napp/javascript/mastodon/features/ui/components/block_modal.jsx\n@@ -99,7 +99,7 @@ export const BlockModal = ({ accountId, acct }) => {\n             <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n           </button>\n \n-          <Button onClick={handleClick}>\n+          <Button onClick={handleClick} autoFocus>\n             <FormattedMessage id='confirmations.block.confirm' defaultMessage='Block' />\n           </Button>\n         </div>\n---\napp/javascript/mastodon/features/ui/components/confirmation_modals/confirmation_modal.tsx\n@@ -71,7 +71,10 @@ export const ConfirmationModal: React.FC<\n             />\n           </button>\n \n-          <Button onClick={handleClick}>{confirm}</Button>\n+          {/* eslint-disable-next-line jsx-a11y/no-autofocus -- we are in a modal and thus autofocusing is justified */}\n+          <Button onClick={handleClick} autoFocus>\n+            {confirm}\n+          </Button>\n         </div>\n       </div>\n     </div>\n---\napp/javascript/mastodon/features/ui/components/domain_block_modal.jsx\n@@ -88,7 +88,7 @@ export const DomainBlockModal = ({ domain, accountId, acct }) => {\n             <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n           </button>\n \n-          <Button onClick={handleClick}>\n+          <Button onClick={handleClick} autoFocus>\n             <FormattedMessage id='domain_block_modal.block' defaultMessage='Block server' />\n           </Button>\n         </div>\n---\napp/javascript/mastodon/features/ui/components/mute_modal.jsx\n@@ -137,7 +137,7 @@ export const MuteModal = ({ accountId, acct }) => {\n             <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n           </button>\n \n-          <Button onClick={handleClick}>\n+          <Button onClick={handleClick} autoFocus>\n             <FormattedMessage id='confirmations.mute.confirm' defaultMessage='Mute' />\n           </Button>\n         </div>\n---\napp/javascript/mastodon/features/ui/components/boost_modal.tsx\n@@ -128,6 +128,8 @@ export const BoostModal: React.FC<{\n                 ? messages.cancel_reblog\n                 : messages.reblog,\n             )}\n+            /* eslint-disable-next-line jsx-a11y/no-autofocus -- We are in the modal */\n+            autoFocus\n           />\n         </div>\n       </div>\n---\n\n\n---\n\nChoice D:\n.browserslistrc\n@@ -1,6 +1,7 @@\n [production]\n defaults\n > 0.2%\n+firefox >= 78\n ios >= 15.6\n not dead\n not OperaMini all\n---\n\n\n---\n\n"}], "ideal": "A"}
{"input": [{"role": "system", "content": "The user will ask which of the following 4 choices (A, B, C or D) is the best solution to the following software issue. Only respond with a single letter A, B, C or D in uppercase. "}, {"role": "user", "content": "Task Description: \nIssue Title: Right-to-left text display in link previews\n\nIssue Description:\n### Steps to reproduce the problem\n\n1. Sending a link in Mastodon that contains Persian or Arabic content.\r\n2. Waiting for the preview to be generated.\n\n### Expected behaviour\n\nPersian or Arabic texts in link previews should be right-to-left.\n\n### Actual behaviour\n\nPersian or Arabic texts in link previews are displayed left-to-right.\n\n### Detailed description\n\n![Screenshot 2024-07-04 21 30 51](https://github.com/mastodon/mastodon/assets/87318660/cb2c1c5e-9b3d-4707-94cf-be90a5553d8b)\r\nhttps://khiar.net/@drcode/112729514922262834\r\n\r\n![Screenshot 2024-07-04 21 30 19](https://github.com/mastodon/mastodon/assets/87318660/810f3e59-b837-4391-839a-2c467745c809)\r\nhttps://khiar.net/@drcode/112729520487495122\n\n### Mastodon instance\n\nany instance - khiar.net\n\n### Mastodon version\n\nv4 and up - v4.2.10\n\n### Browser name and version\n\nany browser - Google chrome Version 128.0.6558.0 (Official Build) dev (64-bit)\n\n### Operating system\n\nany os - Google chrome OS Version 128.0.6558.0 (Official Build) dev (64-bit)\n\n### Technical details\n\n_No response_\n\n---\n\nChoice A:\nCHANGELOG.md\n@@ -2,6 +2,39 @@\n \n All notable changes to this project will be documented in this file.\n \n+## |4.2.11] - 2024-08-16\n+\n+### Added\n+\n+- Add support for incoming `<s>` tag ([mediaformat](https://github.com/mastodon/mastodon/pull/31375))\n+\n+### Changed\n+\n+- Change logic of block/mute bypass for mentions from moderators to only apply to visible roles with moderation powers ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31271))\n+\n+### Fixed\n+\n+- Fix incorrect rate limit on PUT requests ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31356))\n+- Fix presence of `\u00df` in adjacent word preventing mention and hashtag matching ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31122))\n+- Fix processing of webfinger responses with multiple `self` links ([adamniedzielski](https://github.com/mastodon/mastodon/pull/31110))\n+- Fix duplicate `orderedItems` in user archive's `outbox.json` ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31099))\n+- Fix click event handling when clicking outside of an open dropdown menu ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31251))\n+- Fix status processing failing halfway when a remote post has a malformed `replies` attribute ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/31246))\n+- Fix `--verbose` option of `tootctl media remove`, which was previously erroneously removed ([mjankowski](https://github.com/mastodon/mastodon/pull/30536))\n+- Fix division by zero on some video/GIF files ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30600))\n+- Fix Web UI trying to save user settings despite being logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30324))\n+- Fix hashtag regexp matching some link anchors ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/30190))\n+- Fix local account search on LDAP login being case-sensitive ([raucao](https://github.com/mastodon/mastodon/pull/30113))\n+- Fix development environment admin account not being auto-approved ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29958))\n+- Fix report reason selector in moderation interface not unselecting rules when changing category ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29026))\n+- Fix already-invalid reports failing to resolve ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/29027))\n+- Fix OCR when using S3/CDN for assets ([vmstan](https://github.com/mastodon/mastodon/pull/28551))\n+- Fix error when encountering malformed `Tag` objects from Kbin ([ShadowJonathan](https://github.com/mastodon/mastodon/pull/28235))\n+- Fix not all allowed image formats showing in file picker when uploading custom emoji ([june128](https://github.com/mastodon/mastodon/pull/28076))\n+- Fix search popout listing unusable search options when logged out ([ClearlyClaire](https://github.com/mastodon/mastodon/pull/27918))\n+- Fix processing of featured collections lacking an `items` attribute ([tribela](https://github.com/mastodon/mastodon/pull/27581))\n+- Fix `mastodon:stats` decoration of stats rake task ([mjankowski](https://github.com/mastodon/mastodon/pull/31104))\n+\n ## [4.2.10] - 2024-07-04\n \n ### Security\n---\nGemfile.lock\n@@ -604,8 +604,8 @@ GEM\n     responders (3.1.0)\n       actionpack (>= 5.2)\n       railties (>= 5.2)\n-    rexml (3.2.8)\n-      strscan (>= 3.0.9)\n+    rexml (3.3.5)\n+      strscan\n     rotp (6.3.0)\n     rouge (4.1.2)\n     rpam2 (4.0.2)\n@@ -731,7 +731,7 @@ GEM\n       redlock (~> 1.0)\n     strong_migrations (0.8.0)\n       activerecord (>= 5.2)\n-    strscan (3.0.9)\n+    strscan (3.1.0)\n     swd (1.3.0)\n       activesupport (>= 3)\n       attr_required (>= 0.0.5)\n---\napp/javascript/mastodon/actions/settings.js\n@@ -20,7 +20,7 @@ export function changeSetting(path, value) {\n }\n \n const debouncedSave = debounce((dispatch, getState) => {\n-  if (getState().getIn(['settings', 'saved'])) {\n+  if (getState().getIn(['settings', 'saved']) || !getState().getIn(['meta', 'me'])) {\n     return;\n   }\n \n---\napp/javascript/mastodon/components/admin/ReportReasonSelector.jsx\n@@ -124,7 +124,7 @@ class ReportReasonSelector extends PureComponent {\n \n     api().put(`/api/v1/admin/reports/${id}`, {\n       category,\n-      rule_ids,\n+      rule_ids: category === 'violation' ? rule_ids : [],\n     }).catch(err => {\n       console.error(err);\n     });\n---\napp/javascript/mastodon/components/dropdown_menu.jsx\n@@ -40,6 +40,7 @@ class DropdownMenu extends PureComponent {\n     if (this.node && !this.node.contains(e.target)) {\n       this.props.onClose();\n       e.stopPropagation();\n+      e.preventDefault();\n     }\n   };\n \n---\napp/javascript/mastodon/features/compose/components/search.jsx\n@@ -274,6 +274,7 @@ class Search extends PureComponent {\n   }\n \n   _calculateOptions (value) {\n+    const { signedIn } = this.context.identity;\n     const trimmedValue = value.trim();\n     const options = [];\n \n@@ -298,7 +299,7 @@ class Search extends PureComponent {\n \n       const couldBeStatusSearch = searchEnabled;\n \n-      if (couldBeStatusSearch) {\n+      if (couldBeStatusSearch && signedIn) {\n         options.push({ key: 'status-search', label: <FormattedMessage id='search.quick_action.status_search' defaultMessage='Posts matching {x}' values={{ x: <mark>{trimmedValue}</mark> }} />, action: this.handleStatusSearch });\n       }\n \n@@ -375,7 +376,7 @@ class Search extends PureComponent {\n \n           <h4><FormattedMessage id='search_popout.options' defaultMessage='Search options' /></h4>\n \n-          {searchEnabled ? (\n+          {searchEnabled && signedIn ? (\n             <div className='search__popout__menu'>\n               {this.defaultOptions.map(({ key, label, action }, i) => (\n                 <button key={key} onMouseDown={action} className={classNames('search__popout__menu__item', { selected: selectedOption === ((options.length || recent.size) + i) })}>\n@@ -385,7 +386,11 @@ class Search extends PureComponent {\n             </div>\n           ) : (\n             <div className='search__popout__menu__message'>\n-              <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              {searchEnabled ? (\n+                <FormattedMessage id='search_popout.full_text_search_logged_out_message' defaultMessage='Only available when logged in.' />\n+              ) : (\n+                <FormattedMessage id='search_popout.full_text_search_disabled_message' defaultMessage='Not available on {domain}.' values={{ domain }} />\n+              )}\n             </div>\n           )}\n         </div>\n---\napp/javascript/mastodon/features/ui/components/focal_point_modal.jsx\n@@ -221,7 +221,7 @@ class FocalPointModal extends ImmutablePureComponent {\n       const worker = createWorker({\n         workerPath: tesseractWorkerPath,\n         corePath: tesseractCorePath,\n-        langPath: `${assetHost}/ocr/lang-data/`,\n+        langPath: `${assetHost}/ocr/lang-data`,\n         logger: ({ status, progress }) => {\n           if (status === 'recognizing text') {\n             this.setState({ ocrStatus: 'detecting', progress });\n---\napp/javascript/mastodon/locales/en.json\n@@ -591,6 +591,7 @@\n   \"search.quick_action.status_search\": \"Posts matching {x}\",\n   \"search.search_or_paste\": \"Search or paste URL\",\n   \"search_popout.full_text_search_disabled_message\": \"Not available on {domain}.\",\n+  \"search_popout.full_text_search_logged_out_message\": \"Only available when logged in.\",\n   \"search_popout.language_code\": \"ISO language code\",\n   \"search_popout.options\": \"Search options\",\n   \"search_popout.quick_actions\": \"Quick actions\",\n---\napp/lib/activitypub/activity/create.rb\n@@ -332,13 +332,15 @@ def resolve_thread(status)\n \n   def fetch_replies(status)\n     collection = @object['replies']\n-    return if collection.nil?\n+    return if collection.blank?\n \n     replies = ActivityPub::FetchRepliesService.new.call(status, collection, allow_synchronous_requests: false, request_id: @options[:request_id])\n     return unless replies.nil?\n \n     uri = value_or_id(collection)\n     ActivityPub::FetchRepliesWorker.perform_async(status.id, uri, { 'request_id' => @options[:request_id] }) unless uri.nil?\n+  rescue => e\n+    Rails.logger.warn \"Error fetching replies: #{e}\"\n   end\n \n   def conversation_from_uri(uri)\n---\napp/lib/activitypub/adapter.rb\n@@ -20,6 +20,6 @@ def serializable_hash(options = nil)\n     serialized_hash = serialized_hash.select { |k, _| options[:fields].include?(k) } if options[:fields]\n     serialized_hash = self.class.transform_key_casing!(serialized_hash, instance_options)\n \n-    { '@context' => serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n+    { '@context': serialized_context(named_contexts, context_extensions) }.merge(serialized_hash)\n   end\n end\n---\napp/lib/video_metadata_extractor.rb\n@@ -41,8 +41,8 @@ def parse_metadata\n         @colorspace  = video_stream[:pix_fmt]\n         @width       = video_stream[:width]\n         @height      = video_stream[:height]\n-        @frame_rate  = video_stream[:avg_frame_rate] == '0/0' ? nil : Rational(video_stream[:avg_frame_rate])\n-        @r_frame_rate = video_stream[:r_frame_rate] == '0/0' ? nil : Rational(video_stream[:r_frame_rate])\n+        @frame_rate  = parse_framerate(video_stream[:avg_frame_rate])\n+        @r_frame_rate = parse_framerate(video_stream[:r_frame_rate])\n         # For some video streams the frame_rate reported by `ffprobe` will be 0/0, but for these streams we\n         # should use `r_frame_rate` instead. Video screencast generated by Gnome Screencast have this issue.\n         @frame_rate ||= @r_frame_rate\n@@ -55,4 +55,10 @@ def parse_metadata\n \n     @invalid = true if @metadata.key?(:error)\n   end\n+\n+  def parse_framerate(raw)\n+    Rational(raw)\n+  rescue ZeroDivisionError\n+    nil\n+  end\n end\n---\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json['links'].index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/models/account.rb\n@@ -66,7 +66,7 @@ class Account < ApplicationRecord\n   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze\n \n   USERNAME_RE   = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i\n-  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}i\n+  MENTION_RE    = %r{(?<![=/[:word:]])@((#{USERNAME_RE})(?:@[[:word:].-]+[[:word:]]+)?)}\n   URL_PREFIX_RE = %r{\\Ahttp(s?)://[^/]+}\n   USERNAME_ONLY_RE = /\\A#{USERNAME_RE}\\z/i\n \n---\napp/models/concerns/ldap_authenticable.rb\n@@ -22,7 +22,7 @@ def ldap_get_user(attributes = {})\n         safe_username = safe_username.gsub(keys, replacement)\n       end\n \n-      resource = joins(:account).find_by(accounts: { username: safe_username })\n+      resource = joins(:account).merge(Account.where(Account.arel_table[:username].lower.eq safe_username.downcase)).take\n \n       if resource.blank?\n         resource = new(email: attributes[Devise.ldap_mail.to_sym].first, agreement: true, account_attributes: { username: safe_username }, admin: false, external: true, confirmed_at: Time.now.utc)\n---\napp/models/report.rb\n@@ -44,9 +44,9 @@ class Report < ApplicationRecord\n   delegate :local?, to: :account\n \n   validates :comment, length: { maximum: 1_000 }, if: :local?\n-  validates :rule_ids, absence: true, unless: :violation?\n+  validates :rule_ids, absence: true, if: -> { (category_changed? || rule_ids_changed?) && !violation? }\n \n-  validate :validate_rule_ids\n+  validate :validate_rule_ids, if: -> { (category_changed? || rule_ids_changed?) && violation? }\n \n   # entries here need to be kept in sync with the front-end:\n   # - app/javascript/mastodon/features/notifications/components/report.jsx\n@@ -154,8 +154,6 @@ def set_uri\n   end\n \n   def validate_rule_ids\n-    return unless violation?\n-\n     errors.add(:rule_ids, I18n.t('reports.errors.invalid_rules')) unless rules.size == rule_ids&.size\n   end\n \n---\napp/models/tag.rb\n@@ -35,7 +35,7 @@ class Tag < ApplicationRecord\n   HASHTAG_LAST_SEQUENCE = '([[:word:]_]*[[:alpha:]][[:word:]_]*)'\n   HASHTAG_NAME_PAT = \"#{HASHTAG_FIRST_SEQUENCE}|#{HASHTAG_LAST_SEQUENCE}\"\n \n-  HASHTAG_RE = %r{(?<![=/)\\w])#(#{HASHTAG_NAME_PAT})}i\n+  HASHTAG_RE = %r{(?<![=/)\\p{Alnum}])#(#{HASHTAG_NAME_PAT})}\n   HASHTAG_NAME_RE = /\\A(#{HASHTAG_NAME_PAT})\\z/i\n   HASHTAG_INVALID_CHARS_RE = /[^[:alnum:]#{HASHTAG_SEPARATORS}]/\n \n---\napp/services/activitypub/fetch_featured_collection_service.rb\n@@ -37,6 +37,8 @@ def fetch_collection(collection_or_uri)\n   end\n \n   def process_items(items)\n+    return if items.nil?\n+\n     process_note_items(items) if @options[:note]\n     process_hashtag_items(items) if @options[:hashtag]\n   end\n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/activitypub/process_status_update_service.rb\n@@ -172,9 +172,9 @@ def update_metadata!\n \n     as_array(@json['tag']).each do |tag|\n       if equals_or_includes?(tag['type'], 'Hashtag')\n-        @raw_tags << tag['name']\n+        @raw_tags << tag['name'] if tag['name'].present?\n       elsif equals_or_includes?(tag['type'], 'Mention')\n-        @raw_mentions << tag['href']\n+        @raw_mentions << tag['href'] if tag['href'].present?\n       elsif equals_or_includes?(tag['type'], 'Emoji')\n         @raw_emojis << tag\n       end\n---\napp/services/backup_service.rb\n@@ -19,8 +19,8 @@ def call(backup)\n \n   def build_outbox_json!(file)\n     skeleton = serialize(collection_presenter, ActivityPub::CollectionSerializer)\n-    skeleton['@context'] = full_context\n-    skeleton['orderedItems'] = ['!PLACEHOLDER!']\n+    skeleton[:@context] = full_context\n+    skeleton[:orderedItems] = ['!PLACEHOLDER!']\n     skeleton = Oj.dump(skeleton)\n     prepend, append = skeleton.split('\"!PLACEHOLDER!\"')\n     add_comma = false\n@@ -33,7 +33,7 @@ def build_outbox_json!(file)\n \n       file.write(statuses.map do |status|\n         item = serialize_payload(ActivityPub::ActivityPresenter.from_status(status), ActivityPub::ActivitySerializer)\n-        item.delete('@context')\n+        item.delete(:@context)\n \n         unless item[:type] == 'Announce' || item[:object][:attachment].blank?\n           item[:object][:attachment].each do |attachment|\n---\napp/services/notify_service.rb\n@@ -86,7 +86,8 @@ def response_to_recipient?\n   end\n \n   def from_staff?\n-    @notification.from_account.local? && @notification.from_account.user.present? && @notification.from_account.user_role&.overrides?(@recipient.user_role)\n+    sender = @notification.from_account\n+    sender.local? && sender.user.present? && sender.user_role&.overrides?(@recipient.user_role) && @sender.user_role&.highlighted? && sender.user_role&.can?(*UserRole::Flags::CATEGORIES[:moderation])\n   end\n \n   def optional_non_following_and_direct?\n---\napp/services/resolve_account_service.rb\n@@ -104,8 +104,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -120,12 +118,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\napp/views/admin/custom_emojis/new.html.haml\n@@ -7,7 +7,7 @@\n   .fields-group\n     = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint')\n   .fields-group\n-    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(' ') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n+    = f.input :image, wrapper: :with_label, input_html: { accept: CustomEmoji::IMAGE_MIME_TYPES.join(',') }, hint: t('admin.custom_emojis.image_hint', size: number_to_human_size(CustomEmoji::LIMIT))\n \n   .actions\n     = f.button :button, t('admin.custom_emojis.upload'), type: :submit\n---\nconfig/initializers/rack_attack.rb\n@@ -142,7 +142,7 @@ def paging_request?\n   end\n \n   throttle('throttle_password_change/account', limit: 10, period: 10.minutes) do |req|\n-    req.warden_user_id if req.put? || (req.patch? && req.path_matches?('/auth'))\n+    req.warden_user_id if (req.put? || req.patch?) && (req.path_matches?('/auth') || req.path_matches?('/auth/password'))\n   end\n \n   self.throttled_responder = lambda do |request|\n---\ndb/seeds/04_admin.rb\n@@ -7,5 +7,7 @@\n   admin = Account.where(username: 'admin').first_or_initialize(username: 'admin')\n   admin.save(validate: false)\n \n-  User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true).save!\n+  user = User.where(email: \"admin@#{domain}\").first_or_initialize(email: \"admin@#{domain}\", password: 'mastodonadmin', password_confirmation: 'mastodonadmin', confirmed_at: Time.now.utc, role: UserRole.find_by(name: 'Owner'), account: admin, agreement: true, approved: true)\n+  user.save!\n+  user.approve!\n end\n---\ndocker-compose.yml\n@@ -56,7 +56,7 @@ services:\n \n   web:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bash -c \"rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000\"\n@@ -77,7 +77,7 @@ services:\n \n   streaming:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: node ./streaming\n@@ -95,7 +95,7 @@ services:\n \n   sidekiq:\n     build: .\n-    image: ghcr.io/mastodon/mastodon:v4.2.10\n+    image: ghcr.io/mastodon/mastodon:v4.2.11\n     restart: always\n     env_file: .env.production\n     command: bundle exec sidekiq\n---\nlib/mastodon/cli/media.rb\n@@ -13,6 +13,7 @@ class Media < Base\n     option :remove_headers, type: :boolean, default: false\n     option :include_follows, type: :boolean, default: false\n     option :concurrency, type: :numeric, default: 5, aliases: [:c]\n+    option :verbose, type: :boolean, default: false, aliases: [:v]\n     option :dry_run, type: :boolean, default: false\n     desc 'remove', 'Remove remote media files, headers or avatars'\n     long_desc <<-DESC\n---\nlib/mastodon/version.rb\n@@ -13,7 +13,7 @@ def minor\n     end\n \n     def patch\n-      10\n+      11\n     end\n \n     def default_prerelease\n---\nlib/sanitize_ext/sanitize_config.rb\n@@ -65,7 +65,7 @@ module Config\n     end\n \n     MASTODON_STRICT ||= freeze_config(\n-      elements: %w(p br span a del pre blockquote code b strong u i em ul ol li),\n+      elements: %w(p br span a del s pre blockquote code b strong u i em ul ol li),\n \n       attributes: {\n         'a' => %w(href rel class translate),\n---\nlib/tasks/statistics.rake\n@@ -9,11 +9,13 @@ namespace :mastodon do\n     [\n       ['App Libraries', 'app/lib'],\n       %w(Presenters app/presenters),\n+      %w(Policies app/policies),\n+      %w(Serializers app/serializers),\n       %w(Services app/services),\n       %w(Validators app/validators),\n       %w(Workers app/workers),\n     ].each do |name, dir|\n-      STATS_DIRECTORIES << [name, Rails.root.join(dir)]\n+      STATS_DIRECTORIES << [name, dir]\n     end\n   end\n end\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/activitypub/adapter_spec.rb\n@@ -59,39 +59,39 @@ def virtual_object\n       let(:serializer_class) { TestWithBasicContextSerializer }\n \n       it 'renders a basic @context' do\n-        expect(subject).to include({ '@context' => 'https://www.w3.org/ns/activitystreams' })\n+        expect(subject).to include({ '@context': 'https://www.w3.org/ns/activitystreams' })\n       end\n     end\n \n     context 'when serializer defines a named context' do\n       let(:serializer_class) { TestWithNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer has children that define a named context' do\n       let(:serializer_class) { TestWithNestedNamedContextSerializer }\n \n       it 'renders a @context with both items' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', 'https://w3id.org/security/v1'] })\n       end\n     end\n \n     context 'when serializer defines context extensions' do\n       let(:serializer_class) { TestWithContextExtensionSerializer }\n \n       it 'renders a @context with the extension' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n \n     context 'when serializer has children that define context extensions' do\n       let(:serializer_class) { TestWithNestedContextExtensionSerializer }\n \n       it 'renders a @context with both extensions' do\n-        expect(subject).to include({ '@context' => ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n+        expect(subject).to include({ '@context': ['https://www.w3.org/ns/activitystreams', { 'manuallyApprovesFollowers' => 'as:manuallyApprovesFollowers', 'sensitive' => 'as:sensitive' }] })\n       end\n     end\n   end\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/models/account_spec.rb\n@@ -703,6 +703,14 @@\n     it 'does not match URL query string' do\n       expect(subject.match('https://example.com/?x=@alice')).to be_nil\n     end\n+\n+    it 'matches usernames immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df @alice from me')[1]).to eq 'alice'\n+    end\n+\n+    it 'matches usernames containing uppercase characters' do\n+      expect(subject.match('Hello to @aLice@Example.com from me')[1]).to eq 'aLice@Example.com'\n+    end\n   end\n \n   describe 'validations' do\n---\nspec/models/report_spec.rb\n@@ -133,5 +133,18 @@\n       report = Fabricate.build(:report, account: remote_account, comment: Faker::Lorem.characters(number: 1001))\n       expect(report.valid?).to be true\n     end\n+\n+    it 'is invalid if it references invalid rules' do\n+      report = Fabricate.build(:report, category: :violation, rule_ids: [-1])\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n+\n+    it 'is invalid if it references rules but category is not \"violation\"' do\n+      rule = Fabricate(:rule)\n+      report = Fabricate.build(:report, category: :spam, rule_ids: rule.id)\n+      expect(report.valid?).to be false\n+      expect(report).to model_have_error_on_field(:rule_ids)\n+    end\n   end\n end\n---\nspec/models/tag_spec.rb\n@@ -36,6 +36,10 @@\n       expect(subject.match('https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111895#c4')).to be_nil\n     end\n \n+    it 'does not match URLs with hashtag-like anchors after a non-ascii character' do\n+      expect(subject.match('https://example.org/test\u00e9#foo')).to be_nil\n+    end\n+\n     it 'does not match URLs with hashtag-like anchors after an empty query parameter' do\n       expect(subject.match('https://en.wikipedia.org/wiki/Ghostbusters_(song)?foo=#Lawsuit')).to be_nil\n     end\n@@ -91,6 +95,14 @@\n     it 'does not match purely-numeric hashtags' do\n       expect(subject.match('hello #0123456')).to be_nil\n     end\n+\n+    it 'matches hashtags immediately following the letter \u00df' do\n+      expect(subject.match('Hello to\u00df #ruby').to_s).to eq '#ruby'\n+    end\n+\n+    it 'matches hashtags containing uppercase characters' do\n+      expect(subject.match('Hello #rubyOnRails').to_s).to eq '#rubyOnRails'\n+    end\n   end\n \n   describe '#to_param' do\n---\nspec/services/activitypub/fetch_featured_collection_service_spec.rb\n@@ -42,12 +42,22 @@\n     }\n   end\n \n+  let(:featured_with_null) do\n+    {\n+      '@context': 'https://www.w3.org/ns/activitystreams',\n+      id: 'https://example.com/account/collections/featured',\n+      totalItems: 0,\n+      type: 'OrderedCollection',\n+    }\n+  end\n+\n   let(:items) do\n     [\n       'https://example.com/account/pinned/known', # known\n       status_json_pinned_unknown_inlined, # unknown inlined\n       'https://example.com/account/pinned/unknown-unreachable', # unknown unreachable\n       'https://example.com/account/pinned/unknown-reachable', # unknown reachable\n+      'https://example.com/account/collections/featured', # featured with null\n     ]\n   end\n \n@@ -66,6 +76,7 @@\n       stub_request(:get, 'https://example.com/account/pinned/unknown-inlined').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_inlined), headers: { 'Content-Type': 'application/activity+json' })\n       stub_request(:get, 'https://example.com/account/pinned/unknown-unreachable').to_return(status: 404)\n       stub_request(:get, 'https://example.com/account/pinned/unknown-reachable').to_return(status: 200, body: Oj.dump(status_json_pinned_unknown_reachable), headers: { 'Content-Type': 'application/activity+json' })\n+      stub_request(:get, 'https://example.com/account/collections/featured').to_return(status: 200, body: Oj.dump(featured_with_null), headers: { 'Content-Type': 'application/activity+json' })\n \n       subject.call(actor, note: true, hashtag: false)\n     end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -39,7 +39,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -64,7 +64,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -90,7 +90,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -122,7 +122,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -145,7 +145,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService, type: :service do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -217,7 +217,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/backup_service_spec.rb\n@@ -60,6 +60,7 @@ def expect_outbox_export\n \n     aggregate_failures do\n       expect(body.scan('@context').count).to eq 1\n+      expect(body.scan('orderedItems').count).to eq 1\n       expect(json['@context']).to_not be_nil\n       expect(json['type']).to eq 'OrderedCollection'\n       expect(json['totalItems']).to eq 2\n---\n\n\n---\n\nChoice B:\napp/lib/webfinger.rb\n@@ -6,6 +6,8 @@ class GoneError < Error; end\n   class RedirectError < Error; end\n \n   class Response\n+    ACTIVITYPUB_READY_TYPE = ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].freeze\n+\n     attr_reader :uri\n \n     def initialize(uri, body)\n@@ -20,17 +22,28 @@ def subject\n     end\n \n     def link(rel, attribute)\n-      links.dig(rel, attribute)\n+      links.dig(rel, 0, attribute)\n+    end\n+\n+    def self_link_href\n+      self_link.fetch('href')\n     end\n \n     private\n \n     def links\n-      @links ||= @json.fetch('links', []).index_by { |link| link['rel'] }\n+      @links ||= @json.fetch('links', []).group_by { |link| link['rel'] }\n+    end\n+\n+    def self_link\n+      links.fetch('self', []).find do |link|\n+        ACTIVITYPUB_READY_TYPE.include?(link['type'])\n+      end\n     end\n \n     def validate_response!\n       raise Webfinger::Error, \"Missing subject in response for #{@uri}\" if subject.blank?\n+      raise Webfinger::Error, \"Missing self link in response for #{@uri}\" if self_link.blank?\n     end\n   end\n \n---\napp/services/activitypub/fetch_remote_actor_service.rb\n@@ -49,7 +49,7 @@ def check_webfinger!\n     confirmed_username, confirmed_domain = split_acct(webfinger.subject)\n \n     if @username.casecmp(confirmed_username).zero? && @domain.casecmp(confirmed_domain).zero?\n-      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+      raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n \n       return\n     end\n@@ -58,8 +58,7 @@ def check_webfinger!\n     @username, @domain                   = split_acct(webfinger.subject)\n \n     raise Webfinger::RedirectError, \"Too many webfinger redirects for URI #{@uri} (stopped at #{@username}@#{@domain})\" unless confirmed_username.casecmp(@username).zero? && confirmed_domain.casecmp(@domain).zero?\n-\n-    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.link('self', 'href') != @uri\n+    raise Error, \"Webfinger response for #{@username}@#{@domain} does not loop back to #{@uri}\" if webfinger.self_link_href != @uri\n   rescue Webfinger::RedirectError => e\n     raise Error, e.message\n   rescue Webfinger::Error => e\n---\napp/services/resolve_account_service.rb\n@@ -106,8 +106,6 @@ def split_acct(acct)\n   end\n \n   def fetch_account!\n-    return unless activitypub_ready?\n-\n     with_redis_lock(\"resolve:#{@username}@#{@domain}\") do\n       @account = ActivityPub::FetchRemoteAccountService.new.call(actor_url, suppress_errors: @options[:suppress_errors])\n     end\n@@ -122,12 +120,8 @@ def webfinger_update_due?\n     @options[:skip_cache] || @account.nil? || @account.possibly_stale?\n   end\n \n-  def activitypub_ready?\n-    ['application/activity+json', 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"'].include?(@webfinger.link('self', 'type'))\n-  end\n-\n   def actor_url\n-    @actor_url ||= @webfinger.link('self', 'href')\n+    @actor_url ||= @webfinger.self_link_href\n   end\n \n   def gone_from_origin?\n---\nspec/fixtures/requests/activitypub-webfinger.txt\n@@ -4,4 +4,4 @@ Content-Type: application/jrd+json; charset=utf-8\n X-Content-Type-Options: nosniff\n Date: Sun, 17 Sep 2017 06:22:50 GMT\n \n-{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n+{\"subject\":\"acct:foo@ap.example.com\",\"aliases\":[\"https://ap.example.com/@foo\",\"https://ap.example.com/users/foo\"],\"links\":[{\"rel\":\"http://webfinger.net/rel/profile-page\",\"type\":\"text/html\",\"href\":\"https://ap.example.com/@foo\"},{\"rel\":\"http://schemas.google.com/g/2010#updates-from\",\"type\":\"application/atom+xml\",\"href\":\"https://ap.example.com/users/foo.atom\"},{\"rel\":\"self\",\"type\":\"application/html\",\"href\":\"https://ap.example.com/users/foo.html\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"self\",\"type\":\"application/json\",\"href\":\"https://ap.example.com/users/foo.json\"},{\"rel\":\"salmon\",\"href\":\"https://ap.example.com/api/salmon/1\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application/magic-public-key,RSA.u3L4vnpNLzVH31MeWI394F0wKeJFsLDAsNXGeOu0QF2x-h1zLWZw_agqD2R3JPU9_kaDJGPIV2Sn5zLyUA9S6swCCMOtn7BBR9g9sucgXJmUFB0tACH2QSgHywMAybGfmSb3LsEMNKsGJ9VsvYoh8lDET6X4Pyw-ZJU0_OLo_41q9w-OrGtlsTm_PuPIeXnxa6BLqnDaxC-4IcjG_FiPahNCTINl_1F_TgSSDZ4Taf4U9XFEIFw8wmgploELozzIzKq-t8nhQYkgAkt64euWpva3qL5KD1mTIZQEP-LZvh3s2WHrLi3fhbdRuwQ2c0KkJA2oSTFPDpqqbPGZ3QvuHQ==.AQAB\"},{\"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\"template\":\"https://ap.example.com/authorize_follow?acct={uri}\"}]}\n\\ No newline at end of file\n---\nspec/fixtures/requests/webfinger.txt\n@@ -8,4 +8,4 @@ Access-Control-Allow-Origin: *\n Vary: Accept-Encoding,Cookie\r\n Strict-Transport-Security: max-age=31536000; includeSubdomains;\r\n \r\n-{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n+{\"subject\":\"acct:gargron@quitter.no\",\"aliases\":[\"https:\\/\\/quitter.no\\/user\\/7477\",\"https:\\/\\/quitter.no\\/gargron\",\"https:\\/\\/quitter.no\\/index.php\\/user\\/7477\",\"https:\\/\\/quitter.no\\/index.php\\/gargron\"],\"links\":[{\"rel\":\"http:\\/\\/webfinger.net\\/rel\\/profile-page\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/gmpg.org\\/xfn\\/11\",\"type\":\"text\\/html\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"describedby\",\"type\":\"application\\/rdf+xml\",\"href\":\"https:\\/\\/quitter.no\\/gargron\\/foaf\"},{\"rel\":\"self\",\"type\":\"application/activity+json\",\"href\":\"https://ap.example.com/users/foo\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/atom\",\"type\":\"application\\/atomsvc+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statusnet\\/app\\/service\\/gargron.xml\"},{\"rel\":\"http:\\/\\/apinamespace.org\\/twitter\",\"href\":\"https:\\/\\/quitter.no\\/api\\/\"},{\"rel\":\"http:\\/\\/specs.openid.net\\/auth\\/2.0\\/provider\",\"href\":\"https:\\/\\/quitter.no\\/gargron\"},{\"rel\":\"http:\\/\\/schemas.google.com\\/g\\/2010#updates-from\",\"type\":\"application\\/atom+xml\",\"href\":\"https:\\/\\/quitter.no\\/api\\/statuses\\/user_timeline\\/7477.atom\"},{\"rel\":\"magic-public-key\",\"href\":\"data:application\\/magic-public-key,RSA.1ZBkHTavLvxH3FzlKv4O6WtlILKRFfNami3_Rcu8EuogtXSYiS-bB6hElZfUCSHbC4uLemOA34PEhz__CDMozax1iI_t8dzjDnh1x0iFSup7pSfW9iXk_WU3Dm74yWWW2jildY41vWgrEstuQ1dJ8vVFfSJ9T_tO4c-T9y8vDI8=.AQAB\"},{\"rel\":\"salmon\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-replies\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/salmon-protocol.org\\/ns\\/salmon-mention\",\"href\":\"https:\\/\\/quitter.no\\/main\\/salmon\\/user\\/7477\"},{\"rel\":\"http:\\/\\/ostatus.org\\/schema\\/1.0\\/subscribe\",\"template\":\"https:\\/\\/quitter.no\\/main\\/ostatussub?profile={uri}\"}]}\r\n---\nspec/lib/webfinger_spec.rb\n@@ -0,0 +1,41 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.describe Webfinger do\n+  describe 'self link' do\n+    context 'when self link is specified with type application/activity+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with type application/ld+json' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"' }] } }\n+\n+      it 'correctly parses the response' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        response = described_class.new('acct:alice@example.com').perform\n+\n+        expect(response.self_link_href).to eq 'https://example.com/alice'\n+      end\n+    end\n+\n+    context 'when self link is specified with incorrect type' do\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/json\"' }] } }\n+\n+      it 'raises an error' do\n+        stub_request(:get, 'https://example.com/.well-known/webfinger?resource=acct:alice@example.com').to_return(body: Oj.dump(webfinger), headers: { 'Content-Type': 'application/jrd+json' })\n+\n+        expect { described_class.new('acct:alice@example.com').perform }.to raise_error(Webfinger::Error)\n+      end\n+    end\n+  end\n+end\n---\nspec/services/activitypub/fetch_remote_account_service_spec.rb\n@@ -33,7 +33,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -51,7 +51,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -72,7 +72,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -95,7 +95,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -111,7 +111,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_actor_service_spec.rb\n@@ -33,7 +33,7 @@\n     end\n \n     context 'when the account does not have a inbox' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         actor[:inbox] = nil\n@@ -51,7 +51,7 @@\n     end\n \n     context 'when URI and WebFinger share the same host' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -72,7 +72,7 @@\n     end\n \n     context 'when WebFinger presents different domain than URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -95,7 +95,7 @@\n     end\n \n     context 'when WebFinger returns a different URI' do\n-      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n@@ -111,7 +111,7 @@\n     end\n \n     context 'when WebFinger returns a different URI after a redirection' do\n-      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob' }] } }\n+      let!(:webfinger) { { subject: 'acct:alice@iscool.af', links: [{ rel: 'self', href: 'https://example.com/bob', type: 'application/activity+json' }] } }\n \n       before do\n         stub_request(:get, 'https://example.com/alice').to_return(body: Oj.dump(actor), headers: { 'Content-Type': 'application/activity+json' })\n---\nspec/services/activitypub/fetch_remote_key_service_spec.rb\n@@ -5,7 +5,7 @@\n RSpec.describe ActivityPub::FetchRemoteKeyService do\n   subject { described_class.new }\n \n-  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice' }] } }\n+  let(:webfinger) { { subject: 'acct:alice@example.com', links: [{ rel: 'self', href: 'https://example.com/alice', type: 'application/activity+json' }] } }\n \n   let(:public_key_pem) do\n     <<~TEXT\n---\nspec/services/activitypub/process_account_service_spec.rb\n@@ -215,7 +215,7 @@\n         }.with_indifferent_access\n         webfinger = {\n           subject: \"acct:user#{i}@foo.test\",\n-          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\" }],\n+          links: [{ rel: 'self', href: \"https://foo.test/users/#{i}\", type: 'application/activity+json' }],\n         }.with_indifferent_access\n         stub_request(:get, \"https://foo.test/users/#{i}\").to_return(status: 200, body: actor_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n         stub_request(:get, \"https://foo.test/users/#{i}/featured\").to_return(status: 200, body: featured_json.to_json, headers: { 'Content-Type': 'application/activity+json' })\n---\n\n\n---\n\nChoice C:\napp/controllers/api/v1/annual_reports_controller.rb\n@@ -17,6 +17,17 @@ def index\n            relationships: @relationships\n   end\n \n+  def show\n+    with_read_replica do\n+      @presenter = AnnualReportsPresenter.new([@annual_report])\n+      @relationships = StatusRelationshipsPresenter.new(@presenter.statuses, current_account.id)\n+    end\n+\n+    render json: @presenter,\n+           serializer: REST::AnnualReportsSerializer,\n+           relationships: @relationships\n+  end\n+\n   def read\n     @annual_report.view!\n     render_empty\n---\napp/javascript/images/archetypes/booster.png\nNone\n---\napp/javascript/images/archetypes/lurker.png\nNone\n---\napp/javascript/images/archetypes/oracle.png\nNone\n---\napp/javascript/images/archetypes/pollster.png\nNone\n---\napp/javascript/images/archetypes/replier.png\nNone\n---\napp/javascript/mastodon/api_types/notifications.ts\n@@ -20,6 +20,7 @@ export const allNotificationTypes = [\n   'admin.report',\n   'moderation_warning',\n   'severed_relationships',\n+  'annual_report',\n ];\n \n export type NotificationWithStatusType =\n@@ -37,7 +38,8 @@ export type NotificationType =\n   | 'moderation_warning'\n   | 'severed_relationships'\n   | 'admin.sign_up'\n-  | 'admin.report';\n+  | 'admin.report'\n+  | 'annual_report';\n \n export interface BaseNotificationJSON {\n   id: string;\n@@ -130,6 +132,15 @@ interface AccountRelationshipSeveranceNotificationJSON\n   event: ApiAccountRelationshipSeveranceEventJSON;\n }\n \n+export interface ApiAnnualReportEventJSON {\n+  year: string;\n+}\n+\n+interface AnnualReportNotificationGroupJSON extends BaseNotificationGroupJSON {\n+  type: 'annual_report';\n+  annual_report: ApiAnnualReportEventJSON;\n+}\n+\n export type ApiNotificationJSON =\n   | SimpleNotificationJSON\n   | ReportNotificationJSON\n@@ -142,7 +153,8 @@ export type ApiNotificationGroupJSON =\n   | ReportNotificationGroupJSON\n   | AccountRelationshipSeveranceNotificationGroupJSON\n   | NotificationGroupWithStatusJSON\n-  | ModerationWarningNotificationGroupJSON;\n+  | ModerationWarningNotificationGroupJSON\n+  | AnnualReportNotificationGroupJSON;\n \n export interface ApiNotificationGroupsResultJSON {\n   accounts: ApiAccountJSON[];\n---\napp/javascript/mastodon/components/modal_root.jsx\n@@ -13,11 +13,14 @@ class ModalRoot extends PureComponent {\n   static propTypes = {\n     children: PropTypes.node,\n     onClose: PropTypes.func.isRequired,\n-    backgroundColor: PropTypes.shape({\n-      r: PropTypes.number,\n-      g: PropTypes.number,\n-      b: PropTypes.number,\n-    }),\n+    backgroundColor: PropTypes.oneOfType([\n+      PropTypes.string,\n+      PropTypes.shape({\n+        r: PropTypes.number,\n+        g: PropTypes.number,\n+        b: PropTypes.number,\n+      }),\n+    ]),\n     ignoreFocus: PropTypes.bool,\n     ...WithOptionalRouterPropTypes,\n   };\n@@ -141,14 +144,17 @@ class ModalRoot extends PureComponent {\n \n     let backgroundColor = null;\n \n-    if (this.props.backgroundColor) {\n-      backgroundColor = multiply({ ...this.props.backgroundColor, a: 1 }, { r: 0, g: 0, b: 0, a: 0.7 });\n+    if (this.props.backgroundColor && typeof this.props.backgroundColor === 'string') {\n+      backgroundColor = this.props.backgroundColor;\n+    } else if (this.props.backgroundColor) {\n+      const darkenedColor = multiply({ ...this.props.backgroundColor, a: 1 }, { r: 0, g: 0, b: 0, a: 0.7 });\n+      backgroundColor = `rgb(${darkenedColor.r}, ${darkenedColor.g}, ${darkenedColor.b})`;\n     }\n \n     return (\n       <div className='modal-root' ref={this.setRef}>\n         <div style={{ pointerEvents: visible ? 'auto' : 'none' }}>\n-          <div role='presentation' className='modal-root__overlay' onClick={onClose} style={{ backgroundColor: backgroundColor ? `rgba(${backgroundColor.r}, ${backgroundColor.g}, ${backgroundColor.b}, 0.9)` : null }} />\n+          <div role='presentation' className='modal-root__overlay' onClick={onClose} style={{ backgroundColor }} />\n           <div role='dialog' className='modal-root__container'>{children}</div>\n         </div>\n       </div>\n---\napp/javascript/mastodon/features/annual_report/archetype.tsx\n@@ -0,0 +1,69 @@\n+import { FormattedMessage } from 'react-intl';\n+\n+import booster from '@/images/archetypes/booster.png';\n+import lurker from '@/images/archetypes/lurker.png';\n+import oracle from '@/images/archetypes/oracle.png';\n+import pollster from '@/images/archetypes/pollster.png';\n+import replier from '@/images/archetypes/replier.png';\n+import type { Archetype as ArchetypeData } from 'mastodon/models/annual_report';\n+\n+export const Archetype: React.FC<{\n+  data: ArchetypeData;\n+}> = ({ data }) => {\n+  let illustration, label;\n+\n+  switch (data) {\n+    case 'booster':\n+      illustration = booster;\n+      label = (\n+        <FormattedMessage\n+          id='annual_report.summary.archetype.booster'\n+          defaultMessage='The cool-hunter'\n+        />\n+      );\n+      break;\n+    case 'replier':\n+      illustration = replier;\n+      label = (\n+        <FormattedMessage\n+          id='annual_report.summary.archetype.replier'\n+          defaultMessage='The social butterfly'\n+        />\n+      );\n+      break;\n+    case 'pollster':\n+      illustration = pollster;\n+      label = (\n+        <FormattedMessage\n+          id='annual_report.summary.archetype.pollster'\n+          defaultMessage='The pollster'\n+        />\n+      );\n+      break;\n+    case 'lurker':\n+      illustration = lurker;\n+      label = (\n+        <FormattedMessage\n+          id='annual_report.summary.archetype.lurker'\n+          defaultMessage='The lurker'\n+        />\n+      );\n+      break;\n+    case 'oracle':\n+      illustration = oracle;\n+      label = (\n+        <FormattedMessage\n+          id='annual_report.summary.archetype.oracle'\n+          defaultMessage='The oracle'\n+        />\n+      );\n+      break;\n+  }\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__archetype'>\n+      <div className='annual-report__summary__archetype__label'>{label}</div>\n+      <img src={illustration} alt='' />\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/followers.tsx\n@@ -0,0 +1,69 @@\n+import { FormattedMessage, FormattedNumber } from 'react-intl';\n+\n+import { Sparklines, SparklinesCurve } from 'react-sparklines';\n+\n+import { ShortNumber } from 'mastodon/components/short_number';\n+import type { TimeSeriesMonth } from 'mastodon/models/annual_report';\n+\n+export const Followers: React.FC<{\n+  data: TimeSeriesMonth[];\n+  total?: number;\n+}> = ({ data, total }) => {\n+  const change = data.reduce((sum, item) => sum + item.followers, 0);\n+\n+  const cumulativeGraph = data.reduce(\n+    (newData, item) => [\n+      ...newData,\n+      item.followers + (newData[newData.length - 1] ?? 0),\n+    ],\n+    [0],\n+  );\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__followers'>\n+      <Sparklines data={cumulativeGraph} margin={0}>\n+        <svg>\n+          <defs>\n+            <linearGradient id='gradient' x1='0%' y1='0%' x2='0%' y2='100%'>\n+              <stop\n+                offset='0%'\n+                stopColor='var(--sparkline-gradient-top)'\n+                stopOpacity='1'\n+              />\n+              <stop\n+                offset='100%'\n+                stopColor='var(--sparkline-gradient-bottom)'\n+                stopOpacity='0'\n+              />\n+            </linearGradient>\n+          </defs>\n+        </svg>\n+\n+        <SparklinesCurve style={{ fill: 'none' }} />\n+      </Sparklines>\n+\n+      <div className='annual-report__summary__followers__foreground'>\n+        <div className='annual-report__summary__followers__number'>\n+          {change > -1 ? '+' : '-'}\n+          <FormattedNumber value={change} />\n+        </div>\n+\n+        <div className='annual-report__summary__followers__label'>\n+          <span>\n+            <FormattedMessage\n+              id='annual_report.summary.followers.followers'\n+              defaultMessage='followers'\n+            />\n+          </span>\n+          <div className='annual-report__summary__followers__footnote'>\n+            <FormattedMessage\n+              id='annual_report.summary.followers.total'\n+              defaultMessage='{count} total'\n+              values={{ count: <ShortNumber value={total ?? 0} /> }}\n+            />\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/highlighted_post.tsx\n@@ -0,0 +1,105 @@\n+/* eslint-disable @typescript-eslint/no-unsafe-return,\n+                  @typescript-eslint/no-explicit-any,\n+                  @typescript-eslint/no-unsafe-assignment */\n+\n+import { useCallback } from 'react';\n+\n+import { FormattedMessage } from 'react-intl';\n+\n+import { toggleStatusSpoilers } from 'mastodon/actions/statuses';\n+import { DetailedStatus } from 'mastodon/features/status/components/detailed_status';\n+import { me } from 'mastodon/initial_state';\n+import type { TopStatuses } from 'mastodon/models/annual_report';\n+import { makeGetStatus, makeGetPictureInPicture } from 'mastodon/selectors';\n+import { useAppSelector, useAppDispatch } from 'mastodon/store';\n+\n+const getStatus = makeGetStatus() as unknown as (arg0: any, arg1: any) => any;\n+const getPictureInPicture = makeGetPictureInPicture() as unknown as (\n+  arg0: any,\n+  arg1: any,\n+) => any;\n+\n+export const HighlightedPost: React.FC<{\n+  data: TopStatuses;\n+}> = ({ data }) => {\n+  let statusId, label;\n+\n+  if (data.by_reblogs) {\n+    statusId = data.by_reblogs;\n+    label = (\n+      <FormattedMessage\n+        id='annual_report.summary.highlighted_post.by_reblogs'\n+        defaultMessage='most boosted post'\n+      />\n+    );\n+  } else if (data.by_favourites) {\n+    statusId = data.by_favourites;\n+    label = (\n+      <FormattedMessage\n+        id='annual_report.summary.highlighted_post.by_favourites'\n+        defaultMessage='most favourited post'\n+      />\n+    );\n+  } else {\n+    statusId = data.by_replies;\n+    label = (\n+      <FormattedMessage\n+        id='annual_report.summary.highlighted_post.by_replies'\n+        defaultMessage='post with the most replies'\n+      />\n+    );\n+  }\n+\n+  const dispatch = useAppDispatch();\n+  const domain = useAppSelector((state) => state.meta.get('domain'));\n+  const status = useAppSelector((state) =>\n+    statusId ? getStatus(state, { id: statusId }) : undefined,\n+  );\n+  const pictureInPicture = useAppSelector((state) =>\n+    statusId ? getPictureInPicture(state, { id: statusId }) : undefined,\n+  );\n+  const account = useAppSelector((state) =>\n+    me ? state.accounts.get(me) : undefined,\n+  );\n+\n+  const handleToggleHidden = useCallback(() => {\n+    dispatch(toggleStatusSpoilers(statusId));\n+  }, [dispatch, statusId]);\n+\n+  if (!status) {\n+    return (\n+      <div className='annual-report__bento__box annual-report__summary__most-boosted-post' />\n+    );\n+  }\n+\n+  const displayName = (\n+    <span className='display-name'>\n+      <strong className='display-name__html'>\n+        <FormattedMessage\n+          id='annual_report.summary.highlighted_post.possessive'\n+          defaultMessage=\"{name}'s\"\n+          values={{\n+            name: account && (\n+              <bdi\n+                dangerouslySetInnerHTML={{ __html: account.display_name_html }}\n+              />\n+            ),\n+          }}\n+        />\n+      </strong>\n+      <span className='display-name__account'>{label}</span>\n+    </span>\n+  );\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__most-boosted-post'>\n+      <DetailedStatus\n+        status={status}\n+        pictureInPicture={pictureInPicture}\n+        domain={domain}\n+        onToggleHidden={handleToggleHidden}\n+        overrideDisplayName={displayName}\n+      />\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/index.tsx\n@@ -0,0 +1,99 @@\n+import { useState, useEffect } from 'react';\n+\n+import { FormattedMessage } from 'react-intl';\n+\n+import {\n+  importFetchedStatuses,\n+  importFetchedAccounts,\n+} from 'mastodon/actions/importer';\n+import { apiRequestGet, apiRequestPost } from 'mastodon/api';\n+import { LoadingIndicator } from 'mastodon/components/loading_indicator';\n+import { me } from 'mastodon/initial_state';\n+import type { Account } from 'mastodon/models/account';\n+import type { AnnualReport as AnnualReportData } from 'mastodon/models/annual_report';\n+import type { Status } from 'mastodon/models/status';\n+import { useAppSelector, useAppDispatch } from 'mastodon/store';\n+\n+import { Archetype } from './archetype';\n+import { Followers } from './followers';\n+import { HighlightedPost } from './highlighted_post';\n+import { MostUsedHashtag } from './most_used_hashtag';\n+import { NewPosts } from './new_posts';\n+import { Percentile } from './percentile';\n+\n+interface AnnualReportResponse {\n+  annual_reports: AnnualReportData[];\n+  accounts: Account[];\n+  statuses: Status[];\n+}\n+\n+export const AnnualReport: React.FC<{\n+  year: string;\n+}> = ({ year }) => {\n+  const [response, setResponse] = useState<AnnualReportResponse | null>(null);\n+  const [loading, setLoading] = useState(false);\n+  const currentAccount = useAppSelector((state) =>\n+    me ? state.accounts.get(me) : undefined,\n+  );\n+  const dispatch = useAppDispatch();\n+\n+  useEffect(() => {\n+    setLoading(true);\n+\n+    apiRequestGet<AnnualReportResponse>(`v1/annual_reports/${year}`)\n+      .then((data) => {\n+        dispatch(importFetchedStatuses(data.statuses));\n+        dispatch(importFetchedAccounts(data.accounts));\n+\n+        setResponse(data);\n+        setLoading(false);\n+\n+        return apiRequestPost(`v1/annual_reports/${year}/read`);\n+      })\n+      .catch(() => {\n+        setLoading(false);\n+      });\n+  }, [dispatch, year, setResponse, setLoading]);\n+\n+  if (loading) {\n+    return <LoadingIndicator />;\n+  }\n+\n+  const report = response?.annual_reports[0];\n+\n+  if (!report) {\n+    return null;\n+  }\n+\n+  return (\n+    <div className='annual-report'>\n+      <div className='annual-report__header'>\n+        <h1>\n+          <FormattedMessage\n+            id='annual_report.summary.thanks'\n+            defaultMessage='Thanks for being part of Mastodon!'\n+          />\n+        </h1>\n+        <p>\n+          <FormattedMessage\n+            id='annual_report.summary.here_it_is'\n+            defaultMessage='Here is your {year} in review:'\n+            values={{ year: report.year }}\n+          />\n+        </p>\n+      </div>\n+\n+      <div className='annual-report__bento annual-report__summary'>\n+        <Archetype data={report.data.archetype} />\n+        <HighlightedPost data={report.data.top_statuses} />\n+        <Followers\n+          data={report.data.time_series}\n+          total={currentAccount?.followers_count}\n+        />\n+        <MostUsedHashtag data={report.data.top_hashtags} />\n+        <Percentile data={report.data.percentiles} />\n+        <NewPosts data={report.data.time_series} />\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/most_used_app.tsx\n@@ -0,0 +1,29 @@\n+import { FormattedMessage } from 'react-intl';\n+\n+import type { NameAndCount } from 'mastodon/models/annual_report';\n+\n+export const MostUsedApp: React.FC<{\n+  data: NameAndCount[];\n+}> = ({ data }) => {\n+  const app = data[0];\n+\n+  if (!app) {\n+    return (\n+      <div className='annual-report__bento__box annual-report__summary__most-used-app' />\n+    );\n+  }\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__most-used-app'>\n+      <div className='annual-report__summary__most-used-app__icon'>\n+        {app.name}\n+      </div>\n+      <div className='annual-report__summary__most-used-app__label'>\n+        <FormattedMessage\n+          id='annual_report.summary.most_used_app.most_used_app'\n+          defaultMessage='most used app'\n+        />\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/most_used_hashtag.tsx\n@@ -0,0 +1,29 @@\n+import { FormattedMessage } from 'react-intl';\n+\n+import type { NameAndCount } from 'mastodon/models/annual_report';\n+\n+export const MostUsedHashtag: React.FC<{\n+  data: NameAndCount[];\n+}> = ({ data }) => {\n+  const hashtag = data[0];\n+\n+  if (!hashtag) {\n+    return (\n+      <div className='annual-report__bento__box annual-report__summary__most-used-hashtag' />\n+    );\n+  }\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__most-used-hashtag'>\n+      <div className='annual-report__summary__most-used-hashtag__hashtag'>\n+        #{hashtag.name}\n+      </div>\n+      <div className='annual-report__summary__most-used-hashtag__label'>\n+        <FormattedMessage\n+          id='annual_report.summary.most_used_hashtag.most_used_hashtag'\n+          defaultMessage='most used hashtag'\n+        />\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/new_posts.tsx\n@@ -0,0 +1,53 @@\n+import { FormattedNumber, FormattedMessage } from 'react-intl';\n+\n+import ChatBubbleIcon from '@/material-icons/400-24px/chat_bubble.svg?react';\n+import type { TimeSeriesMonth } from 'mastodon/models/annual_report';\n+\n+export const NewPosts: React.FC<{\n+  data: TimeSeriesMonth[];\n+}> = ({ data }) => {\n+  const posts = data.reduce((sum, item) => sum + item.statuses, 0);\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__new-posts'>\n+      <svg width={500} height={500}>\n+        <defs>\n+          <pattern\n+            id='posts'\n+            x='0'\n+            y='0'\n+            width='32'\n+            height='35'\n+            patternUnits='userSpaceOnUse'\n+          >\n+            <circle cx='12' cy='12' r='12' fill='var(--lime)' />\n+            <ChatBubbleIcon\n+              fill='var(--indigo-1)'\n+              x='4'\n+              y='4'\n+              width='16'\n+              height='16'\n+            />\n+          </pattern>\n+        </defs>\n+\n+        <rect\n+          width={500}\n+          height={500}\n+          fill='url(#posts)'\n+          style={{ opacity: 0.2 }}\n+        />\n+      </svg>\n+\n+      <div className='annual-report__summary__new-posts__number'>\n+        <FormattedNumber value={posts} />\n+      </div>\n+      <div className='annual-report__summary__new-posts__label'>\n+        <FormattedMessage\n+          id='annual_report.summary.new_posts.new_posts'\n+          defaultMessage='new posts'\n+        />\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/annual_report/percentile.tsx\n@@ -0,0 +1,53 @@\n+/* eslint-disable react/jsx-no-useless-fragment */\n+import { FormattedMessage, FormattedNumber } from 'react-intl';\n+\n+import type { Percentiles } from 'mastodon/models/annual_report';\n+\n+export const Percentile: React.FC<{\n+  data: Percentiles;\n+}> = ({ data }) => {\n+  const percentile = data.statuses;\n+\n+  return (\n+    <div className='annual-report__bento__box annual-report__summary__percentile'>\n+      <FormattedMessage\n+        id='annual_report.summary.percentile.text'\n+        defaultMessage='<topLabel>That puts you in the top</topLabel><percentage></percentage><bottomLabel>of Mastodon users.</bottomLabel>'\n+        values={{\n+          topLabel: (str) => (\n+            <div className='annual-report__summary__percentile__label'>\n+              {str}\n+            </div>\n+          ),\n+          percentage: () => (\n+            <div className='annual-report__summary__percentile__number'>\n+              <FormattedNumber\n+                value={percentile / 100}\n+                style='percent'\n+                maximumFractionDigits={1}\n+              />\n+            </div>\n+          ),\n+          bottomLabel: (str) => (\n+            <div>\n+              <div className='annual-report__summary__percentile__label'>\n+                {str}\n+              </div>\n+\n+              {percentile < 6 && (\n+                <div className='annual-report__summary__percentile__footnote'>\n+                  <FormattedMessage\n+                    id='annual_report.summary.percentile.we_wont_tell_bernie'\n+                    defaultMessage=\"We won't tell Bernie.\"\n+                  />\n+                </div>\n+              )}\n+            </div>\n+          ),\n+        }}\n+      >\n+        {(message) => <>{message}</>}\n+      </FormattedMessage>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_annual_report.tsx\n@@ -0,0 +1,59 @@\n+import { useCallback } from 'react';\n+\n+import { FormattedMessage } from 'react-intl';\n+\n+import classNames from 'classnames';\n+\n+import CelebrationIcon from '@/material-icons/400-24px/celebration.svg?react';\n+import { openModal } from 'mastodon/actions/modal';\n+import { Icon } from 'mastodon/components/icon';\n+import type { NotificationGroupAnnualReport } from 'mastodon/models/notification_group';\n+import { useAppDispatch } from 'mastodon/store';\n+\n+export const NotificationAnnualReport: React.FC<{\n+  notification: NotificationGroupAnnualReport;\n+  unread: boolean;\n+}> = ({ notification: { annualReport }, unread }) => {\n+  const dispatch = useAppDispatch();\n+  const year = annualReport.year;\n+\n+  const handleClick = useCallback(() => {\n+    dispatch(\n+      openModal({\n+        modalType: 'ANNUAL_REPORT',\n+        modalProps: { year },\n+      }),\n+    );\n+  }, [dispatch, year]);\n+\n+  return (\n+    <div\n+      role='button'\n+      className={classNames(\n+        'notification-group notification-group--link notification-group--annual-report focusable',\n+        { 'notification-group--unread': unread },\n+      )}\n+      tabIndex={0}\n+    >\n+      <div className='notification-group__icon'>\n+        <Icon id='celebration' icon={CelebrationIcon} />\n+      </div>\n+\n+      <div className='notification-group__main'>\n+        <p>\n+          <FormattedMessage\n+            id='notification.annual_report.message'\n+            defaultMessage=\"Your {year} #Wrapstodon awaits! Unveil your year's highlights and memorable moments on Mastodon!\"\n+            values={{ year }}\n+          />\n+        </p>\n+        <button onClick={handleClick} className='link-button'>\n+          <FormattedMessage\n+            id='notification.annual_report.view'\n+            defaultMessage='View #Wrapstodon'\n+          />\n+        </button>\n+      </div>\n+    </div>\n+  );\n+};\n---\napp/javascript/mastodon/features/notifications_v2/components/notification_group.tsx\n@@ -9,6 +9,7 @@ import { useAppSelector, useAppDispatch } from 'mastodon/store';\n \n import { NotificationAdminReport } from './notification_admin_report';\n import { NotificationAdminSignUp } from './notification_admin_sign_up';\n+import { NotificationAnnualReport } from './notification_annual_report';\n import { NotificationFavourite } from './notification_favourite';\n import { NotificationFollow } from './notification_follow';\n import { NotificationFollowRequest } from './notification_follow_request';\n@@ -143,6 +144,14 @@ export const NotificationGroup: React.FC<{\n         />\n       );\n       break;\n+    case 'annual_report':\n+      content = (\n+        <NotificationAnnualReport\n+          unread={unread}\n+          notification={notificationGroup}\n+        />\n+      );\n+      break;\n     default:\n       return null;\n   }\n---\napp/javascript/mastodon/features/status/components/detailed_status.tsx\n@@ -49,6 +49,7 @@ export const DetailedStatus: React.FC<{\n   domain: string;\n   showMedia?: boolean;\n   withLogo?: boolean;\n+  overrideDisplayName?: React.ReactNode;\n   pictureInPicture: any;\n   onToggleHidden?: (status: any) => void;\n   onToggleMediaVisibility?: () => void;\n@@ -62,6 +63,7 @@ export const DetailedStatus: React.FC<{\n   domain,\n   showMedia,\n   withLogo,\n+  overrideDisplayName,\n   pictureInPicture,\n   onToggleMediaVisibility,\n   onToggleHidden,\n@@ -319,7 +321,11 @@ export const DetailedStatus: React.FC<{\n           <div className='detailed-status__display-avatar'>\n             <Avatar account={status.get('account')} size={46} />\n           </div>\n-          <DisplayName account={status.get('account')} localDomain={domain} />\n+\n+          {overrideDisplayName ?? (\n+            <DisplayName account={status.get('account')} localDomain={domain} />\n+          )}\n+\n           {withLogo && (\n             <>\n               <div className='spacer' />\n---\napp/javascript/mastodon/features/ui/components/annual_report_modal.tsx\n@@ -0,0 +1,21 @@\n+import { useEffect } from 'react';\n+\n+import { AnnualReport } from 'mastodon/features/annual_report';\n+\n+const AnnualReportModal: React.FC<{\n+  year: string;\n+  onChangeBackgroundColor: (arg0: string) => void;\n+}> = ({ year, onChangeBackgroundColor }) => {\n+  useEffect(() => {\n+    onChangeBackgroundColor('var(--indigo-1)');\n+  }, [onChangeBackgroundColor]);\n+\n+  return (\n+    <div className='modal-root__modal annual-report-modal'>\n+      <AnnualReport year={year} />\n+    </div>\n+  );\n+};\n+\n+// eslint-disable-next-line import/no-default-export\n+export default AnnualReportModal;\n---\napp/javascript/mastodon/features/ui/components/modal_root.jsx\n@@ -18,6 +18,7 @@ import {\n   SubscribedLanguagesModal,\n   ClosedRegistrationsModal,\n   IgnoreNotificationsModal,\n+  AnnualReportModal,\n } from 'mastodon/features/ui/util/async-components';\n import { getScrollbarWidth } from 'mastodon/utils/scrollbar';\n \n@@ -72,6 +73,7 @@ export const MODAL_COMPONENTS = {\n   'INTERACTION': InteractionModal,\n   'CLOSED_REGISTRATIONS': ClosedRegistrationsModal,\n   'IGNORE_NOTIFICATIONS': IgnoreNotificationsModal,\n+  'ANNUAL_REPORT': AnnualReportModal,\n };\n \n export default class ModalRoot extends PureComponent {\n---\napp/javascript/mastodon/features/ui/util/async-components.js\n@@ -217,3 +217,7 @@ export function NotificationRequest () {\n export function LinkTimeline () {\n   return import(/*webpackChunkName: \"features/link_timeline\" */'../../link_timeline');\n }\n+\n+export function AnnualReportModal () {\n+  return import(/*webpackChunkName: \"modals/annual_report_modal\" */'../components/annual_report_modal');\n+}\n---\napp/javascript/mastodon/locales/en.json\n@@ -87,6 +87,24 @@\n   \"alert.unexpected.title\": \"Oops!\",\n   \"alt_text_badge.title\": \"Alt text\",\n   \"announcement.announcement\": \"Announcement\",\n+  \"annual_report.summary.archetype.booster\": \"The cool-hunter\",\n+  \"annual_report.summary.archetype.lurker\": \"The lurker\",\n+  \"annual_report.summary.archetype.oracle\": \"The oracle\",\n+  \"annual_report.summary.archetype.pollster\": \"The pollster\",\n+  \"annual_report.summary.archetype.replier\": \"The social butterfly\",\n+  \"annual_report.summary.followers.followers\": \"followers\",\n+  \"annual_report.summary.followers.total\": \"{count} total\",\n+  \"annual_report.summary.here_it_is\": \"Here is your {year} in review:\",\n+  \"annual_report.summary.highlighted_post.by_favourites\": \"most favourited post\",\n+  \"annual_report.summary.highlighted_post.by_reblogs\": \"most boosted post\",\n+  \"annual_report.summary.highlighted_post.by_replies\": \"post with the most replies\",\n+  \"annual_report.summary.highlighted_post.possessive\": \"{name}'s\",\n+  \"annual_report.summary.most_used_app.most_used_app\": \"most used app\",\n+  \"annual_report.summary.most_used_hashtag.most_used_hashtag\": \"most used hashtag\",\n+  \"annual_report.summary.new_posts.new_posts\": \"new posts\",\n+  \"annual_report.summary.percentile.text\": \"<topLabel>That puts you in the top</topLabel><percentage></percentage><bottomLabel>of Mastodon users.</bottomLabel>\",\n+  \"annual_report.summary.percentile.we_wont_tell_bernie\": \"We won't tell Bernie.\",\n+  \"annual_report.summary.thanks\": \"Thanks for being part of Mastodon!\",\n   \"attachments_list.unprocessed\": \"(unprocessed)\",\n   \"audio.hide\": \"Hide audio\",\n   \"block_modal.remote_users_caveat\": \"We will ask the server {domain} to respect your decision. However, compliance is not guaranteed since some servers may handle blocks differently. Public posts may still be visible to non-logged-in users.\",\n@@ -508,6 +526,8 @@\n   \"notification.admin.report_statuses_other\": \"{name} reported {target}\",\n   \"notification.admin.sign_up\": \"{name} signed up\",\n   \"notification.admin.sign_up.name_and_others\": \"{name} and {count, plural, one {# other} other {# others}} signed up\",\n+  \"notification.annual_report.message\": \"Your {year} #Wrapstodon awaits! Unveil your year's highlights and memorable moments on Mastodon!\",\n+  \"notification.annual_report.view\": \"View #Wrapstodon\",\n   \"notification.favourite\": \"{name} favorited your post\",\n   \"notification.favourite.name_and_others_with_link\": \"{name} and <a>{count, plural, one {# other} other {# others}}</a> favorited your post\",\n   \"notification.follow\": \"{name} followed you\",\n---\napp/javascript/mastodon/models/annual_report.ts\n@@ -0,0 +1,44 @@\n+export interface Percentiles {\n+  followers: number;\n+  statuses: number;\n+}\n+\n+export interface NameAndCount {\n+  name: string;\n+  count: number;\n+}\n+\n+export interface TimeSeriesMonth {\n+  month: number;\n+  statuses: number;\n+  following: number;\n+  followers: number;\n+}\n+\n+export interface TopStatuses {\n+  by_reblogs: number;\n+  by_favourites: number;\n+  by_replies: number;\n+}\n+\n+export type Archetype =\n+  | 'lurker'\n+  | 'booster'\n+  | 'pollster'\n+  | 'replier'\n+  | 'oracle';\n+\n+interface AnnualReportV1 {\n+  most_used_apps: NameAndCount[];\n+  percentiles: Percentiles;\n+  top_hashtags: NameAndCount[];\n+  top_statuses: TopStatuses;\n+  time_series: TimeSeriesMonth[];\n+  archetype: Archetype;\n+}\n+\n+export interface AnnualReport {\n+  year: number;\n+  schema_version: number;\n+  data: AnnualReportV1;\n+}\n---\napp/javascript/mastodon/models/notification_group.ts\n@@ -1,6 +1,7 @@\n import type {\n   ApiAccountRelationshipSeveranceEventJSON,\n   ApiAccountWarningJSON,\n+  ApiAnnualReportEventJSON,\n   BaseNotificationGroupJSON,\n   ApiNotificationGroupJSON,\n   ApiNotificationJSON,\n@@ -65,6 +66,12 @@ export interface NotificationGroupSeveredRelationships\n   event: AccountRelationshipSeveranceEvent;\n }\n \n+type AnnualReportEvent = ApiAnnualReportEventJSON;\n+export interface NotificationGroupAnnualReport\n+  extends BaseNotification<'annual_report'> {\n+  annualReport: AnnualReportEvent;\n+}\n+\n interface Report extends Omit<ApiReportJSON, 'target_account'> {\n   targetAccountId: string;\n }\n@@ -86,7 +93,8 @@ export type NotificationGroup =\n   | NotificationGroupModerationWarning\n   | NotificationGroupSeveredRelationships\n   | NotificationGroupAdminSignUp\n-  | NotificationGroupAdminReport;\n+  | NotificationGroupAdminReport\n+  | NotificationGroupAnnualReport;\n \n function createReportFromJSON(reportJSON: ApiReportJSON): Report {\n   const { target_account, ...report } = reportJSON;\n@@ -112,6 +120,12 @@ function createAccountRelationshipSeveranceEventFromJSON(\n   return eventJson;\n }\n \n+function createAnnualReportEventFromJSON(\n+  eventJson: ApiAnnualReportEventJSON,\n+): AnnualReportEvent {\n+  return eventJson;\n+}\n+\n export function createNotificationGroupFromJSON(\n   groupJson: ApiNotificationGroupJSON,\n ): NotificationGroup {\n@@ -145,7 +159,6 @@ export function createNotificationGroupFromJSON(\n         event: createAccountRelationshipSeveranceEventFromJSON(group.event),\n         sampleAccountIds,\n       };\n-\n     case 'moderation_warning': {\n       const { moderation_warning, ...groupWithoutModerationWarning } = group;\n       return {\n@@ -154,6 +167,14 @@ export function createNotificationGroupFromJSON(\n         sampleAccountIds,\n       };\n     }\n+    case 'annual_report': {\n+      const { annual_report, ...groupWithoutAnnualReport } = group;\n+      return {\n+        ...groupWithoutAnnualReport,\n+        annualReport: createAnnualReportEventFromJSON(annual_report),\n+        sampleAccountIds,\n+      };\n+    }\n     default:\n       return {\n         sampleAccountIds,\n---\napp/javascript/material-icons/400-24px/celebration-fill.svg\n@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m80-80 200-560 360 360L80-80Zm502-378-42-42 224-224q32-32 77-32t77 32l24 24-42 42-24-24q-14-14-35-14t-35 14L582-458ZM422-618l-42-42 24-24q14-14 14-34t-14-34l-26-26 42-42 26 26q32 32 32 76t-32 76l-24 24Zm80 80-42-42 144-144q14-14 14-35t-14-35l-64-64 42-42 64 64q32 32 32 77t-32 77L502-538Zm160 160-42-42 64-64q32-32 77-32t77 32l64 64-42 42-64-64q-14-14-35-14t-35 14l-64 64Z\"/></svg>\n\\ No newline at end of file\n---\napp/javascript/material-icons/400-24px/celebration.svg\n@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m80-80 200-560 360 360L80-80Zm132-132 282-100-182-182-100 282Zm370-246-42-42 224-224q32-32 77-32t77 32l24 24-42 42-24-24q-14-14-35-14t-35 14L582-458ZM422-618l-42-42 24-24q14-14 14-34t-14-34l-26-26 42-42 26 26q32 32 32 76t-32 76l-24 24Zm80 80-42-42 144-144q14-14 14-35t-14-35l-64-64 42-42 64 64q32 32 32 77t-32 77L502-538Zm160 160-42-42 64-64q32-32 77-32t77 32l64 64-42 42-64-64q-14-14-35-14t-35 14l-64 64ZM212-212Z\"/></svg>\n\\ No newline at end of file\n---\napp/javascript/material-icons/400-24px/explore-fill.svg\n@@ -1 +1 @@\n-<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m260-260 300-140 140-300-300 140-140 300Zm220-180q-17 0-28.5-11.5T440-480q0-17 11.5-28.5T480-520q17 0 28.5 11.5T520-480q0 17-11.5 28.5T480-440Zm0 360q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Z\"/></svg>\n\\ No newline at end of file\n+<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m300-300 280-80 80-280-280 80-80 280Zm180-120q-25 0-42.5-17.5T420-480q0-25 17.5-42.5T480-540q25 0 42.5 17.5T540-480q0 25-17.5 42.5T480-420Zm0 340q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Z\"/></svg>\n\\ No newline at end of file\n---\napp/javascript/material-icons/400-24px/explore.svg\n@@ -1 +1 @@\n-<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m260-260 300-140 140-300-300 140-140 300Zm220-180q-17 0-28.5-11.5T440-480q0-17 11.5-28.5T480-520q17 0 28.5 11.5T520-480q0 17-11.5 28.5T480-440Zm0 360q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z\"/></svg>\n\\ No newline at end of file\n+<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"m300-300 280-80 80-280-280 80-80 280Zm180-120q-25 0-42.5-17.5T420-480q0-25 17.5-42.5T480-540q25 0 42.5 17.5T540-480q0 25-17.5 42.5T480-420Zm0 340q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q133 0 226.5-93.5T800-480q0-133-93.5-226.5T480-800q-133 0-226.5 93.5T160-480q0 133 93.5 226.5T480-160Zm0-320Z\"/></svg>\n\\ No newline at end of file\n---\napp/javascript/styles/application.scss\n@@ -15,6 +15,7 @@\n @import 'mastodon/polls';\n @import 'mastodon/modal';\n @import 'mastodon/emoji_picker';\n+@import 'mastodon/annual_reports';\n @import 'mastodon/about';\n @import 'mastodon/tables';\n @import 'mastodon/admin';\n---\napp/javascript/styles/mastodon/annual_reports.scss\n@@ -0,0 +1,335 @@\n+:root {\n+  --indigo-1: #17063b;\n+  --indigo-2: #2f0c7a;\n+  --indigo-3: #562cfc;\n+  --indigo-5: #858afa;\n+  --indigo-6: #cccfff;\n+  --lime: #baff3b;\n+  --goldenrod-2: #ffc954;\n+}\n+\n+.annual-report {\n+  flex: 0 0 auto;\n+  background: var(--indigo-1);\n+  padding: 24px;\n+\n+  &__header {\n+    margin-bottom: 16px;\n+\n+    h1 {\n+      font-size: 25px;\n+      font-weight: 600;\n+      line-height: 30px;\n+      color: var(--lime);\n+      margin-bottom: 8px;\n+    }\n+\n+    p {\n+      font-size: 16px;\n+      font-weight: 600;\n+      line-height: 20px;\n+      color: var(--indigo-6);\n+    }\n+  }\n+\n+  &__bento {\n+    display: grid;\n+    gap: 8px;\n+    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);\n+    grid-template-rows: minmax(0, auto) minmax(0, 1fr) minmax(0, auto) minmax(\n+        0,\n+        auto\n+      );\n+\n+    &__box {\n+      padding: 16px;\n+      border-radius: 8px;\n+      background: var(--indigo-2);\n+      color: var(--indigo-5);\n+    }\n+  }\n+\n+  &__summary {\n+    &__most-boosted-post {\n+      grid-column: span 2;\n+      grid-row: span 2;\n+      padding: 0;\n+\n+      .status__content,\n+      .content-warning {\n+        color: var(--indigo-6);\n+      }\n+\n+      .detailed-status {\n+        border: 0;\n+      }\n+\n+      .content-warning {\n+        border: 0;\n+        background: var(--indigo-1);\n+\n+        .link-button {\n+          color: var(--indigo-5);\n+        }\n+      }\n+\n+      .detailed-status__meta__line {\n+        border-bottom-color: var(--indigo-3);\n+      }\n+\n+      .detailed-status__meta {\n+        text-overflow: ellipsis;\n+        overflow: hidden;\n+        white-space: nowrap;\n+      }\n+\n+      .detailed-status__meta,\n+      .poll__footer,\n+      .poll__link,\n+      .detailed-status .logo,\n+      .detailed-status__display-name {\n+        color: var(--indigo-5);\n+      }\n+\n+      .detailed-status__meta .animated-number,\n+      .detailed-status__display-name strong {\n+        color: var(--indigo-6);\n+      }\n+\n+      .poll__chart {\n+        background-color: var(--indigo-3);\n+\n+        &.leading {\n+          background-color: var(--goldenrod-2);\n+        }\n+      }\n+    }\n+\n+    &__followers {\n+      grid-column: span 1;\n+      text-align: center;\n+      position: relative;\n+      overflow: hidden;\n+      padding-block-start: 24px;\n+      padding-block-end: 24px;\n+\n+      --sparkline-gradient-top: rgba(86, 44, 252, 50%);\n+      --sparkline-gradient-bottom: rgba(86, 44, 252, 0%);\n+\n+      &__foreground {\n+        width: 100%;\n+        height: 100%;\n+        display: flex;\n+        flex-direction: column;\n+        align-items: center;\n+        justify-content: center;\n+        gap: 8px;\n+        position: relative;\n+        z-index: 1;\n+      }\n+\n+      &__number {\n+        font-size: 31px;\n+        font-weight: 600;\n+        line-height: 37px;\n+        color: var(--lime);\n+      }\n+\n+      &__label {\n+        font-size: 14px;\n+        font-weight: 600;\n+        line-height: 17px;\n+        color: var(--indigo-6);\n+      }\n+\n+      &__footnote {\n+        display: block;\n+        font-weight: 400;\n+        opacity: 0.5;\n+      }\n+\n+      svg {\n+        position: absolute;\n+        bottom: 0;\n+        inset-inline-end: 0;\n+        pointer-events: none;\n+        z-index: 0;\n+        height: 70%;\n+        width: auto;\n+\n+        path:first-child {\n+          fill: url('#gradient') !important;\n+          fill-opacity: 1 !important;\n+        }\n+\n+        path:last-child {\n+          stroke: var(--indigo-3) !important;\n+          fill: none !important;\n+        }\n+      }\n+    }\n+\n+    &__archetype {\n+      grid-column: span 1;\n+      display: flex;\n+      flex-direction: column;\n+      align-items: center;\n+      justify-content: center;\n+      text-align: center;\n+      gap: 8px;\n+      padding: 0;\n+\n+      img {\n+        display: block;\n+        width: 100%;\n+        height: auto;\n+        border-radius: 8px;\n+      }\n+\n+      &__label {\n+        padding: 16px;\n+        padding-bottom: 8px;\n+        font-size: 14px;\n+        line-height: 17px;\n+        font-weight: 600;\n+        color: var(--lime);\n+      }\n+    }\n+\n+    &__most-used-app {\n+      grid-column: span 1;\n+      text-align: center;\n+      display: flex;\n+      flex-direction: column;\n+      align-items: center;\n+      justify-content: center;\n+      gap: 8px;\n+      box-sizing: border-box;\n+\n+      &__label {\n+        font-size: 14px;\n+        line-height: 17px;\n+        font-weight: 600;\n+        color: var(--indigo-6);\n+      }\n+\n+      &__icon {\n+        font-size: 14px;\n+        line-height: 17px;\n+        font-weight: 600;\n+        color: var(--goldenrod-2);\n+      }\n+    }\n+\n+    &__percentile {\n+      grid-row: span 2;\n+      display: flex;\n+      flex-direction: column;\n+      align-items: center;\n+      justify-content: space-between;\n+      text-align: center;\n+      text-wrap: balance;\n+      padding: 16px 8px;\n+\n+      &__label {\n+        font-size: 14px;\n+        line-height: 17px;\n+      }\n+\n+      &__number {\n+        font-size: 61px;\n+        font-weight: 600;\n+        line-height: 73px;\n+        color: var(--goldenrod-2);\n+      }\n+\n+      &__footnote {\n+        font-size: 11px;\n+        line-height: 14px;\n+        opacity: 0.5;\n+      }\n+    }\n+\n+    &__new-posts {\n+      grid-column: span 2;\n+      text-align: center;\n+      position: relative;\n+      overflow: hidden;\n+\n+      &__label {\n+        font-size: 20px;\n+        font-weight: 600;\n+        line-height: 24px;\n+        color: var(--indigo-6);\n+        z-index: 1;\n+        position: relative;\n+      }\n+\n+      &__number {\n+        font-size: 76px;\n+        font-weight: 600;\n+        line-height: 91px;\n+        color: var(--goldenrod-2);\n+        z-index: 1;\n+        position: relative;\n+      }\n+\n+      svg {\n+        position: absolute;\n+        inset-inline-start: -7px;\n+        top: -4px;\n+        z-index: 0;\n+      }\n+    }\n+\n+    &__most-used-hashtag {\n+      grid-column: span 2;\n+      text-align: center;\n+      overflow: hidden;\n+\n+      &__hashtag {\n+        font-size: 42px;\n+        font-weight: 600;\n+        line-height: 58px;\n+        color: var(--indigo-6);\n+        margin-inline-start: -100%;\n+        margin-inline-end: -100%;\n+      }\n+\n+      &__label {\n+        font-size: 14px;\n+        font-weight: 600;\n+        line-height: 17px;\n+      }\n+    }\n+  }\n+}\n+\n+.annual-report-modal {\n+  max-width: 480px;\n+  background: var(--indigo-1);\n+  border-radius: 16px;\n+  display: flex;\n+  flex-direction: column;\n+  overflow-y: auto;\n+\n+  .loading-indicator .circular-progress {\n+    color: var(--lime);\n+  }\n+\n+  @media screen and (max-width: $no-columns-breakpoint) {\n+    border-bottom: 0;\n+    border-radius: 16px 16px 0 0;\n+  }\n+}\n+\n+.notification-group--annual-report {\n+  .notification-group__icon {\n+    color: var(--lime);\n+  }\n+\n+  .notification-group__main .link-button {\n+    font-weight: 500;\n+    color: var(--lime);\n+  }\n+}\n---\napp/javascript/styles/mastodon/components.scss\n@@ -1686,7 +1686,8 @@ body > [data-popper-placement] {\n \n .status__wrapper-direct,\n .notification-ungrouped--direct,\n-.notification-group--direct {\n+.notification-group--direct,\n+.notification-group--annual-report {\n   background: rgba($ui-highlight-color, 0.05);\n \n   &:focus {\n@@ -5782,7 +5783,8 @@ a.status-card {\n   inset-inline-start: 0;\n   inset-inline-end: 0;\n   bottom: 0;\n-  background: rgba($base-overlay-background, 0.7);\n+  opacity: 0.9;\n+  background: $base-overlay-background;\n   transition: background 0.5s;\n }\n \n---\napp/models/notification.rb\n@@ -67,6 +67,9 @@ class Notification < ApplicationRecord\n     moderation_warning: {\n       filterable: false,\n     }.freeze,\n+    annual_report: {\n+      filterable: false,\n+    }.freeze,\n     'admin.sign_up': {\n       filterable: false,\n     }.freeze,\n@@ -101,6 +104,7 @@ class Notification < ApplicationRecord\n     belongs_to :report, inverse_of: false\n     belongs_to :account_relationship_severance_event, inverse_of: false\n     belongs_to :account_warning, inverse_of: false\n+    belongs_to :generated_annual_report, inverse_of: false\n   end\n \n   validates :type, inclusion: { in: TYPES }\n@@ -309,7 +313,7 @@ def set_from_account\n       self.from_account_id = activity&.status&.account_id\n     when 'Account'\n       self.from_account_id = activity&.id\n-    when 'AccountRelationshipSeveranceEvent', 'AccountWarning'\n+    when 'AccountRelationshipSeveranceEvent', 'AccountWarning', 'GeneratedAnnualReport'\n       # These do not really have an originating account, but this is mandatory\n       # in the data model, and the recipient's account will by definition\n       # always exist\n---\napp/models/notification_group.rb\n@@ -51,6 +51,7 @@ def self.from_notifications(notifications, pagination_range: nil, grouped_types:\n            :report,\n            :account_relationship_severance_event,\n            :account_warning,\n+           :generated_annual_report,\n            to: :notification, prefix: false\n \n   class << self\n---\napp/serializers/rest/annual_report_event_serializer.rb\n@@ -0,0 +1,9 @@\n+# frozen_string_literal: true\n+\n+class REST::AnnualReportEventSerializer < ActiveModel::Serializer\n+  attributes :year\n+\n+  def year\n+    object.year.to_s\n+  end\n+end\n---\napp/serializers/rest/notification_group_serializer.rb\n@@ -13,6 +13,7 @@ class REST::NotificationGroupSerializer < ActiveModel::Serializer\n   belongs_to :report, if: :report_type?, serializer: REST::ReportSerializer\n   belongs_to :account_relationship_severance_event, key: :event, if: :relationship_severance_event?, serializer: REST::AccountRelationshipSeveranceEventSerializer\n   belongs_to :account_warning, key: :moderation_warning, if: :moderation_warning_event?, serializer: REST::AccountWarningSerializer\n+  belongs_to :generated_annual_report, key: :annual_report, if: :annual_report_event?, serializer: REST::AnnualReportEventSerializer\n \n   def sample_account_ids\n     object.sample_accounts.pluck(:id).map(&:to_s)\n@@ -38,6 +39,10 @@ def moderation_warning_event?\n     object.type == :moderation_warning\n   end\n \n+  def annual_report_event?\n+    object.type == :annual_report\n+  end\n+\n   def page_min_id\n     object.pagination_data[:min_id].to_s\n   end\n---\napp/services/notify_service.rb\n@@ -3,7 +3,7 @@\n class NotifyService < BaseService\n   include Redisable\n \n-  # TODO: the severed_relationships type probably warrants email notifications\n+  # TODO: the severed_relationships and annual_report types probably warrants email notifications\n   NON_EMAIL_TYPES = %i(\n     admin.report\n     admin.sign_up\n@@ -12,6 +12,7 @@ class NotifyService < BaseService\n     status\n     moderation_warning\n     severed_relationships\n+    annual_report\n   ).freeze\n \n   class BaseCondition\n@@ -25,6 +26,7 @@ class BaseCondition\n       poll\n       update\n       account_warning\n+      annual_report\n     ).freeze\n \n     def initialize(notification)\n@@ -100,7 +102,7 @@ def statuses_that_mention_sender\n   class DropCondition < BaseCondition\n     def drop?\n       blocked   = @recipient.unavailable?\n-      blocked ||= from_self? && %i(poll severed_relationships moderation_warning).exclude?(@notification.type)\n+      blocked ||= from_self? && %i(poll severed_relationships moderation_warning annual_report).exclude?(@notification.type)\n \n       return blocked if message? && from_staff?\n \n---\nconfig/routes/api.rb\n@@ -52,7 +52,7 @@\n     resources :scheduled_statuses, only: [:index, :show, :update, :destroy]\n     resources :preferences, only: [:index]\n \n-    resources :annual_reports, only: [:index] do\n+    resources :annual_reports, only: [:index, :show] do\n       member do\n         post :read\n       end\n---\n\n\n---\n\nChoice D:\napp/javascript/mastodon/features/status/components/card.jsx\n@@ -141,7 +141,7 @@ export default class Card extends PureComponent {\n     const showAuthor  = !!card.getIn(['authors', 0, 'accountId']);\n \n     const description = (\n-      <div className='status-card__content'>\n+      <div className='status-card__content' dir='auto'>\n         <span className='status-card__host'>\n           <span lang={language}>{provider}</span>\n           {card.get('published_at') && <> \u00b7 <RelativeTimestamp timestamp={card.get('published_at')} /></>}\n---\n\n\n---\n\n"}], "ideal": "D"}
